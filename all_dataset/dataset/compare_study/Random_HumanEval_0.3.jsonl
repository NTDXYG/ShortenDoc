{"task_id":"HumanEval\/0","prompt":"from typing import List\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n    \"\"\"\n    Check if given list, are numbers to each than\n   given threshold.\n _close_e([1.0, 2.0], 0.5)\n   \n  >>>__elements([1.0,., 3., 40,., 2.0 0.)\n    True\n    \"\"\"\n","raw":"Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True","reduced":"Check if in given list of numbers, are any two numbers closer to each than given threshold.>>> has_close_elements([1.0, 2, 3], 0.5) False >>> hasclose180, 40,, 20], 03 True"}
{"task_id":"HumanEval\/1","prompt":"from typing import List\n\n\ndef separate_paren_groups(paren_string: str) -> List[str]:\n    \"\"\"\n    Input to function is string multiple groups of nested Your\n   separate those group separate strings return the list those\n  Separate are balanced ( open brace is properly closed and not nested within each other\n   any in input string.  >>> separateparengroups(' ) (( )) (( ) ))')    ['() '(())', '(()())']\n    \"\"\"\n","raw":"Input to this function is a string containing multiple groups of nested parentheses. Your goal is to\n    separate those group into separate strings and return the list of those.\n    Separate groups are balanced (each open brace is properly closed) and not nested within each other\n    Ignore any spaces in the input string.\n    >>> separate_paren_groups('( ) (( )) (( )( ))')\n    ['()', '(())', '(()())']","reduced":"Input to this function multiple groups nested parenthesesYour goal separate those group into separate strings return list those.Separate groups are balanced (each open brace properly closed not nested within Ignore any spaces input string>>> separate_paren_groups('( ) (( )) ((( ))') ['() '(())())"}
{"task_id":"HumanEval\/2","prompt":"def truncate_number(number: float) -> float:\n    \"\"\"\n    Given a floating number, can decomposed into\n   and part (largest integer smaller than number) dec\n   (leftover part always than 1\n\n   Return the decimal part of the number    >>>_number(3.).5\n    \"\"\"\n","raw":"Given a positive floating point number, it can be decomposed into\n    and integer part (largest integer smaller than given number) and decimals\n    (leftover part always smaller than 1).\n\n    Return the decimal part of the number.\n    >>> truncate_number(3.5)\n    0.5","reduced":"Given a positive floating number it can decomp and integer part (largest smaller given number decimleftover part always smaller 1Return the decimal part number.>>> trunc_number(3.5 05"}
{"task_id":"HumanEval\/3","prompt":"from typing import List\n\n\ndef below_zero(operations: List[int]) -> bool:\n    \"\"\"\n    You given list of deposit and withdrawal a account that starts\n    zero balance Your task to detect if at any point the of account fallls below,  at that function return True. Otherwise should False.\n    below_([, 2 3    False    >>> belowzero1 2,4, 5])   True\n    \"\"\"\n","raw":"You're given a list of deposit and withdrawal operations on a bank account that starts with\n    zero balance. Your task is to detect if at any point the balance of account fallls below zero, and\n    at that point function should return True. Otherwise it should return False.\n    >>> below_zero([1, 2, 3])\n    False\n    >>> below_zero([1, 2, -4, 5])\n    True","reduced":"You're given list deposit and operations on a bank that starts zero balanceYour task detect if at any the balance account fallls below zero, and at that function should return TrueOtherwise it should return False.>>> below_zero([1 2]) False >>> below -4, 5"}
{"task_id":"HumanEval\/4","prompt":"from typing import List\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n    \"\"\"\n    For a given of input numbers Absolute Deviation   around the this   iation is the difference between each\n    element and a centerpointmean in this case\n   | x - x_ |\n    >>> mean_absoluteiation([.0, 2.0, 3.0 4.0   1.0\n    \"\"\"\n","raw":"For a given list of input numbers, calculate Mean Absolute Deviation\n    around the mean of this dataset.\n    Mean Absolute Deviation is the average absolute difference between each\n    element and a centerpoint (mean in this case):\n    MAD = average | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0","reduced":"For a given list input numbers calculate Mean Absolute Dev around the mean of this datasetMean Absolute Dev is the average absolute difference each element and a centerpoint (mean in this): MAD = average | x - x_mean | >>> mean_([1.0 2]) 1"}
{"task_id":"HumanEval\/5","prompt":"from typing import List\n\n\ndef intersperse(numbers: List[int], delimeter: int) -> List[int]:\n    \"\"\"\n    Insert a 'delimeter every two of list `numbers'\n   intersperse([],)   []\n    >>> intersperse([1, 3],)\n , 4 4, 3]\n    \"\"\"\n","raw":"Insert a number 'delimeter' between every two consecutive elements of input list `numbers'\n    >>> intersperse([], 4)\n    []\n    >>> intersperse([1, 2, 3], 4)\n    [1, 4, 2, 4, 3]","reduced":"Insert a number 'delimeter between every two consecutive elements of input list `numbers' >>> intersperse([], 4) [] >>>1], 4 [1 4 2 4"}
{"task_id":"HumanEval\/6","prompt":"from typing import List\n\n\ndef parse_nested_parens(paren_string: str) -> List[int]:\n    \"\"\"\n     to this function is string represented multiple groups nested parentheses separated by spaces.\n  each of, output the deepest level of nesting of parentheses.  .g. (()) has maximum levels of while)) has\n\n    >>> parse_nested_paren('(()()())()())')\n   [2,,\n    \"\"\"\n","raw":"Input to this function is a string represented multiple groups for nested parentheses separated by spaces.\n    For each of the group, output the deepest level of nesting of parentheses.\n    E.g. (()()) has maximum two levels of nesting while ((())) has three.\n\n    >>> parse_nested_parens('(()()) ((())) () ((())()())')\n    [2, 3, 1, 3]","reduced":"Input to this function represented multiple groups for nested parentheses separatedFor each group, output the deepest level nesting of parenthesesE.g (()()) has maximum two levels while ((())) has three.>>> parsenparen('(()()) ((())) () ((())() [2 1"}
{"task_id":"HumanEval\/7","prompt":"from typing import List\n\n\ndef filter_by_substring(strings: List[str], substring: str) -> List[str]:\n    \"\"\"\n    Filter an input list only for ones given substring\n  >>> filter_by_substring([ 'a')\n  \n   filterby_string(abc',bd 'c', 'array], '\n    ['abc',bacd 'array\n    \"\"\"\n","raw":"Filter an input list of strings only for ones that contain given substring\n    >>> filter_by_substring([], 'a')\n    []\n    >>> filter_by_substring(['abc', 'bacd', 'cde', 'array'], 'a')\n    ['abc', 'bacd', 'array']","reduced":"Filter an input list of strings only for ones that contain given subst >>> filter_by_sub([], 'a') [] >>> filter(['abc',bacdcde',array'],a ['abcarray']"}
{"task_id":"HumanEval\/8","prompt":"from typing import List, Tuple\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n    \"\"\"\n    For a list of, return a of a sum and a product all the integers in a list.\n   should to 0 and empty product should be to   >>>_product\n   (, 1)\n    >>>_product, 2,, 4])   10 24)\n    \"\"\"\n","raw":"For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list.\n    Empty sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n    (0, 1)\n    >>> sum_product([1, 2, 3, 4])\n    (10, 24)","reduced":"For a given list integers return a tuple consisting a sum and a product of all the integers in aEmpty sum should equal 0 and empty product should 1.>>> sum_product([]) (0, 1) >>> sum1,,10 24"}
{"task_id":"HumanEval\/9","prompt":"from typing import List, Tuple\n\n\ndef rolling_max(numbers: List[int]) -> List[int]:\n    \"\"\"\n     a given list of, list of rolling maximum found\n    the sequence.\n  _max([1 2, 3, 2, 3, 4])\n   [1, 2, 3, 4, 4]\n    \"\"\"\n","raw":"From a given list of integers, generate a list of rolling maximum element found until given moment\n    in the sequence.\n    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]","reduced":"From a given list of integers, generate a list rolling maximum element found until given moment in the sequence>>> rolling_max([1 2, 2 3 4 2]) [1 3 3 4]"}
{"task_id":"HumanEval\/10","prompt":"def is_palindrome(string: str) -> bool:\n    \"\"\" Test if given string is a palindrome \"\"\"\n    return string == string[::-1]\n\n\ndef make_palindrome(string: str) -> str:\n    \"\"\"\n    Find the shortest palind begins a supplied string.\n  Al idea simple:\n  - the longest postfix of string that is palindrome\n   the of string reverse of string prefix that comes before the palindrom suffix.  make_palindrome''\n   ''\n    makeindcat\n    'catac'\n    >>> make_indrome('c')\n   'ac'\n    \"\"\"\n","raw":"Find the shortest palindrome that begins with a supplied string.\n    Algorithm idea is simple:\n    - Find the longest postfix of supplied string that is a palindrome.\n    - Append to the end of the string reverse of a string prefix that comes before the palindromic suffix.\n    >>> make_palindrome('')\n    ''\n    >>> make_palindrome('cat')\n    'catac'\n    >>> make_palindrome('cata')\n    'catac'","reduced":"Find the shortest palind that begins a supplied string.Algorithm idea is simple: - Find longest postfix of supplied string that is a pal.- Append to the end string reverse of a string prefix that comes palrom suffix>>> make_palind('') '' >>> make('cat') 'catac'cata"}
{"task_id":"HumanEval\/11","prompt":"from typing import List\n\n\ndef string_xor(a: str, b: str) -> str:\n    \"\"\"\n    Input are two strings and b only of 1 and\n   Perform binary X on these return also as a string.    >>> stringx('010', '')\n    '\n    \"\"\"\n","raw":"Input are two strings a and b consisting only of 1s and 0s.\n    Perform binary XOR on these inputs and return result also as a string.\n    >>> string_xor('010', '110')\n    '100'","reduced":"Input are two strings a and consisting only 1sPerform binary X on these inputs and return result also as>>> string_xor('010110 '100"}
{"task_id":"HumanEval\/12","prompt":"from typing import List, Optional\n\n\ndef longest(strings: List[str]) -> Optional[str]:\n    \"\"\"\n    Out of list of strings, return one. Return one case   of same Return None in case the input is empty.  >>> longest([])\n\n    >>> longest(['a', 'b', 'c'  'a'\n  >>>(['', 'bb', 'ccc'])\n   '\n    \"\"\"\n","raw":"Out of list of strings, return the longest one. Return the first one in case of multiple\n    strings of the same length. Return None in case the input list is empty.\n    >>> longest([])\n\n    >>> longest(['a', 'b', 'c'])\n    'a'\n    >>> longest(['a', 'bb', 'ccc'])\n    'ccc'","reduced":"Out of list of strings, return the longest one.Return the first one in case of multiple strings of the length.Return None in case the input list is empty>>> longest([]) >>> longest(['a',' 'a >>>bbccccc"}
{"task_id":"HumanEval\/13","prompt":"def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\"\n    Return a greatest div of integers a and b\n   >>> greatestcommon_divisor, 5\n  1\n  >>> greatest_divisor(25, 15)\n  5\n    \"\"\"\n","raw":"Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5","reduced":"Return a greatest common divis of two integers a and >>> greatest_common_div(3, 5) 1 >>> greatest25, 15 5"}
{"task_id":"HumanEval\/14","prompt":"from typing import List\n\n\ndef all_prefixes(string: str) -> List[str]:\n    \"\"\"\n     list of alles from shortest to longest of the string\n  all_es('abc')\n   a 'ab 'abc\n    \"\"\"\n","raw":"Return list of all prefixes from shortest to longest of the input string\n    >>> all_prefixes('abc')\n    ['a', 'ab', 'abc']","reduced":"Return list of all prefix from shortest to of the input string >>> all_('abc') ['aababc"}
{"task_id":"HumanEval\/15","prompt":"def string_sequence(n: int) -> str:\n    \"\"\"\n    Return a string containing space-ited numbers starting from 0 upto n inclusive.    >>> stringsequence(\n       >>> stringsequence(5) '2 3 4'\n    \"\"\"\n","raw":"Return a string containing space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'","reduced":"Return a string containing space-del numbers starting from upt n inclusive.>>> string_sequence(0) '0 >>> string50 1 2'"}
{"task_id":"HumanEval\/16","prompt":"def count_distinct_characters(string: str) -> int:\n    \"\"\"\n    Given string, find out how many distinct charactersardless) does it consist of\n    >>>distinct_charzXY\n    3\n  >>> count_inct_acters('Jerry\n   \n    \"\"\"\n","raw":"Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n    4","reduced":"Given a string, find out how many distinct characters (reg case does it consist >>> count_distinct_char('xyXY') 3 >>> countJerry') 4"}
{"task_id":"HumanEval\/17","prompt":"from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\"\n    Input to this is a string representing musical notes ASCII format.\n  task is to this string and return list of integers corresponding to how beats does each    not last    is   '' whole note, lasts beats   'o|' - half note, two beats\n '.' - quater note one beat    >>>_('o o|| o.||..| o')\n  [4, 2, 1, 2, 2, 1, 1,, 4 4]\n    \"\"\"\n","raw":"Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]","reduced":"Input to this function a string representing musical notes in a special ASCII formatYour task parse this string and return list integers corresponding how beats does each not lastHere is a legend: 'o' - whole note, lasts four beats 'o|' half two '.| quater note one >>> parse_music('o o|. o o.... o') [4, 2 1 2 2 1 1 4 4]"}
{"task_id":"HumanEval\/18","prompt":"def how_many_times(string: str, substring: str) -> int:\n    \"\"\"\n    Find many a substring can be the original string. Count overlaping cases.\n    howmanytimes('',a\n  0\n   >>> how_times', '')\n   \n    how_manytimes(' 'aa')\n   3\n    \"\"\"\n","raw":"Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3","reduced":"Find how many times a given substring can found in the original string.Count overlaping cases.>>> how_manytimes('', 'a') 0 >>> howaaa',a 3aaaa',aa 3"}
{"task_id":"HumanEval\/19","prompt":"from typing import List\n\n\ndef sort_numbers(numbers: str) -> str:\n    \"\"\"\n    Input is aimited string of numberals from 'zero'nine\n  choices are 'zeroone', 'two',''',',','seven 'eight and ''.\n   Return the string with numbers sorted from smallest    >>> sort_numbers('three five\n    'one three'\n    \"\"\"\n","raw":"Input is a space-delimited string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three one five')\n    'one three five'","reduced":"Input is a space-delim string of numberals from 'zero' 'nine'.Valid choices are 'zero', 'one', 'two' and'.Return the string with numbers sorted from smallest >>> sort_numbers('three one five') 'one three five'"}
{"task_id":"HumanEval\/20","prompt":"from typing import List, Tuple\n\n\ndef find_closest_elements(numbers: List[float]) -> Tuple[float, float]:\n    \"\"\"\n    From list of numbers ( length at) and return two that the to\n   other return them in order (smaller number larger number).\n  >>> findclestlements.0, 2.0,, 4.0 50,.2])    (2.0,)\n  >>> find_osestlements([10,.0 3., 4.0 5.0, 2.0])\n   (2.0, 20)\n    \"\"\"\n","raw":"From a supplied list of numbers (of length at least two) select and return two that are the closest to each\n    other and return them in order (smaller number, larger number).\n    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.2])\n    (2.0, 2.2)\n    >>> find_closest_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0])\n    (2.0, 2.0)","reduced":"From a supplied list of numbers (of length at least two) select and return two that are the closest to each other and return them in order (smaller number, larger number).>>> find_closest_elements([1.0, 2.0, 3, 4, 5, 22]) (2.0, 22) >>> findcle([10 200]) (20"}
{"task_id":"HumanEval\/21","prompt":"from typing import List\n\n\ndef rescale_to_unit(numbers: List[float]) -> List[float]:\n    \"\"\"\n    Given numbers (of at least two elements), apply to that list,\n   such that number become 0 the largest 1\n   >>>ale_tounit([.00, 3.0, 4, 5.0\n    [00 025, 05, 0.75 1.]\n    \"\"\"\n","raw":"Given list of numbers (of at least two elements), apply a linear transform to that list,\n    such that the smallest number will become 0 and the largest will become 1\n    >>> rescale_to_unit([1.0, 2.0, 3.0, 4.0, 5.0])\n    [0.0, 0.25, 0.5, 0.75, 1.0]","reduced":"Given list of numbers (of at two elements), apply a linear transform to that list, such that the smallest number will become 0 and largest will >>> rescale_to_unit([1.0 2, 3,,]) [0.0 0255 075 1]"}
{"task_id":"HumanEval\/22","prompt":"from typing import List, Any\n\n\ndef filter_integers(values: List[Any]) -> List[int]:\n    \"\"\"\n    Filter given of values only for   >>>ers( 314, 5])   [\n    >>> filter_integers([1, 2,, 'abc', {}, [\n    [1, 2,]\n    \"\"\"\n","raw":"Filter given list of any python values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n    >>> filter_integers([1, 2, 3, 'abc', {}, []])\n    [1, 2, 3]","reduced":"Filter given list any python values only for integers >>> filter_integers(['a 3.14, 5]) [5] >>>([1, 'abc {}, []]1]"}
{"task_id":"HumanEval\/23","prompt":"def strlen(string: str) -> int:\n    \"\"\"\n    Return length of given\n   strlen()\n  \n   ('abc')\n   3\n    \"\"\"\n","raw":"Return length of given string\n    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3","reduced":"Return length of given string >>> strlen'' 0('abc 3"}
{"task_id":"HumanEval\/24","prompt":"def largest_divisor(n: int) -> int:\n    \"\"\"\n    For a given number, find the largest number that divides evenly  _divisor(15)\n    5\n    \"\"\"\n","raw":"For a given number n, find the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n    5","reduced":"For a given number n find largest that divides n evenly, smaller than >>> largestdiv15 5"}
{"task_id":"HumanEval\/25","prompt":"from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\"\n    Return list of factors of given integer in from smallest to largest    of be listed number of times to many times it in factorization.\n   should equal to the of all\n   factorize)    [2, 2 2   >>> factorize(25)\n  [5, 5   >>> factorize(70)\n   [2,, 7]\n    \"\"\"\n","raw":"Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]","reduced":"Return list of prime factors of given integer in the order from smallest.Each of factors should listed number times corresponding how times it appeares in factorization.Input number should equal product of all factors >>> factorize(8) [2 2 2] >>> factor255 5]702 5 7"}
{"task_id":"HumanEval\/26","prompt":"from typing import List\n\n\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\"\n    From of, remove elements occur more than once\n  Keep left the same as in the.\n   remove_duplicates([1,, 3, 4])\n    [, 3, 4]\n    \"\"\"\n","raw":"From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]","reduced":"From a list integers, remove all elements that occur moreKeep order of elements left the same as in the input.>>> remove_duicates([1 2 4]) [ 3]"}
{"task_id":"HumanEval\/27","prompt":"def flip_case(string: str) -> str:\n    \"\"\"\n    For a given string, flip lower characters uase andase lower.  >>> flip_caseHello')\n   'hELLO'\n    \"\"\"\n","raw":"For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'","reduced":"For a given string flip lower characters to u and u to>>> flip_case('Hello') 'hELLO"}
{"task_id":"HumanEval\/28","prompt":"from typing import List\n\n\ndef concatenate(strings: List[str]) -> str:\n    \"\"\"\n    Concatenate of strings into a\n    >>> concaten([\n   ''   >>> concatenatea', '', 'c'])  ''\n    \"\"\"\n","raw":"Concatenate list of strings into a single string\n    >>> concatenate([])\n    ''\n    >>> concatenate(['a', 'b', 'c'])\n    'abc'","reduced":"Concatate list of strings into a single string >>> concaten([]) '' >>>aten(['a' 'abc'"}
{"task_id":"HumanEval\/29","prompt":"from typing import List\n\n\ndef filter_by_prefix(strings: List[str], prefix: str) -> List[str]:\n    \"\"\"\n    Filter an input list strings only for ones that start with a given prefix\n    >>> filter_prefixa\n     >>> filter_by_['abc 'cd', 'cde', 'array'\n    [' 'array']\n    \"\"\"\n","raw":"Filter an input list of strings only for ones that start with a given prefix.\n    >>> filter_by_prefix([], 'a')\n    []\n    >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    ['abc', 'array']","reduced":"Filter an input list of strings only for ones that start a given prefix>>> filter_by_prefix([], 'a') [] >>>(['abcbcdcdearray'],a ['array']"}
{"task_id":"HumanEval\/30","prompt":"def get_positive(l: list):\n    \"\"\"\n    Return positive numbers in list\n   get_([-1, 2, -4, 5,])\n   [2 5 6]\n >>>positive([5 3, -, 2, - 3, 9,, 123, 1, -10])\n, 3, 2 3,,, 1]\n    \"\"\"\n","raw":"Return only positive numbers in the list.\n    >>> get_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]","reduced":"Return only positive numbers in the list.>>> get_positive([- 2, -4, 5, 6]) [2 5 >>>positive5 3 -5 2 -3 3, 9, 0, 123, 1 -10])5 3 2 3 9 123]"}
{"task_id":"HumanEval\/31","prompt":"def is_prime(n):\n    \"\"\"\n     true if is prime, false otherwise.\n   is_prime(6)    False\n   is_prime()\n    True\n  >>> is_prime(11)\n   True\nprime(13)\n    True    >>> is_prime()   True\n    >>> is_prime\n \n >>>_prime(1)\n  \n    \"\"\"\n","raw":"Return true if a given number is prime, and false otherwise.\n    >>> is_prime(6)\n    False\n    >>> is_prime(101)\n    True\n    >>> is_prime(11)\n    True\n    >>> is_prime(13441)\n    True\n    >>> is_prime(61)\n    True\n    >>> is_prime(4)\n    False\n    >>> is_prime(1)\n    False","reduced":"Return true if a given number is prime, and false otherwise.>>> is_prime(6) False >>> isprime101) True >>> is11) True >>> is13441 True is61) True is4) False >>> is1 False"}
{"task_id":"HumanEval\/32","prompt":"import math\n\n\ndef poly(xs: list, x: float):\n    \"\"\"\n    Evaluates polynomial with coefficients xs at point x.\n    return xs[0] + xs[1] * x + xs[1] * x^2 + .... xs[n] * x^n\n    \"\"\"\n    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])\n\n\ndef find_zero(xs: list):\n    \"\"\"\n     are of a polynomial.\n   _zero find xx = 0\n _zero only only zero point even if there are many.\n   Moreover, find_zero only list x having even number of coefficients\n  non zero coefficient it\n   a solution.   >>> round(findzero1, 2]), 2) #(x) = + 2x\n  -.\n  (find_zero([, 11, -6, 1 2) ( - 1)x - 2 ( - 36 +x - 6x2 +^3\n   1.0\n    \"\"\"\n","raw":"xs are coefficients of a polynomial.\n    find_zero find x such that poly(x) = 0.\n    find_zero returns only only zero point, even if there are many.\n    Moreover, find_zero only takes list xs having even number of coefficients\n    and largest non zero coefficient as it guarantees\n    a solution.\n    >>> round(find_zero([1, 2]), 2) # f(x) = 1 + 2x\n    -0.5\n    >>> round(find_zero([-6, 11, -6, 1]), 2) # (x - 1) * (x - 2) * (x - 3) = -6 + 11x - 6x^2 + x^3\n    1.0","reduced":"xs are coefficients a po.find_zero find x such poly( 0.find_zero returns only only zero point, even there many.Moreover find_zero only takes list xs having even number coefficients and largest non zero coefficient as it guarantees a solution>>> round(find_zero([1]), 2 # f(x = 1 +x -0-6 11, -6 1 2 (x - 1 * * 3 = - + 11x - 6x^ + x3 1.0"}
{"task_id":"HumanEval\/33","prompt":"def sort_third(l: list):\n    \"\"\"\n    This takes a list l and returns a list that\n    l' is l inies are divisible by three, while its values at the indicies areisible by three equal  the values of correspondingies of l, but sorted.\n    >>> sort_([ 2, 3])    [,,\n   >>> sort_, 6, 4 8, 9, 2\n  2 6 3 4, 8, 9 5]\n    \"\"\"\n","raw":"This function takes a list l and returns a list l' such that\n    l' is identical to l in the indicies that are not divisible by three, while its values at the indicies that are divisible by three are equal\n    to the values of the corresponding indicies of l, but sorted.\n    >>> sort_third([1, 2, 3])\n    [1, 2, 3]\n    >>> sort_third([5, 6, 3, 4, 8, 9, 2])\n    [2, 6, 3, 4, 8, 9, 5]","reduced":"This function takes a list l and returns a list l' such l' is identical l in the indicies that are not div three, while its values at the indic that div three equal the values of the corresponding indic of l, but sorted.>>> sort_third([1 2]) [1 >>>third5 3, 4, 8, 9, 2])2 6 3 8 5]"}
{"task_id":"HumanEval\/34","prompt":"def unique(l: list):\n    \"\"\"\n    Return sorted unique a list\n    >>>([5,, 2, 3 3, 0,])    [0 2,, 5,, 123]\n    \"\"\"\n","raw":"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]","reduced":"Return sorted unique elements in a list >>> unique([5 3 5, 2 3, 3 9 0 123]) [0 2 3 5 9 123"}
{"task_id":"HumanEval\/35","prompt":"def max_element(l: list):\n    \"\"\"\n    Return element list.\n   max_element([1, 2,\n  3    maxelement([5, 3 -5, -3, 3, 0, 123,, -])\n    123\n    \"\"\"\n","raw":"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123","reduced":"Return maximum element in the list.>>> maxelement([1 3 >>>5 3 -5, 2, -3, 3, 9, 0 123, 1 -10 123"}
{"task_id":"HumanEval\/36","prompt":"def fizz_buzz(n: int):\n    \"\"\"\n     the number of times 7 appears integers less than which are div 11 or 13.    fizz_b(50)  \n  fizzb)\n   2\n    >>> fizz_uzz(79)\n   3\n    \"\"\"\n","raw":"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3","reduced":"Return the number times the digit 7 appears in integers less n which are div 11 or 13.>>> fizz_buzz(50) 0 >>> fb78 2 >>>79 3"}
{"task_id":"HumanEval\/37","prompt":"def sort_even(l: list):\n    \"\"\"\n     function takes list l and a list l such\n   l to l in theies, while its values at evenies equal  to the values of the evenies of l but sorted.\n   >>> sort_even([1, 2,])\n   [1 2, 3]\n   >>>_even,, 4])    [3, 6 5,\n    \"\"\"\n","raw":"This function takes a list l and returns a list l' such that\n    l' is identical to l in the odd indicies, while its values at the even indicies are equal\n    to the values of the even indicies of l, but sorted.\n    >>> sort_even([1, 2, 3])\n    [1, 2, 3]\n    >>> sort_even([5, 6, 3, 4])\n    [3, 6, 5, 4]","reduced":"This function takes a list l and returns a list l' such l' is identical l in the odd indicies, while its values at the even indic equal the values of the even indic of l, but sorted.>>> sort_even([1 2]) [1 >>>5 3, 43 6 5 4"}
{"task_id":"HumanEval\/38","prompt":"def encode_cyclic(s: str):\n    \"\"\"\n    returns encoded string by cycling groups of three characters.\n    \"\"\"\n    # split string to groups. Each of length 3.\n    groups = [s[(3 * i):min((3 * i + 3), len(s))] for i in range((len(s) + 2) \/\/ 3)]\n    # cycle elements in each group. Unless group has fewer elements than 3.\n    groups = [(group[1:] + group[0]) if len(group) == 3 else group for group in groups]\n    return \"\".join(groups)\n\n\ndef decode_cyclic(s: str):\n    \"\"\"\n    akes input string encoded with encodeic function. decoded string.\n    \"\"\"\n","raw":"takes as input string encoded with encode_cyclic function. Returns decoded string.","reduced":"takes as input string encoded encodecycl functionReturns dec string"}
{"task_id":"HumanEval\/39","prompt":"def prime_fib(n: int):\n    \"\"\"\n    prime_ibth is aonacci number and it also prime.  >>> prime_f(1)   2\n   >>> primeib(2)   3\n   primefib3)\n   5   >>> prime_fib(4)\n \n  >>> prime_fib(5)\n   89\n    \"\"\"\n","raw":"prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    >>> prime_fib(1)\n    2\n    >>> prime_fib(2)\n    3\n    >>> prime_fib(3)\n    5\n    >>> prime_fib(4)\n    13\n    >>> prime_fib(5)\n    89","reduced":"prime_fib returns n-th number that is a Fib number and it's also prime.>>> prime_fib(1) 2 >>> primef(2 3 >>> primef3 5 >>> prime4 13 >>> prime 89"}
{"task_id":"HumanEval\/40","prompt":"def triples_sum_to_zero(l: list):\n    \"\"\"\n    tri__ takes a list of integers as an input    there are three distinct elements list\n   sum to zero, and False otherwise.\n\n    >>> triples_tozero1, 3, 5, 0])\n \n   >>> trisumzero([1,, -2 1])\n \n   >>> triples_sum_to_zero([1, 2 3,])  False\n >>> tri__to_([, 4, -, 9, 7\n  True\n   >>> triples_sum_to_zero([1])\n   False\n    \"\"\"\n","raw":"triples_sum_to_zero takes a list of integers as an input.\n    it returns True if there are three distinct elements in the list that\n    sum to zero, and False otherwise.\n\n    >>> triples_sum_to_zero([1, 3, 5, 0])\n    False\n    >>> triples_sum_to_zero([1, 3, -2, 1])\n    True\n    >>> triples_sum_to_zero([1, 2, 3, 7])\n    False\n    >>> triples_sum_to_zero([2, 4, -5, 3, 9, 7])\n    True\n    >>> triples_sum_to_zero([1])\n    False","reduced":"triples_sum_tozero takes a list of integers as an input.it returns True if there are three distinct elements in the list that sum to zero, and False otherwise.>>> triples_sum_tozero([1, 3, 5, 0]) False >>> trisumzero([1 3 -2, 1]) True >>> tri1 2 3, 7]) False >>> tri2 4 -5 3, 9, 7 True tri1]) False"}
{"task_id":"HumanEval\/41","prompt":"def car_race_collision(n: int):\n    \"\"\"\n    Imagine a road that's perfectly infinitely long.\n   n are driving left to right;  simultaneously, a set of n cars\n   driving to left.   The two sets cars being from    each.  All cars move the speed  Two cars are to collide   when a car that's moving left right that's right to left.\n, the cars are sturdy strong;, continue\n   their trajectory they.\n\n    This function outputs the number of such collisions\n    \"\"\"\n","raw":"Imagine a road that's a perfectly straight infinitely long line.\n    n cars are driving left to right;  simultaneously, a different set of n cars\n    are driving right to left.   The two sets of cars start out being very far from\n    each other.  All cars move in the same speed.  Two cars are said to collide\n    when a car that's moving left to right hits a car that's moving right to left.\n    However, the cars are infinitely sturdy and strong; as a result, they continue moving\n    in their trajectory as if they did not collide.\n\n    This function outputs the number of such collisions.","reduced":"Imagine a road that's a perfectly straight infinitely long linen cars are driving left to; simultaneously, a different set nThe two sets cars start out being very far fromAll cars move in the speed.Two cars are said collide when car that's moving left to hits car toHowever the cars are infinitely sturdy strong; as a continue moving in their trajectory as if did collideThis function outputs number such collisions."}
{"task_id":"HumanEval\/42","prompt":"def incr_list(l: list):\n    \"\"\"\n    Return list elementsmented by 1.    >>> incr_1,, 3])   [ 3, 4]\n   >>>r_5, 3, 5, 2 3, 9, 123])\n  [6, 4, 6, 3, 4,,, 124\n    \"\"\"\n","raw":"Return list with elements incremented by 1.\n    >>> incr_list([1, 2, 3])\n    [2, 3, 4]\n    >>> incr_list([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [6, 4, 6, 3, 4, 4, 10, 1, 124]","reduced":"Return list with elements incre by 1.>>> incr_list([1 2,]) [2 3,] >>>5 3 5, 2, 3, 3, 9, 0, 123])6 4 6 3 4 4 10 1 124]"}
{"task_id":"HumanEval\/43","prompt":"def pairs_sum_to_zero(l):\n    \"\"\"\n    airs_sumto list of integers as an\n   it returns True if there two distinct elements in the list that   sum, and.\n    >>> pairs_sum__zero1,, 5 0])\n    False\n   >>>_sumzero([1, 3, -2 1])\n   False\n  >>>_sum_to_zero, 3, 7])\n  False\n   pairssum_to_([2 4 -5, 3, 7\n    True\n    >>> pairssum_zero])\n  False\n    \"\"\"\n","raw":"pairs_sum_to_zero takes a list of integers as an input.\n    it returns True if there are two distinct elements in the list that\n    sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1, 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n    >>> pairs_sum_to_zero([1])\n    False","reduced":"pairs_sum_tozero takes a list integers as an input.it returns True if there are two distinct elements in the list that sum to zero, and False otherwise>>> pairs_sum_tozero([1, 3, 5, 0]) False >>> pairszero([1 3 -2, 1]) False >>> pairs1 2 3, 7]) False pairs2 4 -5 3, 5, 7 True >>> pairs1]) False"}
{"task_id":"HumanEval\/44","prompt":"def change_base(x: int, base: int):\n    \"\"\"\n    Change numerical base of number x.   return string representation after the conversion\n   base numbers are less than 10.\n  >>> changebase8, 3)\n    ''\n >>>(8, 2\n  1000'\n   >>> change_base( 2)\n   '\n    \"\"\"\n","raw":"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'","reduced":"Change numerical base of input number x to base.return string representation after the conversion.base numbers are less than 10.>>> change_base(8 3) '22' >>> change8 210007111"}
{"task_id":"HumanEval\/45","prompt":"def triangle_area(a, h):\n    \"\"\"\n    Given length of side and high return for triangle.\n  _area(5 3    7.5\n    \"\"\"\n","raw":"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5","reduced":"Given length a side and high return area triangle.>>> triangle_area5 3 7"}
{"task_id":"HumanEval\/46","prompt":"def fib4(n: int):\n    \"\"\"\n    The Fib4 sequence is sequence similar to the Fibbon sequnece that's as follows:   fib40) ->  fib1) -> 0\n  4() -> 2\n    fib4(3 -> 0\n  () -> fib4(n-1) +(n-2) fib4(- + fib4(n4  Please write function to efficiently nth of the4 number sequence.  Do use recursion.\n  ()   4\n    >>> fib4()\n   8\n  >>>4)    14\n    \"\"\"\n","raw":"The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n    fib4(0) -> 0\n    fib4(1) -> 0\n    fib4(2) -> 2\n    fib4(3) -> 0\n    fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    Please write a function to efficiently compute the n-th element of the fib4 number sequence.  Do not use recursion.\n    >>> fib4(5)\n    4\n    >>> fib4(6)\n    8\n    >>> fib4(7)\n    14","reduced":"The Fib4 number sequence is a sequence similar the Fibbonacci sequnece that's defined as follows: fib4(0) -> 0 fib41 0 fib 2 fib 0 fibn fibn- + fibn-2 +-3 +).Please write a function to efficiently compute the n-th element of the fib4 number sequence.Do not use recursion.>>> fib4(5) 4 >>> fib46 8 >>> fib47 14"}
{"task_id":"HumanEval\/47","prompt":"def median(l: list):\n    \"\"\"\n    Return median of elements the l.   >>>, 1 2,,])  \n    >>> median([10, 4, 6 1000, 10, 20\n    15.\n    \"\"\"\n","raw":"Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0","reduced":"Return median of elements in the list l.>>> median([3 1 4]) 3 >>>-10 4 6 1000, 10 20 15.0"}
{"task_id":"HumanEval\/48","prompt":"def is_palindrome(text: str):\n    \"\"\"\n    Checks if given string arome\n   >>> is_palindrome('')\n    True\n  ispalrome('\n  \n    >>> isrome('aaaaa')\n True\n  _palrome('cd')\n   False\n    \"\"\"\n","raw":"Checks if given string is a palindrome\n    >>> is_palindrome('')\n    True\n    >>> is_palindrome('aba')\n    True\n    >>> is_palindrome('aaaaa')\n    True\n    >>> is_palindrome('zbcd')\n    False","reduced":"Checks if given string is a pal >>> is_pal('') True >>> ispal('aba') True >>> is('aaaaa True >>> is('zbcd') False"}
{"task_id":"HumanEval\/49","prompt":"def modp(n: int, p: int):\n    \"\"\"\n    Return 2nulo (be aware of numer    >>> modp 5)\n   3\n p1101)\n    2\n   >>> modp(0,)\n  1\n   >>>3, 11\n  \n    >>> modp(100, 101)\n  1\n    \"\"\"\n","raw":"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1","reduced":"Return 2^n modulo p (be aware of numerics).>>> modp(3, 5) 3 >>> mod1101, 101) 20 101 1 >>>3 11) 8100 101 1"}
{"task_id":"HumanEval\/50","prompt":"def encode_shift(s: str):\n    \"\"\"\n    returns encoded string by shifting every character by 5 in the alphabet.\n    \"\"\"\n    return \"\".join([chr(((ord(ch) + 5 - ord(\"a\")) % 26) + ord(\"a\")) for ch in s])\n\n\ndef decode_shift(s: str):\n    \"\"\"\n    takes as input string with encodeshift. Returns dec string\n    \"\"\"\n","raw":"takes as input string encoded with encode_shift function. Returns decoded string.","reduced":"takes as input string encoded encodeshift functionReturns dec string"}
{"task_id":"HumanEval\/51","prompt":"def remove_vowels(text):\n    \"\"\"\n    owels a function that takes and returns without vow\n  >>> removevow('')  ''\n    >>> remove_vowels(\"abcdefghijm\")    'bcdfghjkl'\n  >>> removeowels('abcdef')\n   'bc\n   remove_owelsaaaa')\n    ''\n   >>>_v('AA')   'B'    >>> remove_vowels('zbcd\n  'zbcd'\n    \"\"\"\n","raw":"remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>> remove_vowels(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'","reduced":"remove_vowels is a function that takes string and returns string without vow.>>> remove_vowels('') '' >>> removev(\"abcdef\\nghijm\") 'bcdf\\j' >>> remove('abc') 'bc' >>> remove('aaaaa') '' >>> remove('aaBAA') 'B' removezbcdzbcd"}
{"task_id":"HumanEval\/52","prompt":"def below_threshold(l: list, t: int):\n    \"\"\"\n    Return all numbers in the list l are below threshold t.\n   >>> belowreshold, 2 4 10], 100\n  \n   >>>_threshold([1, 4, 10 5)   False\n    \"\"\"\n","raw":"Return True if all numbers in the list l are below threshold t.\n    >>> below_threshold([1, 2, 4, 10], 100)\n    True\n    >>> below_threshold([1, 20, 4, 10], 5)\n    False","reduced":"Return True if all numbers in list l are below threshold t.>>> below_threshold([1 2 4 10], 100) True below 20 4 10 5 False"}
{"task_id":"HumanEval\/53","prompt":"def add(x: int, y: int):\n    \"\"\"\n    Add and y\n   >>> add2, 3)  \n  add(5, 7)\n    12\n    \"\"\"\n","raw":"Add two numbers x and y\n    >>> add(2, 3)\n    5\n    >>> add(5, 7)\n    12","reduced":"Add two numbers x and >>> add(2 3 5 >>>5 7 12"}
{"task_id":"HumanEval\/54","prompt":"def same_chars(s0: str, s1: str):\n    \"\"\"\n    Check the same characters.\n   samechecdzz', 'dddzzzzzzzdd')\n   True\n  >>> samecharsabcd', 'ddd')\n  True\n    >>> same_chars('ddddabc', 'ab')    True\n   >>> same_('eabcd', 'dddabc\n False  same_arsab', 'dddddddab')\n \n    >>> same_ars('eabcdzz', 'dddzzzzddddabc')\n   False\n    \"\"\"\n","raw":"Check if two words have the same characters.\n    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc')\n    True\n    >>> same_chars('abcd', 'dddddddabc')\n    True\n    >>> same_chars('dddddddabc', 'abcd')\n    True\n    >>> same_chars('eabcd', 'dddddddabc')\n    False\n    >>> same_chars('abcd', 'dddddddabce')\n    False\n    >>> same_chars('eabcdzzzz', 'dddzzzzzzzddddabc')\n    False","reduced":"Check if two words have the characters.>>> same_chars('eabcdzzzz', 'dddzzzzzzzddeddabc') True >>> sameabcd',dddddddabc') True >>> samedddddddabc',ab') True >>> sameeab',dddddabc') False >>> sameabdddabce') False >>>ezzzz',dddzzzzzddddabc False"}
{"task_id":"HumanEval\/55","prompt":"def fib(n: int):\n    \"\"\"\n    Return n-thon.   >>> fib(10)\n   55\n  1)\n   1   >>> fib(8)\n  21\n    \"\"\"\n","raw":"Return n-th Fibonacci number.\n    >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21","reduced":"Return n-th Fib number.>>> fib(10) 55 >>> fib1 18 21"}
{"task_id":"HumanEval\/56","prompt":"def correct_bracketing(brackets: str):\n    \"\"\"\n    brackets is \"<\" and \"\".\n    return True every opening bracket has corresponding closing bracket.\n\n    >>> correctbracket(\"<\")  False\n   >>> correct_>\")    True\n   correct_bracket><>>\n    True   correct_bracket(>\")\n   False\n    \"\"\"\n","raw":"brackets is a string of \"<\" and \">\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"<\")\n    False\n    >>> correct_bracketing(\"<>\")\n    True\n    >>> correct_bracketing(\"<<><>>\")\n    True\n    >>> correct_bracketing(\"><<>\")\n    False","reduced":"brackets is a string \"<\" and \">\".return True if every opening bracket has a corresponding closing.>>> correct_bracketing(\"<\") False >>> correct<> True correct<<><>> True correct(\"><<> False"}
{"task_id":"HumanEval\/57","prompt":"def monotonic(l: list):\n    \"\"\"\n    Return True list elements are monically increasing decreasing\n   >>>otonic([1, 2, 4 20])   True   >>> mon([1, 20,, 10])   False    >>> mononic([,, -])    True\n    \"\"\"\n","raw":"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True","reduced":"Return True is list elements are monotonically increasing or.>>> monotonic([1, 2 4, 20]) True >>> mon1 20 4 10 False4 1 0, -10 True"}
{"task_id":"HumanEval\/58","prompt":"def common(l1: list, l2: list):\n    \"\"\"\n     common elements for two lists.\n  ([1, 4,, 653, 2, 55 7, 5, 9, 653, 121])   [1, 5, 6]\n    >>>([5,,, 83, 2   [2 3]\n    \"\"\"\n","raw":"Return sorted unique common elements for two lists.\n    >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    [1, 5, 653]\n    >>> common([5, 3, 2, 8], [3, 2])\n    [2, 3]","reduced":"Return sorted unique common elements for two lists.>>> common([1 4 3 34, 653 2 5], [5 7 1 5 9 653 121]) [1 5 653] >>>5 3 2 8],3 2])2 3]"}
{"task_id":"HumanEval\/59","prompt":"def largest_prime_factor(n: int):\n    \"\"\"\n    Return the largest of. n 1 is not a   >>> largest_prime_(13195)\n  29    >>> largestprime_factor(2048)    2\n    \"\"\"\n","raw":"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2","reduced":"Return the largest prime factor n.Assume n > and is not prime.>>> largest_primefactor(13195 29 >>>2048 2"}
{"task_id":"HumanEval\/60","prompt":"def sum_to_n(n: int):\n    \"\"\"\n    sum_to_n is a function numbers from 1 n\n   >>> sum_to_n()\n  465   >>> sum_to_n100)\n  5050\n    sum_ton(\n   15\n >>> sum__()\n    55\n   sum_to_n  \n    \"\"\"\n","raw":"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1","reduced":"sum_to_n is a function that sums numbers from 1 to n.>>> sum_to_n(30) 465 >>> sum_n(100) 5050 >>> sum5) 15 >>> sum10 55 >>>1 1"}
{"task_id":"HumanEval\/61","prompt":"def correct_bracketing(brackets: str):\n    \"\"\"\n     a string \"(\" and \")\".\n   return True if every has a corresponding closing bracket.\n\n    >>> correctacketing\")\n \n   >>>_bracket(\"()\n    True  >>>_bracketing(\"(()\n    True\n    >>>acketing\")(()\")  False\n    \"\"\"\n","raw":"brackets is a string of \"(\" and \")\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"(\")\n    False\n    >>> correct_bracketing(\"()\")\n    True\n    >>> correct_bracketing(\"(()())\")\n    True\n    >>> correct_bracketing(\")(()\")\n    False","reduced":"brackets is a string \"(\" and)\".return True if every opening bracket has a corresponding closing.>>> correct_bracketing(\"(\") False >>> correct() True correct(()()) True correct(\")(()\") False"}
{"task_id":"HumanEval\/62","prompt":"def derivative(xs: list):\n    \"\"\"\n    xs represent coefficients alynomial    xs]s[] * x x[2] x +....   thislynomial in the same form.\n    >>> derivative([, 1, 2, 4, 5\n    [1, 4 12,\n  >>> derivative 2,])\n    [2, 6]\n    \"\"\"\n","raw":"xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]","reduced":"xs represent coefficients of a po.xs[0] + x * x + x *^ +....Return derivative of this po in the same form.>>> derivative([3, 1, 2 4 5]) [1 4 12 20] >>> derivative1 2 3])2 6]"}
{"task_id":"HumanEval\/63","prompt":"def fibfib(n: int):\n    \"\"\"\n    The FibF number sequence sequence similar thebonunece that's as follows:\n  fib(0) ==\n  fib(1) == 0\n  ib(2) 1\n  ibn) fibfib(1)ib(n-2) + fibfibn-3\n   Please write a function to efficiently compute the-th of fib number sequence.\n   fibfib1)\n   0\n  ib(5    4\n  fib(8)   24\n    \"\"\"\n","raw":"The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n    Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(5)\n    4\n    >>> fibfib(8)\n    24","reduced":"The FibFib number sequence is a sequence similar the Fibbonacci sequnece that's defined as follows: fibfib(0) == 0 fibf1 0 fib 1 fibn fibn- + fibn-2 +-3).Please write a function to efficiently compute the n-th element of the fibfib number sequence.>>> fibfib(1) 0 >>> fib5 4 >>> fib8 24"}
{"task_id":"HumanEval\/64","prompt":"def vowels_count(s):\n    \"\"\"\n    Write a functionelscount which takes a string representing\n    a word as returns of the string  Vowels this 'a 'e',''o',u'. Here, 'y' also  vowel, but only when it is at the of given word\n\n   Example:\n  >>> vowelscount(\"abc\")\n    2\n   vowels_countACED\")\n   3\n    \"\"\"\n","raw":"Write a function vowels_count which takes a string representing\n    a word as input and returns the number of vowels in the string.\n    Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    vowel, but only when it is at the end of the given word.\n\n    Example:\n    >>> vowels_count(\"abcde\")\n    2\n    >>> vowels_count(\"ACEDY\")\n    3","reduced":"Write a function vowels_count which takes string representing a word as input returns the in stringVowels in this case are 'a',eiou'.Here, 'y' is also a vowel, but only when it at given wordExample: >>> vowels_count(\"abcde 2ACEDY 3"}
{"task_id":"HumanEval\/65","prompt":"def circular_shift(x, shift):\n    \"\"\"\n    Circular shift the digits of integer x, the digits right by shift\n  and return the result string.\n   If number of, return reversed.\n  >>>_shift(12,\n   \"21\"\n    >>> circular_shift(   \"\"\n    \"\"\"\n","raw":"Circular shift the digits of the integer x, shift the digits right by shift\n    and return the result as a string.\n    If shift > number of digits, return digits reversed.\n    >>> circular_shift(12, 1)\n    \"21\"\n    >>> circular_shift(12, 2)\n    \"12\"","reduced":"Circular shift the digits of integer x, shift right by shift and return result as stringIf shift > number digits return digits reversed.>>> circular_shift(12, 1) \"21 >>> circular12"}
{"task_id":"HumanEval\/66","prompt":"def digitSum(s):\n    \"\"\"\n    Task\n   Write a function that takes a string as input and of the upper'\n  .\n\n   Examples:       digitSum(\"\") 0\n     Sum(\"ab => 131\n    Sum(\"abcCd\") 67\n     Sum(\"helloE 69    digitSum(\"ArB\") => 131\n       digit(\"Aa =>\n    \"\"\"\n","raw":"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153","reduced":"Task Write a function that takes a string as input and the sum the upper characters only' ASCII codes.Examples: digitSum(\"\") => 0 digitabAB\") 131abcCd 67helloE\") 69woArBld 131aAaaaXa\") 153"}
{"task_id":"HumanEval\/67","prompt":"def fruit_distribution(s,n):\n    \"\"\"\n     this task you will be given represents a number and oranges\n that are distributed a of fruit this basket contains \n   apples, oranges, and Given the string that represents the total number \n   the oranges and that represent the total number of the fruits    in the basket return number of mango fruits in the basket.    forble\n   _distribution5 apples and 6 oranges\", 19) -> - 5 - 6 8\n  _distribution0\",3) -> 3 -\n  fruitdistribution2 apples 100) -> 100 - 3 =\n   fruit_distribution100 apples and 1 oranges\",) -> 120 - 100 - 1 = 19\n    \"\"\"\n","raw":"In this task, you will be given a string that represents a number of apples and oranges \n    that are distributed in a basket of fruit this basket contains \n    apples, oranges, and mango fruits. Given the string that represents the total number of \n    the oranges and apples and an integer that represent the total number of the fruits \n    in the basket return the number of the mango fruits in the basket.\n    for examble:\n    fruit_distribution(\"5 apples and 6 oranges\", 19) ->19 - 5 - 6 = 8\n    fruit_distribution(\"0 apples and 1 oranges\",3) -> 3 - 0 - 1 = 2\n    fruit_distribution(\"2 apples and 3 oranges\", 100) -> 100 - 2 - 3 = 95\n    fruit_distribution(\"100 apples and 1 oranges\",120) -> 120 - 100 - 1 = 19","reduced":"In this task, you will be given a string that represents a number of apples and oranges that are distributed in a basket of fruit this basket contains apples, and mango fruitsGiven the string that represents the total number the oranges and apples and an integer that represent total fruits in the basket return the number the mango fruits in.for examble: fruit_dist(\"5 apples and 6 oranges\", 19) ->19 - 5 - 6 = 8 fruit0 apples 1 oranges3 3 0 - 1 2 fruit2 3 100 100 2 3 95 fruit100 1120 100 1 19"}
{"task_id":"HumanEval\/68","prompt":"def pluck(arr):\n    \"\"\"\n    \"Given array representing branch a tree that has non-negative integer nodes\n   your task pluck of nodes and return.\n   ucked node should the with the smallest even value.\n    If multiple nodes with same smallest even are found return that has smallest\n\n  Theucked node should in a list, [alest, its index   If there no even values or the given array is empty [].\n\n   Example 1\n    [4,2,]\n      Output [ 1     Explanation: 2 the smallest even value, and 2 has the.\n\n    Example 2:\n       Input23]\n     Output: [2 1]\n     Explanation 2 has the smallest value, and has the smallest index \n\n   Example:\n       Input: []\n     []\n   \n   Example:       Input5, 3,, 4, 2\n      Output: [0, 1]\n     Explanation: the smallest value, but,               so will first zero which smallest index.  Constraints:\n       1 <=.length 10000      * 0 <=.value\n    \"\"\"\n","raw":"\"Given an array representing a branch of a tree that has non-negative integer nodes\n    your task is to pluck one of the nodes and return it.\n    The plucked node should be the node with the smallest even value.\n    If multiple nodes with the same smallest even value are found return the node that has smallest index.\n\n    The plucked node should be returned in a list, [ smalest_value, its index ],\n    If there are no even values or the given array is empty, return [].\n\n    Example 1:\n        Input: [4,2,3]\n        Output: [2, 1]\n        Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\n    Example 2:\n        Input: [1,2,3]\n        Output: [2, 1]\n        Explanation: 2 has the smallest even value, and 2 has the smallest index. \n\n    Example 3:\n        Input: []\n        Output: []\n    \n    Example 4:\n        Input: [5, 0, 3, 0, 4, 2]\n        Output: [0, 1]\n        Explanation: 0 is the smallest value, but  there are two zeros,\n                     so we will choose the first zero, which has the smallest index.\n\n    Constraints:\n        * 1 <= nodes.length <= 10000\n        * 0 <= node.value","reduced":"\"Given an array representing a branch a tree that has nonnegative integer nodes your task pl one of and return it.The plucked node should the node with smallest even valueIf multiple nodes with smallest even value found return node that has smallest indexThe plucked node should returned in a list, [ smalest_value, its index ], If there even values or the given array [].Example 1 Input: [4,2 Output2 1 Explan 2 has the smallest even value, and 2 smallest indexExample 2 Input: [1 Output2 1] Explan 2 has the smallest even value, and 2 smallest indexExample 3 Input: [] Output Example [5 0 3 0 4 20 1] Explan 0 is smallest value, but there two z, so we will choose first zero, which has smallest indexConstr: * 1 <= nodes. <= 10000 * 0 <= nodevalue"}
{"task_id":"HumanEval\/69","prompt":"def search(lst):\n    \"\"\"\n    You are given a non-empty list of integers. Return the greatest integer is greater than\n   zero, and a frequency greater than or value the integer. \n  The frequency of is the number of times appears in the list   If no a value exist, return1.\n   Examples:    ([4 1,, 2, 3, 1]) == 2\n    search([1, 3, 3 4, 4, 4 3\n     search([5,, 4 4, 4 == -\n    \"\"\"\n","raw":"You are given a non-empty list of positive integers. Return the greatest integer that is greater than \n    zero, and has a frequency greater than or equal to the value of the integer itself. \n    The frequency of an integer is the number of times it appears in the list.\n    If no such a value exist, return -1.\n    Examples:\n        search([4, 1, 2, 2, 3, 1]) == 2\n        search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3\n        search([5, 5, 4, 4, 4]) == -1","reduced":"You are given a nonempty list positive integers.Return the greatest integer that is greater zero, and has a frequency greater or the value the integer itselfThe frequency an integer is the number times it appears list.If no such a value exist return -.Examples: search([4, 1 2 2 1]) == 2 search1 2 3 3 4, 4, 4]) 3 search5 5 4 4 4]) -"}
{"task_id":"HumanEval\/70","prompt":"def strange_sort_list(lst):\n    \"\"\"\n    Given list of, list in   sorting, is when you start with value\n    maximum of the remaining integers, then minimum so.   Examples\n sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n  _sortlist([, 5, 5]) == [5, 5, 5]\n  _sort_ []\n    \"\"\"\n","raw":"Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    strange_sort_list([1, 2, 3, 4]) == [1, 4, 2, 3]\n    strange_sort_list([5, 5, 5, 5]) == [5, 5, 5, 5]\n    strange_sort_list([]) == []","reduced":"Given list of integers, return list in strange.Strange sorting, is when you start with the minimum value, then maximum of the remaining integers, then minimum and soExamples: strange_sort_list([1 2,,]) == [1 4 2 3] strange5 5 5 5])5 5 5] strange]) []"}
{"task_id":"HumanEval\/71","prompt":"def triangle_area(a, b, c):\n    \"\"\"\n     the lengths of the three sides of a. Return area\n    to 2 decimal points the three sides form a valid triangle   return -1\n    Three valid triangle the of any two sides \n  than third side\n    Example:\n    triangle_area3, 4 6.\n   area1, 2, 10) == -\n    \"\"\"\n","raw":"Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1","reduced":"Given lengths of the three sides of a triangle.Return the area of triangle rounded 2 decimal points if the three sides form validOtherwise return - Three sides make a valid triangle when the sum any greater the third side.Example triangle_area(3 4) == 6.00 triangle1 10 -"}
{"task_id":"HumanEval\/72","prompt":"def will_it_fly(q,w):\n    \"\"\"\n    Write a that returns if the object q will fly, False\n   object q will fly if's balancedit is a palromic the its elements is than or equal maximum possible weight w\n\n    Example\n   willit_fly([,], 5) \ufffd False     # 1+2 than the maximum possible weight, but's un.   will_it_([3 2 3], 1 \u279e False\n    #'s, 3+2+3 is more than possible weight.  itfly([3, 2],) \u279e True\n    # 3+2+3 than the possible weight, and it.    will_([3 5 \ufffd True  # 3 less than the maximum possible weight it's.\n    \"\"\"\n","raw":"Write a function that returns True if the object q will fly, and False otherwise.\n    The object q will fly if it's balanced (it is a palindromic list) and the sum of its elements is less than or equal the maximum possible weight w.\n\n    Example:\n    will_it_fly([1, 2], 5) \u279e False \n    # 1+2 is less than the maximum possible weight, but it's unbalanced.\n\n    will_it_fly([3, 2, 3], 1) \u279e False\n    # it's balanced, but 3+2+3 is more than the maximum possible weight.\n\n    will_it_fly([3, 2, 3], 9) \u279e True\n    # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\n    will_it_fly([3], 5) \u279e True\n    # 3 is less than the maximum possible weight, and it's balanced.","reduced":"Write function True object q will fly,The object q will fly if's balanced (it is a palrom list the sum elements less the maximum possible weight wExample will_itfly([1], 5 \ufffd\ufffd\ufffd False # 1+ is less the maximum possible weight, but it unbalancedwill_itfly([3 2 1 \ufffd\ufffd\ufffd False # it's balanced, 3+2 is more than the maximum possible weightwill_itfly([3 2 9 \ufffd\ufffd True # 3+ is less the maximum possible weight, and it balancedwill_itfly([3 5 \ufffd\ufffd\ufffd True # 3 is less the maximum possible weight, and it's balanced"}
{"task_id":"HumanEval\/73","prompt":"def smallest_change(arr):\n    \"\"\"\n    Given an array arr of integers find the minimum number of that\n   need be changed make palindromic. Aic array is array that   read the same backwards and change, can change one element any other element\n\n    example\n   smallest_change([,,35,4,,,])\n   change1, 2, 4 3,, 2 == 1\n   smallest_1, 2, 3, 2, 1]) == 0\n    \"\"\"\n","raw":"Given an array arr of integers, find the minimum number of elements that\n    need to be changed to make the array palindromic. A palindromic array is an array that\n    is read the same backwards and forwards. In one change, you can change one element to any other element.\n\n    For example:\n    smallest_change([1,2,3,5,4,7,9,6]) == 4\n    smallest_change([1, 2, 3, 4, 3, 2, 2]) == 1\n    smallest_change([1, 2, 3, 2, 1]) == 0","reduced":"Given an array arr of integers, find the minimum number elements that need changed to make the array pal.A palindrom array is an array that is read the same backwards and.In one change, you can change one element to any element.For example: smallest_change([12,,5,4796]) == 4 smallest 2 3 2 2]) == 1 smallest1 2 1]) 0"}
{"task_id":"HumanEval\/74","prompt":"def total_match(lst1, lst2):\n    \"\"\"\n    Write a function that lists and returns the that has    total of chars in the all strings of the list less than other\n\n  if two lists have number of chars, return the list.\n\n   Examples\n  total_match([], [])\ufffd []\n   totalmatch(['hi', 'admin'], ['hI',']) \ufffdhI', ''] _['hiadmin'],', '', 'admin '])\ufffd\ufffd ['hi', 'admin']   total_match '], ['h', '', 'hi']) \u279e ['h', 'hi', 'hi']   total_(['4'],', '2', '3', '5']) \ufffd ['\n    \"\"\"\n","raw":"Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']","reduced":"Write a function that accepts two lists of strings and returns the list that has total number chars in the all strings of the list less than the other list.if the two lists have the number chars, return the first list.Examples total_match([], []) \ufffd\ufffd\ufffd [] total(['hi',admin'], ['hI',Hi']) \ufffd ['hIHi'] total(hiadmin ['hi',hi',admin',project' \ufffd ['hiadmin'] total(hiadmin'hhi',hi']) \ufffd ['hhi',hi'] total4'], ['1',2',',',']) \ufffd ['4']"}
{"task_id":"HumanEval\/75","prompt":"def is_multiply_prime(a):\n    \"\"\"\n    Write a function that returns true if the the multiplication of 3 prime numbers   false otherwise.\n    that () is less     Example:  is_multip_prime(30)\n  30 = 2 3 * 5\n    \"\"\"\n","raw":"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5","reduced":"Write function returns true given number the multiplication 3 prime andKnowing that (a is less then 100.Example is_multprime(30 == True 30 = 2 * 3 * 5"}
{"task_id":"HumanEval\/76","prompt":"def is_simple_power(x, n):\n    \"\"\"\n     is to write a returns if a number is a simple    power n and false other cases.\n    x is power of n if n**int=x\n  For example:\n  issimple1,) =>  ispower(, 2) => true\n  is_(8, 2) => true\n    is_simple_power(3, 2) false   is_simple_power(3,)\n  is_simple_(,) =>\n    \"\"\"\n","raw":"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false","reduced":"Your task is to write a function that returns true if a number x is a simple power of n and false in other cases.x is a simple power of n if n**int=x For example: is_simple_power(1, 4) => true issimple2 2) true issimple8 2 true issimple3 2 false issimple3, 1 false is5 3 false"}
{"task_id":"HumanEval\/77","prompt":"def iscube(a):\n    \"\"\"\n     a that takes an a returns     if this ingeger a cube of some integer number\n    Note: you may the input is always valid.\n   Examples:\n    iscube1) True  iscube(2) ==> False\n   cube) ==> True\n   cube64) == True   0  (180) ==\n    \"\"\"\n","raw":"Write a function that takes an integer a and returns True \n    if this ingeger is a cube of some integer number.\n    Note: you may assume the input is always valid.\n    Examples:\n    iscube(1) ==> True\n    iscube(2) ==> False\n    iscube(-1) ==> True\n    iscube(64) ==> True\n    iscube(0) ==> True\n    iscube(180) ==> False","reduced":"Write a function that takes an integer a and returns True if this ingeger is a cube of some integer number.Note you may assume the input is always valid.Examples: iscube(1) ==> True iscube False is(- True is(64 True(0 True(180 False"}
{"task_id":"HumanEval\/78","prompt":"def hex_key(num):\n    \"\"\"\n     have tasked a function receives \n   cimal number as a string and number heximal\n  that are primes ( number or a prime is a natural number \n    than 1 that is not a product of two smaller natural numbers). adeimal digits are 1, 2, 4 5 6 7,, 9 A, C,, F.\n    Prime numbers 2, 3, 5, 7,, 13 17    So you have to determine number of the following digits:, 3, 5, 7  Bimal), D (=decimal 13).   Note: assume input correct empty string, \n  and symbols A,B,C,,EF always uppercase.\n    Examples:   num = \"AB\" the output be 1.\n   For num = \"77E the output should be 2\n    num = \"ABED1A\" should be 4.\n   = \"1236789DEF\" the should be\n   For num \"\" the be 2\n    \"\"\"\n","raw":"You have been tasked to write a function that receives \n    a hexadecimal number as a string and counts the number of hexadecimal \n    digits that are primes (prime number, or a prime, is a natural number \n    greater than 1 that is not a product of two smaller natural numbers).\n    Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n    Prime numbers are 2, 3, 5, 7, 11, 13, 17,...\n    So you have to determine a number of the following digits: 2, 3, 5, 7, \n    B (=decimal 11), D (=decimal 13).\n    Note: you may assume the input is always correct or empty string, \n    and symbols A,B,C,D,E,F are always uppercase.\n    Examples:\n    For num = \"AB\" the output should be 1.\n    For num = \"1077E\" the output should be 2.\n    For num = \"ABED1A33\" the output should be 4.\n    For num = \"123456789ABCDEF0\" the output should be 6.\n    For num = \"2020\" the output should be 2.","reduced":"You have been tasked to write function that receives a hexade number as a string and counts the of hex that are pr (prime number, or a prime, is a natural number greater 1 that not a product two smaller naturalHexade digits are 0, A.Prime numbers are 2, 3 5 7 11 13 17,...So you have to determine a number the following digits: 2 3 5 7 B (=dec 11), Ddec 13).Note you may assume the input is always correct or empty string, and symbols A,B are always u.Examples: For num = \"AB\" the output should 1.For num = \"1077E\" the output should 2.For num = \"ABED1A33\" the output should 4.For num = \"1234567ABC0\" the output should 6.For num = \"2020 the output should 2."}
{"task_id":"HumanEval\/79","prompt":"def decimal_to_binary(decimal):\n    \"\"\"\n     given number in decimal and task convert it to  binary. function should a string, with each character representing a binary\n   number. Each character in the string will be '0' or '1'.\n\n    There will an couple of characters 'db' at the at the end of string\n    The extra characters are there to help with the format.\n\n Examples:   _() # returns \"\"\n  __binary(32)  # \"000\n    \"\"\"\n","raw":"You will be given a number in decimal form and your task is to convert it to\n    binary format. The function should return a string, with each character representing a binary\n    number. Each character in the string will be '0' or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning and at the end of the string.\n    The extra characters are there to help with the format.\n\n    Examples:\n    decimal_to_binary(15)   # returns \"db1111db\"\n    decimal_to_binary(32)   # returns \"db100000db\"","reduced":"You will be given number in decimal form and your task is convert binary formatThe function should return string, with each character representing binary numberEach character in string will be '0 orThere will an extra couple characters 'db' at beginning and at stringThe extra characters are there help with the format.Examples: decimal_tobinary(15) # returns \"db1111db\" decimal32100000"}
{"task_id":"HumanEval\/80","prompt":"def is_happy(s):\n    \"\"\"\n     are a string s.\n   task check string is happy or not\n    A string is happy length at least and every consecutive letters are\n   For example:\n  _(a) => False\n  ishappy(aa => False\n    is_happy(cd => True  happyaabb) => False\n   is_(adb) => True\n  _y) =>\n    \"\"\"\n","raw":"You are given a string s.\n    Your task is to check if the string is happy or not.\n    A string is happy if its length is at least 3 and every 3 consecutive letters are distinct\n    For example:\n    is_happy(a) => False\n    is_happy(aa) => False\n    is_happy(abcd) => True\n    is_happy(aabb) => False\n    is_happy(adb) => True\n    is_happy(xyy) => False","reduced":"You are given a string s.Your task is to check if the string is happy orA string is happy if its length is at 3 and every 3 consecutive letters are distinct For example: is_happy(a) => False isaa False isabcd True isaabb) False isadb True isxyy"}
{"task_id":"HumanEval\/81","prompt":"def numerical_letter_grade(grades):\n    \"\"\"\n    It is the last week and teacher has give the grades   to students. has making her own grading\n    only is, she lost the code she used for\n    has given you a list of some students and you have write \n    a function that can output list of letter using the table:\n          GPA      Letter           40           +      .              \n         3.3           A \n           > 3.0             B+\n        >7          \n         23           B-\n         > 20           C+          1.7         C\n           > 13         C-\n      >.0         +       07          D\n        > 0.             D-\n            0.0             E    \n\n   Example:\n   gradeequation([ 3 1.7, 2,5]) ==> [' 'B', 'CC', 'A-']\n    \"\"\"\n","raw":"It is the last week of the semester and the teacher has to give the grades\n    to students. The teacher has been making her own algorithm for grading.\n    The only problem is, she has lost the code she used for grading.\n    She has given you a list of GPAs for some students and you have to write \n    a function that can output a list of letter grades using the following table:\n             GPA       |    Letter grade\n              4.0                A+\n            > 3.7                A \n            > 3.3                A- \n            > 3.0                B+\n            > 2.7                B \n            > 2.3                B-\n            > 2.0                C+\n            > 1.7                C\n            > 1.3                C-\n            > 1.0                D+ \n            > 0.7                D \n            > 0.0                D-\n              0.0                E\n    \n\n    Example:\n    grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']","reduced":"It is the last week the semester and the teacher has to give the grades to students.The teacher has making her own algorithm for grading.The only problem is, she has lost the code she used for grading.She has given you a list GPAs for some students and you have to write a function that can output a letter using the following table GPA | Letter grade 4.0 A+ > 37 A >3 A- >0 B+ 27 >30730 070 0 E Example: grade_equation([4, 3, 1.7, 2,.5]) ==> ['A+',-C',A-']"}
{"task_id":"HumanEval\/82","prompt":"def prime_length(string):\n    \"\"\"\n    Write a that takes a string and returns the\n    length a prime or False otherwise       primelength(' == True  prime_length('abcdc') ==    primelengthkittens') True    prime('orange') == False\n    \"\"\"\n","raw":"Write a function that takes a string and returns True if the string\n    length is a prime number or False otherwise\n    Examples\n    prime_length('Hello') == True\n    prime_length('abcdcba') == True\n    prime_length('kittens') == True\n    prime_length('orange') == False","reduced":"Write a function that takes a string and True if the string length a prime or False otherwise Examples prime_length('Hello') == True primeabcdcba True primekittens True primeorange False"}
{"task_id":"HumanEval\/83","prompt":"def starts_one_ends(n):\n    \"\"\"\n    Given a positive n, return count numbers of n-\n   positive start or end with 1.\n    \"\"\"\n","raw":"Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.","reduced":"Given a positive integer n return count numbers of n-digit positive that start or 1"}
{"task_id":"HumanEval\/84","prompt":"def solve(N):\n    \"\"\"\n    Given a positive N return of its digits in binary.\n  \n  \n    For =, the sum of be 1 the be1\".        For =, the sum of digits will be the should be \"\".\n      For N 147, the sum of will 12 the output should be\n   \n  Variables:\n      @N integer\n         str: 0 \u2264 \u2264.   :\n       a string of binary\n    \"\"\"\n","raw":"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number","reduced":"Given a positive integer N return total sum its digits in binaryExample For N = 1000 the sum digits will 1 the output should \"\".For N = 150 sum digits will 6 the output should \"110For N = 147 sum digits will 12 the output should \"1100Vari @N integer Con 0 \u2264 N 10000.Output a string binary number"}
{"task_id":"HumanEval\/85","prompt":"def add(lst):\n    \"\"\"\n     a non-empty list lst add the even elements that are..\n\n    Examples:\n     add([, 2, 6, 7 ==>\n    \"\"\"\n","raw":"Given a non-empty list of integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n        add([4, 2, 6, 7]) ==> 2","reduced":"Given a nonempty integers lst.add the even elements that at odd indices..Examples add([4 6 ==> 2"}
{"task_id":"HumanEval\/86","prompt":"def anti_shuffle(s):\n    \"\"\"\n    Write a function that string an of it.    Ordered, is a words (separ)\n   are replaced by word where all the characters arranged in\n   ascending based on asi value.\n   : You should the order words and blank in the sentence.\n\n  For example:\n   _uffle('') ''\n   _shhello') returns 'llo'\n   anti_uffle('Hello!!!') returns '!!!dlor'\n    \"\"\"\n","raw":"Write a function that takes a string and returns an ordered version of it.\n    Ordered version of string, is a string where all words (separated by space)\n    are replaced by a new word where all the characters arranged in\n    ascending order based on ascii value.\n    Note: You should keep the order of words and blank spaces in the sentence.\n\n    For example:\n    anti_shuffle('Hi') returns 'Hi'\n    anti_shuffle('hello') returns 'ehllo'\n    anti_shuffle('Hello World!!!') returns 'Hello !!!Wdlor'","reduced":"Write function takes string and an ordered version itOrdered version of string, is a string where all words (separ space replaced a new word where all the characters arranged ascending based asci valueNote You should keep the order of words and blank spaces in the sentence.For example: anti_shuffle('Hi') returns 'Hi antihelloehllo antiHello World!!!Hello Wdlor'"}
{"task_id":"HumanEval\/87","prompt":"def get_row(lst, x):\n    \"\"\"\n    You are given 2 dimensional a lists\n    which is similar to matrix however,   row may contain a number of.   Givenst, integer x, find integers x in the,   and list of tuples, [(x1, y1), (x2,2... such that\n  each tuple is - (row, columns starting with 0.   Sort coordinates initially by in ascending order.\n   coordinates of row in order\n   \n    Examples\n   row([\n   [1345,6],\n   [1,2,,,6\n      [,23,4,5,1]   1 [(0,), (1,), (, 0), (2 5), (2, 0\n   _([],\n    get_([[], [], [1, 2, 3], 3) [(2, 2\n    \"\"\"\n","raw":"You are given a 2 dimensional data, as a nested lists,\n    which is similar to matrix, however, unlike matrices,\n    each row may contain a different number of columns.\n    Given lst, and integer x, find integers x in the list,\n    and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n    each tuple is a coordinate - (row, columns), starting with 0.\n    Sort coordinates initially by rows in ascending order.\n    Also, sort coordinates of the row by columns in descending order.\n    \n    Examples:\n    get_row([\n      [1,2,3,4,5,6],\n      [1,2,3,4,1,6],\n      [1,2,3,4,5,1]\n    ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n    get_row([], 1) == []\n    get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]","reduced":"You are given a 2 dimensional data, as a nested lists, which is similar matrix, however, unlike mat each row may contain a different number columns.Given lst, and integer x, find integers x in the list, and return list of tu, [(x1 y), ()...] such each tuple is a coordinate - (row, columns), starting with 0.Sort coordinates initially by rows in ascending.Also, sort coordinates of the row by columns in descending.Examples: get_row([ [1,2,],116],51] ], 1) == [(0 0), ( 41 02 5 0)] getrow], 1 [] get[], [1],1, 2,]], 3 [(2 2)]"}
{"task_id":"HumanEval\/88","prompt":"def sort_array(array):\n    \"\"\"\n    Given an array of non- integers, return a copy the given array sorting,\n   you will sort given in ascending( index value, last index value) is odd,\n   or sort it in descending order if the sum( first, last index value) is even.  :\n  * don't change the given.\n\n   Examples    * sort([])\n  *_array([ => [5   * sortarray([2,, 3, 1, 5])0,, 2 3, 4, 5\n    *_2,, 3, 1 5, 6 => [, 5, 4, 2,\n    \"\"\"\n","raw":"Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]","reduced":"Given an array non-negative integers, return a copy the given array after sorting, you will sort the given array in ascending if the sum( first index value, last) is odd, or sort it in the first evenNote: * don change the given array.Examples: * sort_array([]) => [] * sortarray5]) [5] *2, 4, 3, 0, 1, 5]) [0, 1, 2 3, 4, 5] *2 4 0 5, 66, 5 4 3 2 1 0]"}
{"task_id":"HumanEval\/89","prompt":"def encrypt(s):\n    \"\"\"\n    Create a that takes a string an argument\n   returns string encrypted being rotated. \n  The should be a manner such that the letters \n   shift by multiplied to two places.\n    For example:   encrypt('') returnslm'    encrypt('asdfghjkl')ewklnop  encryptgf')kj'    encryptet') returnsix'\n    \"\"\"\n","raw":"Create a function encrypt that takes a string as an argument and\n    returns a string encrypted with the alphabet being rotated. \n    The alphabet should be rotated in a manner such that the letters \n    shift down by two multiplied to two places.\n    For example:\n    encrypt('hi') returns 'lm'\n    encrypt('asdfghjkl') returns 'ewhjklnop'\n    encrypt('gf') returns 'kj'\n    encrypt('et') returns 'ix'","reduced":"Create function encrypt that takes string as an string encrypted alphabet being rotatedThe alphabet should rotated in a manner such letters shift down by two multiplied to two placesFor example: encrypt('hi returns 'lm' encryptasdfghjklewhjklnopgf')kj'et')ix'"}
{"task_id":"HumanEval\/90","prompt":"def next_smallest(lst):\n    \"\"\"\n     are a list of integers\n    Write a next_smallest that returns 2nd smallest of the list\n   Return if there no such element.   \n   _smallest([, 3,, 5 == 2  _est([5, 1, 4 3 2 2\n    nextsmallest([]) None   next_est([, 1])\n    \"\"\"\n","raw":"You are given a list of integers.\n    Write a function next_smallest() that returns the 2nd smallest element of the list.\n    Return None if there is no such element.\n    \n    next_smallest([1, 2, 3, 4, 5]) == 2\n    next_smallest([5, 1, 4, 3, 2]) == 2\n    next_smallest([]) == None\n    next_smallest([1, 1]) == None","reduced":"You are given a list integers.Write a function next_smallest() that returns the 2 element of list.Return None if there is no such element.next_smallest([1 2,,,]) == 2 nextsmall5 1 4 3 2 2 next]) == None next1 1]) None"}
{"task_id":"HumanEval\/91","prompt":"def is_bored(S):\n    \"\"\"\n    You'll be a string of and your task is count the number   boredoms. boredom is a sentence that starts with \"I\n    Sentences are by '.''or '\n \n   example:\n   is_bored(\"Hello world\")\n   0\n    >>>_boredThe is blue. The sun is I love this\") \n    \"\"\"\n","raw":"You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1","reduced":"You'll be given string words, and your task count the boredoms.A boredom is sentence starts theI\".Sentences are delim '.', '?' or!For example: >>> isbored(\"Hello world 0The sky.The sun is shining.I love this weather\") 1"}
{"task_id":"HumanEval\/92","prompt":"def any_int(x, y, z):\n    \"\"\"\n    Create a that takes 3 numbers.\n   true if one is equal to the sum of other, and numbers are.    Returns cases.\n        Examples\n    any_int, 2, 7)\ufffd True\n   \n  any_int( 2)\ufffd\ufffd False\n\n   _( -, 1) \ufffd True\n    int.6,2.2, 2) \u279e False\n    \"\"\"\n","raw":"Create a function that takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    any_int(5, 2, 7) \u279e True\n    \n    any_int(3, 2, 2) \u279e False\n\n    any_int(3, -2, 1) \u279e True\n    \n    any_int(3.6, -2.2, 2) \u279e False","reduced":"Create a function that takes 3 numbers.Returns true if one of numbers is equal the sum the other two, and all numbers are integers.Returns false in any other cases.Examples any_int(5, 2, 7) \ufffd\ufffd\ufffd True any3 2 2 False any3 -2 1 True3.6 -2.2, 2 False"}
{"task_id":"HumanEval\/93","prompt":"def encode(message):\n    \"\"\"\n    Write function that takes a, andodes such\n  way that it swaps of all, replaces all vowels in\n   message with the appears 2 places ahead of \n   vowel in the english alphabet.    Assume only letters.      Examples:  >>> encode('test  TGST'    >>> encodeThis is message')   'tHKS C MGSSC'\n    \"\"\"\n","raw":"Write a function that takes a message, and encodes in such a \n    way that it swaps case of all letters, replaces all vowels in \n    the message with the letter that appears 2 places ahead of that \n    vowel in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This is a message')\n    'tHKS KS C MGSSCGG'","reduced":"Write function takes message, enc in such swaps case of all letters, replaces all vow in the letter that appears 2 places ahead that vowel in english alphabetAssume only letters.Examples >>> encode('test 'TGST'This message')tHKS KS C MGSSCGG'"}
{"task_id":"HumanEval\/94","prompt":"def skjkasdkd(lst):\n    \"\"\"\n     are given list of integers.   find the largest the sum of its digits\n\n   :\n   For l =0,3,2,1,35,4,5,5,5,2,18132,4,,,,4,3] the output should 10\n    For lst = [0,1,82,2,1,40,1,2,,,4,5,1 the output 25\n lst = [,3,132,5107,,83278,109,,2323,30,19,3 output be 13    For lst =,24,32,71,99,32,6,5,,830,5,6] the should be 11\n  lst [081,31,21] the output should be\n   For lst [,12,,7 output should be 7\n    \"\"\"\n","raw":"You are given a list of integers.\n    You need to find the largest prime value and return the sum of its digits.\n\n    Examples:\n    For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,2,32,324,4,3] the output should be 10\n    For lst = [1,0,1,8,2,4597,2,1,3,40,1,2,1,2,4,2,5,1] the output should be 25\n    For lst = [1,3,1,32,5107,34,83278,109,163,23,2323,32,30,1,9,3] the output should be 13\n    For lst = [0,724,32,71,99,32,6,0,5,91,83,0,5,6] the output should be 11\n    For lst = [0,81,12,3,1,21] the output should be 3\n    For lst = [0,8,1,2,1,7] the output should be 7","reduced":"You are given a list integers.You need to find the largest prime value and return the sum of its digits.Examples: For lst = [0,3,2,1,3,5,7,4,5,5,5,2,181,32,4,32,3,232,3244,3] the output should be 10 For l [101824597,21340,12124251] the 25 For13132510734,83278,109,163,23,2323,3230,1,9,3] 13 For07243271,99,32,6,059183056] 11 For08112,3121] 3 For08,121,7] 7"}
{"task_id":"HumanEval\/95","prompt":"def check_dict_case(dict):\n    \"\"\"\n    Given a dictionary, True if all keys strings lower \n  case all keys in upper,  The should is given dictionary is empty   Examples   check_dictcase({\"a\":\"apple\", \"b\":\"banana\"}).   dictcase{\"aapple\", \"A\":\"\", \"banana\"}) return False\n   case({\"a\":\"apple\",:\"ana\", \"a\":\"\"}) should return False\n    check_dictcase({\"Name\":\"John\", \"Age\":\"\", \"CityHouston\"}) should return False\n    check_dict_case({\"STATE\":\" \"Z\":\"12345\" }) should return\n    \"\"\"\n","raw":"Given a dictionary, return True if all keys are strings in lower \n    case or all keys are strings in upper case, else return False.\n    The function should return False is the given dictionary is empty.\n    Examples:\n    check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n    check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"}) should return False.\n    check_dict_case({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"}) should return False.\n    check_dict_case({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.","reduced":"Given a dictionary, return True all keys strings in lower or all elseThe function should return False is the given dictionary isExamples check_dict_case({\"a\":\"appleban should return True.check_dict_case({\"a\":\"appleAbanban should return False.check_dict_case({\"a\":\"apple 8:\"ban \"aapple should return False.check_dict_case({\"NameJohn\",Age36CityHouston\"} should return False.check_dict_case({\"STATE\":\"NC\",ZIP123\" }) should return True."}
{"task_id":"HumanEval\/96","prompt":"def count_up_to(n):\n    \"\"\"\n    plement a function that takes an nonnegative integer and returns an array of the first n\n   integers that are prime numbers and n\n    for example  up_to() => [2,3]\n   up_to(11) [2,3,5]\n count_0) => []  count__to(20 => [,3,57111317,]\n_up_to(1) => []\n  count_to(2,3,5,7,1113,]\n    \"\"\"\n","raw":"Implement a function that takes an non-negative integer and returns an array of the first n\n    integers that are prime numbers and less than n.\n    for example:\n    count_up_to(5) => [2,3]\n    count_up_to(11) => [2,3,5,7]\n    count_up_to(0) => []\n    count_up_to(20) => [2,3,5,7,11,13,17,19]\n    count_up_to(1) => []\n    count_up_to(18) => [2,3,5,7,11,13,17]","reduced":"Implement a function that takes an non-negative integer and returns an array of the first n integers that are prime numbers and less than n.for example: count_up_to(5) => [2,3] count_up_to(11) [23,5,7] count0) [] count(20 [23,5,7,11,13,17,19] count1 [] count1821113]"}
{"task_id":"HumanEval\/97","prompt":"def multiply(a, b):\n    \"\"\"\n    Complete the function that takes integers    the product of unit digits.   Assume the input is   :\n  (148) return 16.\n  multiply( 28) should return 72\n   multiply(2020,51) should return.\n    multiply(14,-) should return 20\n    \"\"\"\n","raw":"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.","reduced":"Complete the function that takes two integers product their unit digitsAssume the input is always validExamples multiply(148 412 should return 16.mult(19 28 should return 72mult(2020 1851 should return 0mult(14,-15 should return 20."}
{"task_id":"HumanEval\/98","prompt":"def count_upper(s):\n    \"\"\"\n    Given a string, count the of u vow even.\n      For example    count_upperaBCdE returns\n    count_upper('abcdefg') returns 0\n upperdBBE') returns 0\n    \"\"\"\n","raw":"Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0","reduced":"Given a string s, count the upperc vow even indicesFor example: count_upper('aBCdEf') returns 1 countupperabcdefg 0dBBE')"}
{"task_id":"HumanEval\/99","prompt":"def closest_integer(value):\n    \"\"\"\n    Create a function that takes a (string  and returns closest integer to it. If the number is equidistant  from two it away from zero.\n\n   Examples\n    closest_integer(\"10\")   10\n  >>>integer(\"15.3\")  15   :\n  Rounding that if the given number equidistant\n    from integers, the one is the that the\n   farthest from. For example closest_integer(\"14.5\") should    return 15 closest-14.\") should return15\n    \"\"\"\n","raw":"Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.","reduced":"Create function that takes value (string) representing number and the closest integer to itIf the number is equid two integers round it away from zeroExamples >>> closest_integer(\"10 10 >>>15.3 Note Rounding away from zero means if the given number equid two integers the one you should return the one that the fart zeroFor example closest_integer(\"14.5 should return 15 and closest-14 -15"}
{"task_id":"HumanEval\/100","prompt":"def make_a_pile(n):\n    \"\"\"\n    Given positive integer, have make a pile n levels of.\n   The first level stones.\n    The number stones in the next is:\n      - the next odd n.      - the even if n even.  Return the number of stones in level in a list, where at index\n   i represents the stones in the (i+1\n\n   Examples:\n   a_ile3\n   [3 5]\n    \"\"\"\n","raw":"Given a positive integer n, you have to make a pile of n levels of stones.\n    The first level has n stones.\n    The number of stones in the next level is:\n        - the next odd number if n is odd.\n        - the next even number if n is even.\n    Return the number of stones in each level in a list, where element at index\n    i represents the number of stones in the level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]","reduced":"Given a positive integer n you have make pile n levels of stonesThe first level has n stonesThe number stones in next level is: - the next odd if n odd- the next even number if n evenReturn the number stones in each level in a list, where element at index i represents (i+Examples >>> makeapile(3 [3 5"}
{"task_id":"HumanEval\/101","prompt":"def words_string(s):\n    \"\"\"\n    You will given a string words separated by commas or spaces.   to string and array of words.\n       For:   words_string(\"Hi, John\")Hi\",my\",name\", \"is \"\"]   _(\"One, two, four, five, six\") == [\"One \"two\", \"three\", \"four\", \"five\",six\"]\n    \"\"\"\n","raw":"You will be given a string of words separated by commas or spaces. Your task is\n    to split the string into words and return an array of the words.\n    \n    For example:\n    words_string(\"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n    words_string(\"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]","reduced":"You will be given a string of words separated comm or spaces.Your task is to split the string into words and return an array the words.For example: words_string(\"Hi, my John\") == [\"Hi\",my\",name\",is\",John\"] wordsOne, two,,,\")One\",four\",five\",\"]"}
{"task_id":"HumanEval\/102","prompt":"def choose_num(x, y):\n    \"\"\"\n    This function takes two positive numbers and and returns the   number that is the range [x, y]. If \n   there no such number the function return1.  For example:   choose_num(12, 15) = 14\n choose_num(13, 12)\n    \"\"\"\n","raw":"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1","reduced":"This function takes two positive numbers x and the biggest even integer number that is in [x, inclusiveIf there no such number then the function should return -For example: choose_num(12, 15 = 14 choose13 12 -"}
{"task_id":"HumanEval\/103","prompt":"def rounded_avg(n, m):\n    \"\"\"\n    You are given two integers n and m and your is to compute  average of from n through m ( n m \n   Round to integer and convert that to binary.\n  If n is greater than m return -.\n   :\n _avg(1 5) \"0b11\"\n  avg( => -1    rounded_avg(10 20) => \"0b\"\n  av(, 33 \"0b11010\"\n    \"\"\"\n","raw":"You are given two positive integers n and m, and your task is to compute the\n    average of the integers from n through m (including n and m). \n    Round the answer to the nearest integer and convert that to binary.\n    If n is greater than m, return -1.\n    Example:\n    rounded_avg(1, 5) => \"0b11\"\n    rounded_avg(7, 5) => -1\n    rounded_avg(10, 20) => \"0b1111\"\n    rounded_avg(20, 33) => \"0b11010\"","reduced":"You are given two positive integers n m, and your task compute the average of the integers from n through (including n and).Round the answer to the nearest integer and convert that to binary.If n is greater m, return -.Example: rounded_av(1, 5) => \"0b11\" rounded7 5 -1 rounded10 20 \"01111 rounded20 3311010"}
{"task_id":"HumanEval\/104","prompt":"def unique_digits(x):\n    \"\"\"\n     a of positive integers x return a of all   that't any even digit\n\n   :ed list should sorted in increasing order.\n    \n   For example:\n  >>> unique_15, 33, 1422, 1   [, 15,]   >>> uniquedigits, 323, 1422, 10\n   []\n    \"\"\"\n","raw":"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []","reduced":"Given a list positive integers x.return a sorted all elements that hasn any even digit.Note Returned list should sorted in increasing.For example: >>> uniquedig([15 33 1422 1]) [1 15 33]152 323 1422 10]) []"}
{"task_id":"HumanEval\/105","prompt":"def by_length(arr):\n    \"\"\"\n    Given array integers, the integers that are between 1 9 inclusive,   reverse the resulting array, then replace each digit by its corresponding name from\n   \"One\", \"\", \"Three\", \"Four\", \"FiveSix\",Seven\", \" \"Nine\n\n  For example:\n   arr = [2, 1, 1, 4, 8, 2,]  \n          -> sort [1, 1 2 2, 4, 5 8         reverse arr, 5, 4 3 2, 1, 1\n   Eight \"\",Four\",Three \"Two\", \"\", \"One\", \"\n         If the array return empty array     arr = []\n \n  \n      array has any strange number ignore\n    arr =1 -1 55 \n          -> sort arr -> [-, 1, 55\n         arr -> [, 1, -]\n      return ['One\n    \"\"\"\n","raw":"Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n    reverse the resulting array, and then replace each digit by its corresponding name from\n    \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n\n    For example:\n      arr = [2, 1, 1, 4, 5, 8, 2, 3]   \n            -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n            -> reverse arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n      return [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n    \n      If the array is empty, return an empty array:\n      arr = []\n      return []\n    \n      If the array has any strange number ignore it:\n      arr = [1, -1 , 55] \n            -> sort arr -> [-1, 1, 55]\n            -> reverse arr -> [55, 1, -1]\n      return = ['One']","reduced":"Given an array integers, sort the integers that are between 1 9 inclusive, reverse the resulting array, and then replace each digit by its corresponding name from \"One\", \" \" \" \" \" \" \" \"\".For example: arr = [2 1 1 4 5 8 2 3] -> sort arr -> [1 1 2 2 3, 4 5 8] -> reverse arr -> [8 5 4 3 2, 2 1, 1] return [\"Eight\", \"FiveFour\",Two\",\",One\"] If the array is empty, return an empty array: arr = [] return [] If the array has any strange number ignore it: [1 -, 55] -> [- 1 55] ->55 1 -] return = ['One']"}
{"task_id":"HumanEval\/106","prompt":"def f(n):\n    \"\"\"\n    Im the function n as,\n    and returns list of size such that the element at i the factorial i if is even\n    or sum of numbers from 1 to i otherwise\n   i starts.\n   the fact of i is the multiplication of numbers from 1 i ( * *).    Example\n    f(5) == [ 2 6, 24,]\n    \"\"\"\n","raw":"Implement the function f that takes n as a parameter,\n    and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n    i starts from 1.\n    the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    Example:\n    f(5) == [1, 2, 6, 24, 15]","reduced":"Implement the function f that takes n parameter, list size, such the value the element at i the fact i if i even or the sum numbers from i otherwisei starts from 1.the factorial of i is the multiplication numbers from 1 i (1 * 2...* i).Example f(5 == [ 6 24 15]"}
{"task_id":"HumanEval\/107","prompt":"def even_odd_palindrome(n):\n    \"\"\"\n    Given a positive n, return a tuple the number of even and odd\n   indromes that within the range,),.  1\n\n    :\n        Output:1,\n     Explanation:\n       Integer palindrome are 1, 3. one them is, and them are odd. Example     Input: 12\n    : (4, 6)\n       Explanation:\n       palindrome 1, 2 3, 4,, 7, 8, 9,. four them are, and 6 of them are odd.\n\n   Note:\n      <= 103     . returned tuple has the number of and palromes.\n    \"\"\"\n","raw":"Given a positive integer n, return a tuple that has the number of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\n    Example 1:\n\n        Input: 3\n        Output: (1, 2)\n        Explanation:\n        Integer palindrome are 1, 2, 3. one of them is even, and two of them are odd.\n\n    Example 2:\n\n        Input: 12\n        Output: (4, 6)\n        Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1 <= n <= 10^3\n        2. returned tuple has the number of even and odd integer palindromes respectively.","reduced":"Given a positive integer n, return a tuple that has the number even and integer pal that fall the(1 n), inclusiveExample 1 Input: 3 Output (1, 2) Explan Integer pal are 1,.one of them is even, and two of odd.Example 2: Input: 12 Output (4, 6) Explan Integer pal are 1, 11.four of them are even, and 6 of odd.Note 1.1 <= n <= 10^3 2.returned tuple has the number even and integer pales respectively."}
{"task_id":"HumanEval\/108","prompt":"def count_nums(arr):\n    \"\"\"\n    Write a countn which takes an array of and returns\n  of elements which has sum of digits 0.\n    If number is negative then first digit negative:\n   e.g.123 has -1.\n  >>> countnums([]) == 0\n    >>>_ums([-1, 11, - == 1\n    >>>nums([, 1, 2]) 3\n    \"\"\"\n","raw":"Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3","reduced":"Write a function count_nums which takes an array integers and the elements which has a sum digits > 0If a number is negative then its first signed digit will negative: e -123 has signed digits -1, 2 and>>> count_nums([]) == 0 >>> count- 11, -11 == 11 1 2]) 3"}
{"task_id":"HumanEval\/109","prompt":"def move_one_ball(arr):\n    \"\"\"\n    We have arrayarr' of N arr[1], arr[2],..., arrN].The\n    array will be randomly ordered. task to determine\n  it is to get an array sorted in nondecasing order by\n   the following operation the array      You to perform right operation any of times.\n    \n   right shift operation means all elements of the array by  position in the right. The last element of array be moved to\n    the starting position the array i.. 0th index. \n\n  If possible to obtain the by performing the\n   then True else False.\n   If given array is then True. is guaranteed to have unique.\n\n      \n  moveoneball([3,, 5,==>True\n    Explanation By shift operations, non-decreasing order can\n            be for the\n  move_oneball([3,, 4, 1, 2])==False  It is not possible to get non-reasing for\n              array performing any number right shift operations.\n    \"\"\"\n","raw":"We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n    numbers in the array will be randomly ordered. Your task is to determine if\n    it is possible to get an array sorted in non-decreasing order by performing \n    the following operation on the given array:\n        You are allowed to perform right shift operation any number of times.\n    \n    One right shift operation means shifting all elements of the array by one\n    position in the right direction. The last element of the array will be moved to\n    the starting position in the array i.e. 0th index. \n\n    If it is possible to obtain the sorted array by performing the above operation\n    then return True else return False.\n    If the given array is empty then return True.\n\n    Note: The given list is guaranteed to have unique elements.\n\n    For Example:\n    \n    move_one_ball([3, 4, 5, 1, 2])==>True\n    Explanation: By performin 2 right shift operations, non-decreasing order can\n                 be achieved for the given array.\n    move_one_ball([3, 5, 4, 1, 2])==>False\n    Explanation:It is not possible to get non-decreasing order for the given\n                array by performing any number of right shift operations.","reduced":"We have an array 'arr' of N integers arr[1],..., arrN].The numbers in will randomly orderedYour task determine if it possible get an array sorted in nondecre by performing operation on given You are allowed perform right shift operation any numberOne right shift operation means shifting all elements array by position in right directionThe last element array will moved starting in array i 0th index.If it is possible obtain the sorted array by performing above operation then return True else.If the given array empty then return True.Note The given list is guaranteed have unique elementsFor Example move_oneball([3 4 1])==>True Explan By performin 2 right shift operations nondecre order can achieved for the given arraymove_oneball([3 5 4 1 2==>False ExplanIt is not get nondecre order for the given array by performing any number right shift"}
{"task_id":"HumanEval\/110","prompt":"def exchange(lst1, lst2):\n    \"\"\"\n    In this, implement a function that takes two lists of numbers,\n    and determines whether it is to perform of elements\n   to makest a list of only even numbers.\n   is no limit on the of exchanged elements l1 lst2\n  it is possible to exchange elements betweenst and l   all the elements ofst1 be even, returnYES\".  Otherwise, returnNO\".   For example:\n  exchange([1, 2, 3, 4], [1, 3, 4]) =>\n   exchange([1,, 3 4],, 5 3,]) \"NO\"\n  is assumed that the input will non-empty\n    \"\"\"\n","raw":"In this problem, you will implement a function that takes two lists of numbers,\n    and determines whether it is possible to perform an exchange of elements\n    between them to make lst1 a list of only even numbers.\n    There is no limit on the number of exchanged elements between lst1 and lst2.\n    If it is possible to exchange elements between the lst1 and lst2 to make\n    all the elements of lst1 to be even, return \"YES\".\n    Otherwise, return \"NO\".\n    For example:\n    exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n    exchange([1, 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n    It is assumed that the input lists will be non-empty.","reduced":"In this problem, you will implement a function that takes two lists of numbers, and determines whether it is possible perform an exchange of elements between to make lst1 a list of only even numbersThere is no limit on the exchanged elements between lst1.If it is possible exchange elements between the lst1 to make all the elements of l to be even, return \"YES\".Otherwise, return \"NO\".For example: exchange([1 2,], [1]) => \"YES exchange 5 3 It is assumed the input lists will be nonempty."}
{"task_id":"HumanEval\/111","prompt":"def histogram(test):\n    \"\"\"\n    Given a representing a space separated letters a dictionary\n  of the the most containing corresponding count   If have the same occurrence, return all them.\n  \n    Example:\n  histogram('a') == {'a 1 'b 1, 'c':}\n  histogram(' b b a == {a': 2 '': 2    histogram b c a b == { 2, 'b\n   histogram b b a') == {'b': 4}\n    histogram('') == {}\n    \"\"\"\n","raw":"Given a string representing a space separated lowercase letters, return a dictionary\n    of the letter with the most repetition and containing the corresponding count.\n    If several letters have the same occurrence, return all of them.\n    \n    Example:\n    histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n    histogram('a b b a') == {'a': 2, 'b': 2}\n    histogram('a b c a b') == {'a': 2, 'b': 2}\n    histogram('b b b b a') == {'b': 4}\n    histogram('') == {}","reduced":"Given a string representing a space separated lowercase letters, return a dictionary of the letter with the most repetition and containing the corresponding count.If several letters have the occurrence, return all of them.Example: histogram('a b c') == {'a': 1 1, 1} hista b b a') ==a 2 2} hist c a b 2 2 histb b b b a')b 4} hist('') == {}"}
{"task_id":"HumanEval\/112","prompt":"def reverse_delete(s,c):\n    \"\"\"\n    \n    We are given two strings and c you have to deleted the in are equal character  then check if the is palindrome\n  A string is called palindrome if same backward as forward.\n   You should return a containing string and True\/False for the check.\n    Example\n   For s \"abcde\", c = \"ae the should ('',False)    s =abc c = \"b\"  result should bedef',)\n  For = \"cba c = \"ab\", result shoulddedc',True)\n    \"\"\"\n","raw":"Task\n    We are given two strings s and c, you have to deleted all the characters in s that are equal to any character in c\n    then check if the result string is palindrome.\n    A string is called palindrome if it reads the same backward as forward.\n    You should return a tuple containing the result string and True\/False for the check.\n    Example\n    For s = \"abcde\", c = \"ae\", the result should be ('bcd',False)\n    For s = \"abcdef\", c = \"b\"  the result should be ('acdef',False)\n    For s = \"abcdedcba\", c = \"ab\", the result should be ('cdedc',True)","reduced":"Task We are given two strings s and c, you have deleted all the characters in s that are equal any character then check if the result string pal.A string is called pal if reads the same backward as forward.You should return a tuple containing the result string and True\/ for the check.Example For s = \"abcde\", c \"ae\", the result should ('bcd',False) For sdefb\" theacdef Fordedcbaabcdedc',True"}
{"task_id":"HumanEval\/113","prompt":"def odd_count(lst):\n    \"\"\"\n    Given a list of, where each string consists only digits a list.\n   Each of the be \"the number\n   string i of the.\" all the i's should be by number\n   of in the i'th string the input\n\n   oddcount123'])\n    [\"the number of odd elements 4n the str4 4 the 4nput.\"]    >>>_count(['',\"\"]\n    [\" elements 1n the strng 1 of thenput.\",\nthe of odd elements 8n str8ng 8 of the 8put.\"]\n    \"\"\"\n","raw":"Given a list of strings, where each string consists of only digits, return a list.\n    Each element i of the output should be \"the number of odd elements in the\n    string i of the input.\" where all the i's should be replaced by the number\n    of odd digits in the i'th string of the input.\n\n    >>> odd_count(['1234567'])\n    [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n    >>> odd_count(['3',\"11111111\"])\n    [\"the number of odd elements 1n the str1ng 1 of the 1nput.\",\n     \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]","reduced":"Given a list strings, where each string consists only digits, return a list.Each element i of the output should be \"the number odd elements in string i of input.\" where all the i's should replaced the number odd digits in i't string of input>>> odd_count(['1234567']) [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"] >>>3',\"11111111\"] 1n1 1 1.\", \"the 88ng 8.\""}
{"task_id":"HumanEval\/114","prompt":"def minSubArraySum(nums):\n    \"\"\"\n    Given an of integers nums, the sum of non-empty sub-array\n  \n  Example   minArraySum2,, 4, 1,]) == 1    minSubArraySum([-1 -2,3]) -6\n    \"\"\"\n","raw":"Given an array of integers nums, find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n    minSubArraySum([2, 3, 4, 1, 2, 4]) == 1\n    minSubArraySum([-1, -2, -3]) == -6","reduced":"Given an array integers nums, find the minimum sum any nonempty sub-array of num.Example minSubArraySum([2 3,, 1 2 4]) == 1 min- -2]) -6"}
{"task_id":"HumanEval\/115","prompt":"def max_fill(grid, capacity):\n    import math\n    \"\"\"\n    You given a grid wells. Each row represents a single well,  and each 1 in row represents a of water.    Each well a corresponding bucket that can used water from, \n   have the capacity\n    Your task is to use buckets empty the.\n    Output of times you need to lower buckets.\n\n   Example 1   : \n           grid : [[001,0], [0,1,0], [1,1,1,]]\n         _capacity : 1    Output 6\n\n   Example 2:\n    Input:        grid,,11], [00,0 [1,1,1,], [111\n       bucket_capacity : 2\n    Output: 5    \n   Example\n      Input \n        [[0,0,],00]]        _capacity : 5\n     :   Constraints       all have same length     * 1 <=.length <=^2\n      * 1 <= grid[:,1].length <= 10^2\n      grid[i][j] 0\n       * 1 <= <= 10\n    \"\"\"\n","raw":"You are given a rectangular grid of wells. Each row represents a single well,\n    and each 1 in a row represents a single unit of water.\n    Each well has a corresponding bucket that can be used to extract water from it, \n    and all buckets have the same capacity.\n    Your task is to use the buckets to empty the wells.\n    Output the number of times you need to lower the buckets.\n\n    Example 1:\n        Input: \n            grid : [[0,0,1,0], [0,1,0,0], [1,1,1,1]]\n            bucket_capacity : 1\n        Output: 6\n\n    Example 2:\n        Input: \n            grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1], [0,1,1,1]]\n            bucket_capacity : 2\n        Output: 5\n    \n    Example 3:\n        Input: \n            grid : [[0,0,0], [0,0,0]]\n            bucket_capacity : 5\n        Output: 0\n\n    Constraints:\n        * all wells have the same length\n        * 1 <= grid.length <= 10^2\n        * 1 <= grid[:,1].length <= 10^2\n        * grid[i][j] -> 0 | 1\n        * 1 <= capacity <= 10","reduced":"You are given a rectangular grid of wells.Each row represents a single well, and each 1 in a a single unit of water.Each well has a corresponding bucket that can be used to extract water from it, and all buckets have the same capacity.Your task is to use the buckets to empty the wells.Output the number times you need lower the buckets.Example 1: Input: grid : [[0,0,1,0], [01001111]] bucket_capacity : 1 Output 6 Example Input grid1000111],0111 2 5 Example0],]] bucket 5 0 Constraints: * all wells have the length * 1 <= grid.length <= 10^2 * 1 grid[:,1]. <= 10 * gridi][j] -> 0 | 1 * 1 <= capacity <= 10"}
{"task_id":"HumanEval\/116","prompt":"def sort_array(arr):\n    \"\"\"\n    In this Kata, to an of-negative to\n    of ones in their binary order.\n   number of ones, based decimal value.\n\n   be implemented like:\n    >>> sort_array1, 5, 2, 4])1, 3, 4 5]\n    >>>_([-2 -, -, -5, -6]) [-6, -, -, -3, -2] >>> sort_array([, 0, 4]) [, 1, 2, 3,\n    \"\"\"\n","raw":"In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]","reduced":"In this Kata, you have to sort an array of nonnegative integers according number of ones in their binary representation in ascending.For similar number ones, sort based decimal value.It must be implemented like this: >>> sort_array([1 5, 2, 3, 4]) == [1 2, 5] sort-2 -3, -, -, -]) [-6 -543,2]1 0 2 3 4]) [0 1 2]"}
{"task_id":"HumanEval\/117","prompt":"def select_words(s, n):\n    \"\"\"\n    Given a string s and a number n, have been implement \n   a function that returns a list of all words from string that contain exactly \n   consonants, in order these appear the string s.   If the string empty then function should return an empty list\n    Note: may input string contains only and.\n   Examples:\n    select_words(\"Mary a little lamb 4> [\"  _words had a little lamb\", [\"Mary\", \"lam    selectwords(\"simple space ==>\n    selectwordsHello\", 4 ==> [\"world\"]  words(\"Uncle 3>Uncle\"]\n    \"\"\"\n","raw":"Given a string s and a natural number n, you have been tasked to implement \n    a function that returns a list of all words from string s that contain exactly \n    n consonants, in order these words appear in the string s.\n    If the string s is empty then the function should return an empty list.\n    Note: you may assume the input string contains only letters and spaces.\n    Examples:\n    select_words(\"Mary had a little lamb\", 4) ==> [\"little\"]\n    select_words(\"Mary had a little lamb\", 3) ==> [\"Mary\", \"lamb\"]\n    select_words(\"simple white space\", 2) ==> []\n    select_words(\"Hello world\", 4) ==> [\"world\"]\n    select_words(\"Uncle sam\", 3) ==> [\"Uncle\"]","reduced":"Given a string s and a natural number n, you have been tasked to implement a function that returns a list all words from string that contain exactly n conson, in order these appear in the stringIf the string s is empty then the function should return an empty list.Note you may assume the input string contains only letters and spacesExamples: select_words(\"Mary had a little lamb\", 4) ==> [\"little\"] selectMary little 3Mary\", \"lamsimple white space 2 []Hello world\", 4worldUncle sam\", 3Un\"]"}
{"task_id":"HumanEval\/118","prompt":"def get_closest_vowel(word):\n    \"\"\"\n     given a word is to find \n    two conson from right the word (case sensitive\n    \n  owels in the beginning and doesn count. Return string if didn't\n   find any vowel met the above condition. \n\n    may assume the given string contains English only.  : _osestow(\"yogurt ==> \"u\n  _clest_vowel(\"ULL\") == \"U\n   getosest_ow(\"quick\") ==>\n    getclos_vowel(\"\") ==> \"\"\n    \"\"\"\n","raw":"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"","reduced":"You are given a word.Your task is to find the closest vowel that stands between two conson from the right side the word (case sensitive).Vowels in the beginning and ending doesn count.Return empty string if you didn find any vowel met the above condition.You may assume the given string contains English letter only.Example: get_clos_vowel(\"yogurt\") ==> \"u\" getFULL\")U getquick\") \"\"ab\") \"\""}
{"task_id":"HumanEval\/119","prompt":"def match_parens(lst):\n    \"\"\"\n    You a list of two strings consist of open\n    parentheses '(' close)' only\n    Your job is check if is to concate the two strings in , will be good.\n    S be good if only all parentheses in S\n    balanced example: the string())()' is good, the string\n   '' not.   Return 'Yes' if there's a way to string, return.\n\n   Examples:\n    match_parens['()( ')']) =='\n  _s([')', ')']) == 'No\n    \"\"\"\n","raw":"You are given a list of two strings, both strings consist of open\n    parentheses '(' or close parentheses ')' only.\n    Your job is to check if it is possible to concatenate the two strings in\n    some order, that the resulting string will be good.\n    A string S is considered to be good if and only if all parentheses in S\n    are balanced. For example: the string '(())()' is good, while the string\n    '())' is not.\n    Return 'Yes' if there's a way to make a good string, and return 'No' otherwise.\n\n    Examples:\n    match_parens(['()(', ')']) == 'Yes'\n    match_parens([')', ')']) == 'No'","reduced":"You are given list two strings, both strings consist open parentheses '(' or close onlyYour job check if it possible conc the two strings in some order, that the resulting string will good.A string S is considered to good if and all parentheses in S balancedFor example: the string '(())() good, while()) notReturn 'Yes if there's a way make a good string, and return otherwiseExamples: match_paren(['()(',)' == 'Yes match([')',)']) =="}
{"task_id":"HumanEval\/120","prompt":"def maximum(arr, k):\n    \"\"\"\n    Given an of integers and a positive integer k, a list     of length with the k numbers.\n\n    Example 1:\n\n    Input: = [-3, -4, 5], k =\n       Output: [-4,3, 5]   Example:\n\n      Input arr =,4, 4], k 2   : [, 4]\n\n  Example:\n\n     : = [-3, 2 1,, -2 1 k = 1\n      Output:2\n\n  Note:    . The length of array will be in the range1, 1000].\n      2. elements in array will be in the range of [-, 1000].\n   . k()\n    \"\"\"\n","raw":"Given an array arr of integers and a positive integer k, return a sorted list \n    of length k with the maximum k numbers in arr.\n\n    Example 1:\n\n        Input: arr = [-3, -4, 5], k = 3\n        Output: [-4, -3, 5]\n\n    Example 2:\n\n        Input: arr = [4, -4, 4], k = 2\n        Output: [4, 4]\n\n    Example 3:\n\n        Input: arr = [-3, 2, 1, 2, -1, -2, 1], k = 1\n        Output: [2]\n\n    Note:\n        1. The length of the array will be in the range of [1, 1000].\n        2. The elements in the array will be in the range of [-1000, 1000].\n        3. 0 <= k <= len(arr)","reduced":"Given an array arr of integers and a positive k return a sorted list length k with the maximum k numbers in arr.Example 1 Input: arr = [-3 -4 5], k 3 Output [-43] Example [4 -4 4 2 [ 4] [- 2 1, 2, -, -2, 1], 12] Note: 1.The length the array will be in the of [1 1000].2.The elements in the array will in the range of [-1000 1000].3.0 <= k <= len(arr)"}
{"task_id":"HumanEval\/121","prompt":"def solution(lst):\n    \"\"\"\n    Given non-empty list of integers, the all of the odd that in even\n  \n\n    Examples\n  solution,,,]) == 12   solution3, 3, 3, 3, 3]) ==> 9\n   solution([30,,]) ==>0\n    \"\"\"\n","raw":"Given a non-empty list of integers, return the sum of all of the odd elements that are in even positions.\n    \n\n    Examples\n    solution([5, 8, 7, 1]) ==> 12\n    solution([3, 3, 3, 3, 3]) ==> 9\n    solution([30, 13, 24, 321]) ==>0","reduced":"Given a nonempty list of integers, return the sum all of the odd elements that are in even positionsExamples solution([5, 8 7 1]) ==> 12 solution3 3 3 3, 3 930 13 24 3210"}
{"task_id":"HumanEval\/122","prompt":"def add_elements(arr, k):\n    \"\"\"\n     non-empty of integers an k,\n   the elements at most two digits from the k of arr.   Example:      Input: arr111,21,3,400056,7,8,], k 4\n     Output # sum 21 +\n\n   Constraints:\n     . len(arr) <=\n        2. 1 <= k()\n    \"\"\"\n","raw":"Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)","reduced":"Given a nonempty array of integers arr and an integer k return sum elements with at two digits from first k elements of arrExample Input: arr = [111213400056], k 4 Output 24 # sum of 21 + 3 Constr 1.1 <= lenarr <= 100 2.1 <= k <= lenarr"}
{"task_id":"HumanEval\/123","prompt":"def get_odd_collatz(n):\n    \"\"\"\n    Given positive n, sorted list that the odd coll sequence.\n\n  The Coll a conjecture in mathematics that concerns a sequence\n  as follows start with n. Then each is obtained the \n    previous term: previous is even, next term is one of \n    the previous term If term is odd the next term is 3 times the previous\n term plus 1. The conjecture is that no matter value n, sequence always reach.\n\n    Note: \n     1.atz(1 is [1].       returned list in increasing order\n\n    example: _atz(5) returns,] collatz sequence for 5 is5, 16, 8, 4, 2 1], the odd numbers are only, and.\n    \"\"\"\n","raw":"Given a positive integer n, return a sorted list that has the odd numbers in collatz sequence.\n\n    The Collatz conjecture is a conjecture in mathematics that concerns a sequence defined\n    as follows: start with any positive integer n. Then each term is obtained from the \n    previous term as follows: if the previous term is even, the next term is one half of \n    the previous term. If the previous term is odd, the next term is 3 times the previous\n    term plus 1. The conjecture is that no matter what value of n, the sequence will always reach 1.\n\n    Note: \n        1. Collatz(1) is [1].\n        2. returned list sorted in increasing order.\n\n    For example:\n    get_odd_collatz(5) returns [1, 5] # The collatz sequence for 5 is [5, 16, 8, 4, 2, 1], so the odd numbers are only 1, and 5.","reduced":"Given a positive integer n return a sorted that has odd numbers in collatz sequenceThe Collatz conjecture a conjecture in mathematics concerns a sequence defined as follows start any positive n.Then each term is obtained previous as if previous even the one halfIf the previous term is odd the next 3 times the previous plus 1The conjecture is no matter value of n, sequence will always reach 1Note 1Collatz(1 is [].2returned list sorted in increasingFor example: get_odd_collatz(5 returns [1 5 # The coll sequence for 5 [5 16 8 4 2], the odd numbers only 1, and 5."}
{"task_id":"HumanEval\/124","prompt":"def valid_date(date):\n    \"\"\"\n     have to write a function whichates given string and   True if date is valid otherwise False The is of following rules are satisfied\n . The is not empty.\n 2. The days not less or than 31 days for months 1,3,7,,,. And number days is not less 1 higher 30 days for months 4,6,., the number is not less than 1 or higher than 29 month 2.\n . The should not be than higher than 12  . The date should be in the format: mmdd-yy\n\n    for example: \n _('03-11-2000 => valid_date('-01-2012 => False\n\n  _date('04--2040 => False\n\n    valid_date('06--2020') => True\n\n    valid_('06\/04\/') => False\n    \"\"\"\n","raw":"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n    valid_date('03-11-2000') => True\n\n    valid_date('15-01-2012') => False\n\n    valid_date('04-0-2040') => False\n\n    valid_date('06-04-2020') => True\n\n    valid_date('06\/04\/2020') => False","reduced":"You have to write a function which valid a given date string and True the is valid otherwise FalseThe date is valid if all of rules are satisfied 1The date string is not empty2.The number days is not less 1 or higher than 31 for months 1,35781012.And the number days is not less 1 or higher than 30 days for months 4,6911.And, the number days is not less 1 or higher than 29 for the month 2.3.The months should not less 1 or higher than 12.4The date should in the format: mm-dd for example: valid_('03112000') => True valid15012012 valid040204006042020 True06\/042020"}
{"task_id":"HumanEval\/125","prompt":"def split_words(txt):\n    \"\"\"\n    Given a string of words, list of words split whitespace, if whitespaces exists in text\n    split commas,' no commas you should number-case with odd order the   alphabet, ord('a') =, ordb = 1,...('') 25\n    Examples\n   split_words(\" world!\") \ufffd [\"world!\"]\n   _(\"Hello,world!\" \u279e [\"Hello \"]  _(\"def\") ==\n    \"\"\"\n","raw":"Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3","reduced":"Given a string words, return a list words split on whites, if nopaces exists in text you should split on comm ',' if no exists you return the number lower- letters with odd order in alphabet, ord('a') = 0, ordb...ord('z') = 25 Examples split_words(\"Hello world!\" \ufffd\ufffd\ufffd [\"Hello\",!\" splitHello,world \ufffd\", splitabcdef\") == 3"}
{"task_id":"HumanEval\/126","prompt":"def is_sorted(lst):\n    \"\"\"\n     a numbers return whether not they sorted\n  ascending. If has than 1 of the same\n  number, return Falseume negative and only integers.\n\n    Examples\n  _sorted([5]) \u279e True    is_sorted([1, 2,, 4, 5 \ufffd True\n    is_sorted([1, 3,, 4 5]) \ufffd\n  issorted([,, 3, 4,,]) \ufffd True   isorted([1 2, 3, 4 5, 7])\ufffd\ufffd\n   is_sorted([1, 2, 4 5 7]) \u279e\n  _sorted([, 2, 2, 3, 4 \ufffd True    is_s([, 2 2, 3, 4\ufffd\n    \"\"\"\n","raw":"Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5]) \u279e True\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False","reduced":"Given a list of numbers, return whether or they are sorted in ascending order.If list has more than 1 duplicate of the same number, return False.Assume no negative numbers and only integers.Examples is_sorted([5]) \ufffd\ufffd\ufffd True is_s([1, 2, 3, 4, 5]) \ufffd True iss1, 3, 2, 4, 5]) \ufffd False is1, 2, 3, 4, 5, 6]) \ufffd True is1 2 3 4,, 7]) \ufffd True is1 3 2 4,,]) \ufffd False is1 2 2 3 3, 4]) \ufffd True is1 2 2 2 3, 4]) \ufffd False"}
{"task_id":"HumanEval\/127","prompt":"def intersection(interval1, interval2):\n    \"\"\"\n    You two,\n  where each interval is a of integers For example interval =start,) =, 2).\n    The given intervals are closed which that the interval (, end)\n    both start.\n    For each given it is that its start is less equal end.\n    Your to determine whether of intersection of these   intervals is a prime number., the intersection the intervals (1), () (2, 3    length is, not a prime.   the length the intersection is a, \"YES\",\n    otherwise, returnNO\".\n    If the two intervals't, \"NO\n    [] samples:\n   intersection((1, 2), (2)) ==> \"\"\n   intersection((1),0 4 ==> \"  ((3, -1 (-5, 5)) ==> \"YES\n    \"\"\"\n","raw":"You are given two intervals,\n    where each interval is a pair of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals are closed which means that the interval (start, end)\n    includes both start and end.\n    For each given interval, it is assumed that its start is less or equal its end.\n    Your task is to determine whether the length of intersection of these two \n    intervals is a prime number.\n    Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which not a prime number.\n    If the length of the intersection is a prime number, return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't intersect, return \"NO\".\n\n\n    [input\/output] samples:\n    intersection((1, 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3, -1), (-5, 5)) ==> \"YES\"","reduced":"You are given two intervals, where each is a pair integers.For example interval = (start, = (1,).The given intervals are closed which means the interval (start, includes both start.For each given interval, it assumed its start is less or itsYour task determine whether the length intersection of these two intervals a prime.Example, the intersection the intervals (1 3), (2 is (2 3) which its length 1, which not a prime number.If the length the intersection a prime return \"YES\", otherwise,If the two intervals don intersect return \"NO\".[input\/output samples: intersection((1 2), (2)) ==> \"NO intersection((- 10 4NO3 - (-5 5YES"}
{"task_id":"HumanEval\/128","prompt":"def prod_signs(arr):\n    \"\"\"\n     are array arr integers need to\n   sum magnitudes of integers multiplied product of all\n   of each array, represented by -1 or.\n   Note: return None for empty arr.\n\n   Example:\n   >>> prod_s([1,, -4]) -9   >>> prod_signs([, 1]) == 0\n   >>>_s])\n    \"\"\"\n","raw":"You are given an array arr of integers and you need to return\n    sum of magnitudes of integers multiplied by product of all signs\n    of each number in the array, represented by 1, -1 or 0.\n    Note: return None for empty arr.\n\n    Example:\n    >>> prod_signs([1, 2, 2, -4]) == -9\n    >>> prod_signs([0, 1]) == 0\n    >>> prod_signs([]) == None","reduced":"You are given an array arr of integers and you need return sum of magn of integers multiplied product all signs of each number in, represented 1, - or 0Note return None for empty arr.Example: >>> prod_signs([1 2 -4]) == -9 >>> prod0 1]) 0]) None"}
{"task_id":"HumanEval\/129","prompt":"def minPath(grid, k):\n    \"\"\"\n    Given a grid with N rows and N columns (N >=) and a k, \n  each the grid contains a value Every integer in range [1, N]\n   inclusive appears once on the of the grid.\n\n  You have find the minimum of length k in the.    from any and each step move to any of the neighbor,   in other words, can to cells which an you\n  cell.\n    Please note that a path k exactly cells ( necessarily distinct).  YouNOT go off the grid.\n   A (of length less than a path B (of k)\n    after making the ordered lists of the values on the that A and B go\n    through ('s them lst_A and lstB), lst_A is lexographically less\n   than lst_B, other words, there exist integer index i1 <= i k)   thatstA] lst_B[i] and for any <= j i we have\n   st_A] lst_B[j].   It that the answer is unique.  Return an list of values on the that the minimum path through.\n\n     Input: grid = [ [12,3 [4,5,6], [7,8,9]\n    Output [ 1]     : grid = [,,34,16 [7,8,2] k = 1\n     Output: [1\n    \"\"\"\n","raw":"Given a grid with N rows and N columns (N >= 2) and a positive integer k, \n    each cell of the grid contains a value. Every integer in the range [1, N * N]\n    inclusive appears exactly once on the cells of the grid.\n\n    You have to find the minimum path of length k in the grid. You can start\n    from any cell, and in each step you can move to any of the neighbor cells,\n    in other words, you can go to cells which share an edge with you current\n    cell.\n    Please note that a path of length k means visiting exactly k cells (not\n    necessarily distinct).\n    You CANNOT go off the grid.\n    A path A (of length k) is considered less than a path B (of length k) if\n    after making the ordered lists of the values on the cells that A and B go\n    through (let's call them lst_A and lst_B), lst_A is lexicographically less\n    than lst_B, in other words, there exist an integer index i (1 <= i <= k)\n    such that lst_A[i] < lst_B[i] and for any j (1 <= j < i) we have\n    lst_A[j] = lst_B[j].\n    It is guaranteed that the answer is unique.\n    Return an ordered list of the values on the cells that the minimum path go through.\n\n    Examples:\n\n        Input: grid = [ [1,2,3], [4,5,6], [7,8,9]], k = 3\n        Output: [1, 2, 1]\n\n        Input: grid = [ [5,9,3], [4,1,6], [7,8,2]], k = 1\n        Output: [1]","reduced":"Given a grid with N rows and N (N >= 2) and a positive integer k, each cell of contains a value.Every integer in the range [1 N * N] inclusive appears exactly once on cells of gridYou have to find the minimum path of length k in the grid.You can start from any cell, and in each step you can move to any of neighbor, in other, you go to cells which share an edge with you current cellPlease note a path of length k means visiting exactly k cells (not necessarily distinct).You CANNOT go off the grid.A path A (of length k is considered less a path B ( if after making the ordered lists of the values on cells that A and go through (let's call lst_A), l is lexic less, in other there exist an integer index i (1 <= i <= k such l[ < and for any j (1 < i we have l =].It is guaranteed the answer is unique.Return an ordered list the values on the cells that the minimum path go through.Examples: Input: grid = [ [12],4]], k = 3 Output [1 2 1] Input grid593416782 1]"}
{"task_id":"HumanEval\/130","prompt":"def tri(n):\n    \"\"\"\n    Everyone knows Fibon sequence, it was studied deeply byians\n   the. However, what don't know sequence   Tribonacci sequence is defined by the rec\n    tri(1) =  tri(n) = 1 n \/ 2, if n is even\n  n) tri( - 1) +(n - 2) + trin + 1 if n is  For example\n  tri) = 12 \/) 2\n  4) = 3\n  3)(2 tri(1) +(4\n         2 + 3 + 8 \n   You are given a non- integer number, you have a return a list of the \n   first n 1 numbers of the Tribonacci.  :\n   tri(3) =1, 3 2, 8\n    \"\"\"\n","raw":"Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in \n    the last couple centuries. However, what people don't know is Tribonacci sequence.\n    Tribonacci sequence is defined by the recurrence:\n    tri(1) = 3\n    tri(n) = 1 + n \/ 2, if n is even.\n    tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    For example:\n    tri(2) = 1 + (2 \/ 2) = 2\n    tri(4) = 3\n    tri(3) = tri(2) + tri(1) + tri(4)\n           = 2 + 3 + 3 = 8 \n    You are given a non-negative integer number n, you have to a return a list of the \n    first n + 1 numbers of the Tribonacci sequence.\n    Examples:\n    tri(3) = [1, 3, 2, 8]","reduced":"Everyone knows Fib sequence, it was studied deeply mathematic in last couple centuriesHowever what people don know Tribonacci sequence.Tribonacci sequence is defined by the rec: tri(1) = 3 trin 1 + n \/, if even.tri(n) = tri - + + 1), if n is odd.For example: tri(2 = 1 + (2 \/ = 2 tri4 3 tri3 tri2 +1 +4 2 + 3 + 3 = 8 You are given a nonnegative number n, you have to a return a list the first n + numbers of TribonacciExamples: tri(3 = [1 3 2 8]"}
{"task_id":"HumanEval\/131","prompt":"def digits(n):\n    \"\"\"\n    Given a n, return the product odd digits.\n    0 if all digits even\n    For example\n 1) 1\n    digits(4 0\n   digits(235 == 15\n    \"\"\"\n","raw":"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15","reduced":"Given a positive integer n return product odd digits.Return 0 if all digits evenFor example: digits(1) == 1 digits4 0235 15"}
{"task_id":"HumanEval\/132","prompt":"def is_nested(string):\n    \"\"\"\n     a function that takes input which only square.\n  The function should return and only there is subsequence of brackets \n   where at one bracket the subsequence nested.    is_n[[]]')\ufffd\ufffd True\n   isnested('[]]]]]]][[[[[] \ufffd  is_ested('][')\ufffd\ufffd False\n    is_nested('[]')\ufffd False   is_nested('[[][]]') \ufffd True  ('[][') \u279e True\n    \"\"\"\n","raw":"Create a function that takes a string as input which contains only square brackets.\n    The function should return True if and only if there is a valid subsequence of brackets \n    where at least one bracket in the subsequence is nested.\n\n    is_nested('[[]]') \u279e True\n    is_nested('[]]]]]]][[[[[]') \u279e False\n    is_nested('[][]') \u279e False\n    is_nested('[]') \u279e False\n    is_nested('[[][]]') \u279e True\n    is_nested('[[]][[') \u279e True","reduced":"Create a function that takes a string as input which contains only square brackets.The function should return True if and there is a valid subsequ of brackets where at least bracket in the subsequ is nested.is_nested('[[]]') \ufffd\ufffd\ufffd True is_n('[]]]]]]][[[[[]') \ufffd False is[][]') False is[] False is[[][]] True[[]][[') \ufffd True"}
{"task_id":"HumanEval\/133","prompt":"def sum_squares(lst):\n    \"\"\"\n    You are a numbers.\n   You need to return the of squared numbers the\n   round each element the upper inteiling) first.  Examples:\n    For l = [,2,3] the output should be 14\n  For =14,] the should 98   For lst [,357] the output be 84\n   For l = [1.,42,0] output should 29\n   For lst = [-2.4,,1 output be 6\n    \"\"\"\n","raw":"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6","reduced":"You are given a list numbers.You need to return the sum of squared numbers in the given list, round each element in the to the upper int(Ceiling) first.Examples: For lst = [1,2,] the output should be 14 For l [149] 98 For135,7 84 For1.44.2,0] 29 For [-2.41,1] 6"}
{"task_id":"HumanEval\/134","prompt":"def check_if_last_char_is_a_letter(txt):\n    \"\"\"\n     a function that returns True the last character    a given is anical and not  a of a word, and False otherwise.\n   Note \"word\" is a of characters separated by space\n\n   Examples\n _if_last_charisletter(\"apple\")\ufffd False\n  check_iflast_char_isa_letter(\"apple pi\") \ufffd True\n   checkif_lastchar_is_a_letter(\"apple)\ufffd\n  __last_char_is__letter(\"\")\ufffd False\n    \"\"\"\n","raw":"Create a function that returns True if the last character\n    of a given string is an alphabetical character and is not\n    a part of a word, and False otherwise.\n    Note: \"word\" is a group of characters separated by space.\n\n    Examples:\n    check_if_last_char_is_a_letter(\"apple pie\") \u279e False\n    check_if_last_char_is_a_letter(\"apple pi e\") \u279e True\n    check_if_last_char_is_a_letter(\"apple pi e \") \u279e False\n    check_if_last_char_is_a_letter(\"\") \u279e False","reduced":"Create a function that returns True if the last character of a given string is an alphabetical character and is not a part a word, and False otherwise.Note: \"word\" is a group of characters separated by space.Examples: check_if_last_char_is_a_letter(\"apple pie\") \ufffd\ufffd\ufffd False checkiflastcharaletter(\"apple pi e\") \ufffd True checkapple pi e \") \ufffd False check\") \ufffd False"}
{"task_id":"HumanEval\/135","prompt":"def can_arrange(arr):\n    \"\"\"\n     a function which largest index of an which\n   not greater than equal to the element immediately preceding it\n   no such element exists then return -1. The given not contain\n  duplicate values.   \n  can_ange([2,4,3,5])   arrange1,2,3 = -\n    \"\"\"\n","raw":"Create a function which returns the largest index of an element which\n    is not greater than or equal to the element immediately preceding it. If\n    no such element exists then return -1. The given array will not contain\n    duplicate values.\n\n    Examples:\n    can_arrange([1,2,4,3,5]) = 3\n    can_arrange([1,2,3]) = -1","reduced":"Create a function which returns the largest index of an element which is not greater element immediately precedingIf no such element exists then return -.The given array will not contain duplicate values.Examples: can_arr([12435]) = 3 can3]) -"}
{"task_id":"HumanEval\/136","prompt":"def largest_smallest_integers(lst):\n    \"\"\"\n    Create a function returns (a,), wherea' is   the of negative integers,'is the\n   of positive in a list.   If there is no negative or positive integers as None.\n\n  Examples:\n_smallest_integers, 4 1, 3 5]) (,)\n  largest_est_integ([ == (None, None)\n   largest_smallest_integ([0]) == (None, None)\n    \"\"\"\n","raw":"Create a function that returns a tuple (a, b), where 'a' is\n    the largest of negative integers, and 'b' is the smallest\n    of positive integers in a list.\n    If there is no negative or positive integers, return them as None.\n\n    Examples:\n    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)\n    largest_smallest_integers([]) == (None, None)\n    largest_smallest_integers([0]) == (None, None)","reduced":"Create a function that returns a tuple (a,), where '' the largest of negative integers, and ' of in a list.If there is no negative or positive integers, return them as None.Examples: largest_smallestintegers([2, 4, 1, 3, 5, 7]) == (None 1) largest]) == (None None largest0]) None"}
{"task_id":"HumanEval\/137","prompt":"def compare_one(a, b):\n    \"\"\"\n    Create function that takes or strings\n    real numbers, and returns variable in its given variable type.\n  Return if the values are equal  : If a real number is represented as, floating point be or,    compare_one1, 2.5 \u279e 2.5   compare_one,23\") \ufffd \"2,3\"  (\"5,\",6 \ufffd \"6\" compare_one(\"1\", 1) \u279e None\n    \"\"\"\n","raw":"Create a function that takes integers, floats, or strings representing\n    real numbers, and returns the larger variable in its given variable type.\n    Return None if the values are equal.\n    Note: If a real number is represented as a string, the floating point might be . or ,\n\n    compare_one(1, 2.5) \u279e 2.5\n    compare_one(1, \"2,3\") \u279e \"2,3\"\n    compare_one(\"5,1\", \"6\") \u279e \"6\"\n    compare_one(\"1\", 1) \u279e None","reduced":"Create a function that takes integers, floats or strings representing real numbers, and the larger variable in its given variable typeReturn None if the values are equal.Note If a real number represented as a string the floating might.or, compare_one(1, 2.5) \ufffd\ufffd\ufffd 2. compare \"2,3\") \"2 compare(\"5,1\",661\", 1) None"}
{"task_id":"HumanEval\/138","prompt":"def is_equal_to_sum_even(n):\n    \"\"\"\n    Evaluate whether the given number n can written as the sum exactly 4 positive\n   Example\n   is_equal_tosum_() False\n  isequal_to_sum_even(6) False\n  equal_to_(8\n    \"\"\"\n","raw":"Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers\n    Example\n    is_equal_to_sum_even(4) == False\n    is_equal_to_sum_even(6) == False\n    is_equal_to_sum_even(8) == True","reduced":"Evaluate whether the given number n can be written as the sum exactly 4 positive even numbers Example is_equal_to_sum_even(4) == False is_sum(6 == False is8 True"}
{"task_id":"HumanEval\/139","prompt":"def special_factorial(n):\n    \"\"\"\n    The Brazilian factorial is defined:\n   b_orial() = n! * (n-)! (2... * 1  where n >\n\n   For\n  factorial4)\n    288    The function will receive an integer input and should return the special\n    fact of integer\n    \"\"\"\n","raw":"The Brazilian factorial is defined as:\n    brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n    where n > 0\n\n    For example:\n    >>> special_factorial(4)\n    288\n\n    The function will receive an integer as input and should return the special\n    factorial of this integer.","reduced":"The Brazilian factorial is defined: brazil_fact(n = n! * ()! * *...* 1! where n > 0 For >>> specialfact4) 288 The function will receive an integer as input and should special of this integer"}
{"task_id":"HumanEval\/140","prompt":"def fix_spaces(text):\n    \"\"\"\n     a text, replace all spaces in it,   and if a string has more than 2 consecutive spaces,    then consecutive spaces -\n \n  fix_spaces(\"Example\") == \"\"   _sp(\" 1 \"Example_1\"\n    fix_aces Example\") == \"__2\n   fixspaces Example   3\") == \"_Example\"\n    \"\"\"\n","raw":"Given a string text, replace all spaces in it with underscores, \n    and if a string has more than 2 consecutive spaces, \n    then replace all consecutive spaces with - \n    \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\" Example   3\") == \"_Example-3\"","reduced":"Given a string text, replace all spaces in it underscores, and if a string has more 2 consecutive spaces, then replace all consecutive with - fix_sp(\"Example\") == \"Example\" fixsp(\"Example 1\") ==_1\" fix Example \"_Example_2 fix Example \"_-3"}
{"task_id":"HumanEval\/141","prompt":"def file_name_check(file_name):\n    \"\"\"\n    Create function which takes a string file and returns\n   Yes' if the the file's name is valid and returns 'No\n   file name is considered be valid only if conditions\n   are:    There should not be more than digits (''-'') in the's   - The name one dot '.'\n   - The substring before the dot should be empty and starts with a letter    the latphap ('a'-'' and ''').\n   - Thering after should be of: ['',exe 'dll']\n   Examples   _name_check(\"example.\") # => 'Yes'    file_name_(\"1example.dll => 'No'the name should start with lat alphapet letter)\n    \"\"\"\n","raw":"Create a function which takes a string representing a file's name, and returns\n    'Yes' if the the file's name is valid, and returns 'No' otherwise.\n    A file's name is considered to be valid if and only if all the following conditions \n    are met:\n    - There should not be more than three digits ('0'-'9') in the file's name.\n    - The file's name contains exactly one dot '.'\n    - The substring before the dot should not be empty, and it starts with a letter from \n    the latin alphapet ('a'-'z' and 'A'-'Z').\n    - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n    Examples:\n    file_name_check(\"example.txt\") # => 'Yes'\n    file_name_check(\"1example.dll\") # => 'No' (the name should start with a latin alphapet letter)","reduced":"Create a function which takes a string representing a file's name, and 'Yes the the's valid, and returns ' otherwiseA file's name is considered to valid if and all the following - There should not more three digits ('0'-'9 file's.- The file's name contains exactly one dot '.' - subst before dot should not empty, and it starts a letter from lat alapet ('a'-'z' andAZ- The substring after dot should one these: ['txt',exe',dll Examples file_name_check(\"exampletxt # => 'Yes file1exampledllNo (the name should start a lat alapet letter"}
{"task_id":"HumanEval\/142","prompt":"def sum_squares(lst):\n    \"\"\"\n    \"\n   This will list of integers For all entries in the list, the function shall integer entry if its index is a    multiple of and will the integer entry is a multiple of 4 and a multiple. not \n    change the the list are not 3 or 4. function shall then return the sum of all entries. \n  \n  Examples   For lst = [1,2,3] the should be 6\n  For l = []  the output be 0\n   lst = [-1,-5,-,-] output -\n    \"\"\"\n","raw":"\"\n    This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a \n    multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not \n    change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3] the output should be 6\n    For lst = []  the output should be 0\n    For lst = [-1,-5,2,-1,-5]  the output should be -126","reduced":"\" This function will take a list integers.For all entries in the list, the function shall square the integer entry if its index a multiple 3 and will cube integer 4 and not a 3The function will not change the entries in list whose indexes not a multiple 3 or 4The function shall then return the sum all entries.Examples: For lst = [12] the output should 6 For [] 0 For [-,-5,2,-1,-5 -126"}
{"task_id":"HumanEval\/143","prompt":"def words_in_sentence(sentence):\n    \"\"\"\n     are a string representing a   sentence contains words by a space  and you have return a string contains the words the original sentence,\n    lengths prime numbers,   the order of the words the string should the same as the original one.\n\n    Example 1:\n : sentence \"This is test\"\n     Output: \"\"   Example:\n        Input: = \"lets for swimming\"\n      Output: \"go for\"\n\n  straints:\n      1 <= lensentence)      * only\n    \"\"\"\n","raw":"You are given a string representing a sentence,\n    the sentence contains some words separated by a space,\n    and you have to return a string that contains the words from the original sentence,\n    whose lengths are prime numbers,\n    the order of the words in the new string should be the same as the original one.\n\n    Example 1:\n        Input: sentence = \"This is a test\"\n        Output: \"is\"\n\n    Example 2:\n        Input: sentence = \"lets go for swimming\"\n        Output: \"go for\"\n\n    Constraints:\n        * 1 <= len(sentence) <= 100\n        * sentence contains only letters","reduced":"You are given a string representing a sentence, the sentence contains some words separated a space, and you have return a string that the words from original, whose lengths prime, the order words in new string should the original oneExample 1 Input: sentence = \"This a test\" Output \"is\" Examplelets go for swimminggo\" Constr * 1 <= lensent <= 100 * sentence contains only letters"}
{"task_id":"HumanEval\/144","prompt":"def simplify(x, n):\n    \"\"\"\n     task is to implement that simplify expression\n  x * n The function returns if x * n evaluates to a whole number and False\n. Both n, string representation of a fraction, and have following format,   <umer><denominator> where both numerator and denominator are whole    assume that x, and valid fractions, not have zero as denominator.\n\n  (\"1\/5\", \"51\") = (\"\/6 \"\/\") = False\n   7\/10\/2\") = False\n    \"\"\"\n","raw":"Your task is to implement a function that will simplify the expression\n    x * n. The function returns True if x * n evaluates to a whole number and False\n    otherwise. Both x and n, are string representation of a fraction, and have the following format,\n    <numerator>\/<denominator> where both numerator and denominator are positive whole numbers.\n\n    You can assume that x, and n are valid fractions, and do not have zero as denominator.\n\n    simplify(\"1\/5\", \"5\/1\") = True\n    simplify(\"1\/6\", \"2\/1\") = False\n    simplify(\"7\/10\", \"10\/2\") = False","reduced":"Your task implement a function that will simplify the expression x * n.The function returns True x * n evaluates a whole andBoth x and n, are string representation of a fraction, and have the following format, <numerator\/den where both numer positive wholeYou can assume x, and n are valid fractions, and do have zero as denominsimplify(\"1\/5\", \"5\/1\") = True simplify621 False710102"}
{"task_id":"HumanEval\/145","prompt":"def order_by_points(nums):\n    \"\"\"\n    Write a which sorts the list of integers\n   in ascending order according to the of digits.\n   Note: if are several items with similar sum of their digits    order them on their index original.\n\n   For example    >>> orderpoints([,, -1, -11, -]) == [-1,11,, 11]  __([])\n    \"\"\"\n","raw":"Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []","reduced":"Write a function which sorts the given list of integers in ascending according sum their digitsNote if there are several items with similar sum of their digits order based their index in original listFor example: >>> order_by_points([1 11 -1 -11 -12]) == [-11 112, 11]]) []"}
{"task_id":"HumanEval\/146","prompt":"def specialFilter(nums):\n    \"\"\"\n    Write a function that takes an of numbers input and    the number the array that greater than 10 both\n   first and last digits of a are odd1 3, 5 7, 9\n  For example:\n    specialFilter15 -, -]) => 1 \n   special([33 -2,3 45 21, 109 => 2\n    \"\"\"\n","raw":"Write a function that takes an array of numbers as input and returns \n    the number of elements in the array that are greater than 10 and both \n    first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n    specialFilter([15, -73, 14, -15]) => 1 \n    specialFilter([33, -2, -3, 45, 21, 109]) => 2","reduced":"Write a function that takes an array numbers as input the number elements that are greater 10 and both first digits of a number are odd (1, 3 5 7 9).For example: specialFilter([15 -73 14, -15]) => 1 special3323 45, 21 109 2"}
{"task_id":"HumanEval\/147","prompt":"def get_max_triples(n):\n    \"\"\"\n    You are a integer n You have to create integer a of length n      For each i1 \u2264 \u2264 n value of a[i] = i - i +\n       Return number of triplesa[ij], a[k of a where i < < k,   [i] a[j ak] is a multiple of 3.\n\n   Example :\n     Input: 5\n     1\n      Explan: \n     = [1, 3, 13,]\n      The valid triple is1 7, 13).\n    \"\"\"\n","raw":"You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).","reduced":"You are given positive integer n.You have to create an integer array a of length n.For each i (1 \u2264 n), the value a[ = i * i - i +.Return the number tri (a[i],j],]) of where i < <, and a] + + is a multiple 3Example : Input: n = 5 Output 1 Explan a [1 3 7 13 21] The only valid triple is (1 7)."}
{"task_id":"HumanEval\/148","prompt":"def bf(planet1, planet2):\n    \"\"\"\n    There are eight planets in: closerst to the Sun\n  is Mercury the one is Venus, then Mars, Jupiter  Uranus, Neptune.   Write a function that two planet as strings1 and planet. \n  The function should return a tuple containing all planets whose orbits are \n    located between orbit of planet1 and the orbit of2 by \n   the to the sun.    The function tuple if planet or planet\n    are not correct planet names.\n    fJupiter\", \"Neptune\") ==> (\" \"Uranus\")  bf(\"Earth\", \"Merc\")> (\"\")   bf(\"Merc\",Uranus\")> (\"Venus\", \"Mars\", \" \"urn\")\n    \"\"\"\n","raw":"There are eight planets in our solar system: the closerst to the Sun \n    is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n    Uranus, Neptune.\n    Write a function that takes two planet names as strings planet1 and planet2. \n    The function should return a tuple containing all planets whose orbits are \n    located between the orbit of planet1 and the orbit of planet2, sorted by \n    the proximity to the sun. \n    The function should return an empty tuple if planet1 or planet2\n    are not correct planet names. \n    Examples\n    bf(\"Jupiter\", \"Neptune\") ==> (\"Saturn\", \"Uranus\")\n    bf(\"Earth\", \"Mercury\") ==> (\"Venus\")\n    bf(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\")","reduced":"There are eight planets in our: the closerst to the Sun is Mercury, next one is Venus, then Earth, Mars Jupiter Uran Neptune.Write a function that takes two planet names as strings planet1 and.The function should return a tuple containing all planets whose orbits are located between the orbit planet1 the orbit, sorted by the proximity to the sun.The function should return an empty tuple if planet1 or are not correct planet names.Examples bf(\"Jupiter\", \"Ne\") ==> (\"Sat\",U bEarthMerc ==Ven\")MercU ==Ven\",Earth\",Mars\",J\",Sat"}
{"task_id":"HumanEval\/149","prompt":"def sorted_list_sum(lst):\n    \"\"\"\n    Write a function that accepts a list of strings as a parameter   deletes the strings that have odd from it,\n    and returns the resulted list with a order,  The always a list of strings and never of   and it may contain duplicates\n    The order of the list should by length each, and you\n  should return sorted by rule.\n   words have the same length, sort the alphabetically.  The return a list of strings\n  assume that will have the same length.   For example:\n   assert_sorta\", \"\"]) => [\"aa\"]\n  assert_([\"ab\", \"a \"aaa \"cd) => [\"ab\",\"]\n    \"\"\"\n","raw":"Write a function that accepts a list of strings as a parameter,\n    deletes the strings that have odd lengths from it,\n    and returns the resulted list with a sorted order,\n    The list is always a list of strings and never an array of numbers,\n    and it may contain duplicates.\n    The order of the list should be ascending by length of each word, and you\n    should return the list sorted by that rule.\n    If two words have the same length, sort the list alphabetically.\n    The function should return a list of strings in sorted order.\n    You may assume that all words will have the same length.\n    For example:\n    assert list_sort([\"aa\", \"a\", \"aaa\"]) => [\"aa\"]\n    assert list_sort([\"ab\", \"a\", \"aaa\", \"cd\"]) => [\"ab\", \"cd\"]","reduced":"Write a function that accepts list strings as a parameter, delet strings that have odd lengths from it resulted with a sorted order, The list is always a list and never an numbers, and it may duplThe order of list should ascending by length of each word, and you should return the list sorted that ruleIf two words have the length sort the list alphabet.The function should return a list strings in sortedYou may assume all words will have the length.For example: assert list_sort([\"aaaaaa\"]) => [\"\"] assertaba\",cdab\",cd"}
{"task_id":"HumanEval\/150","prompt":"def x_or_y(n, x, y):\n    \"\"\"\n    A simple program should return value of x if n is \n   a number and return of.    Examples    for xor_y(,, 12) 34   for_or_y15, 8, 5 5\n    \"\"\"\n","raw":"A simple program which should return the value of x if n is \n    a prime number and should return the value of y otherwise.\n\n    Examples:\n    for x_or_y(7, 34, 12) == 34\n    for x_or_y(15, 8, 5) == 5","reduced":"A simple program which should return the value x if n is a prime and should the value otherwiseExamples: for x_ory(7, 34, 12) == 34 for15 8 5 5"}
{"task_id":"HumanEval\/151","prompt":"def double_the_difference(lst):\n    \"\"\"\n    Given a list numbers, return the sum of squares of the numbers  in the list that are odd Ignore numbers that are negative integers\n    \n  double_erence,, 2, 0]) == 1 + 9 + = 10   double_difference-1 -2, 0 == 0\n double__difference([, -2 81\n   _the_diff([0]) == 0   \n    input list empty, return.\n    \"\"\"\n","raw":"Given a list of numbers, return the sum of squares of the numbers\n    in the list that are odd. Ignore numbers that are negative or not integers.\n    \n    double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n    double_the_difference([-1, -2, 0]) == 0\n    double_the_difference([9, -2]) == 81\n    double_the_difference([0]) == 0  \n   \n    If the input list is empty, return 0.","reduced":"Given a list numbers, return the sum squares of the numbers in list that are odd.Ignore numbers that are negative or not integers.double_the_diff([1 3, 2, 0]) == 1 + 9 + 0 + 0 = 10 double- -2 0 0 double9 -2]) 81 double0]) 0 If the input list empty return 0."}
{"task_id":"HumanEval\/152","prompt":"def compare(game,guess):\n    \"\"\"\n    I think we remember that feeling when the of some long-awaited\n   event is and thoughts you have at that moment\n    definitely worth noting down and comparing.   Your task is determine a person results of a.\n   are given two of scores guesses equal length, where each index shows a match.    Return of the same length den how far off each guess was. If they have correctly,\n    the value is, and if, the value is the absolute difference the and score.   \n  example:\n\n    compare12,,5,1,24,2]) ->0,0,,3,]\n   compare([0,0,,,4],[4,1,10]) [4,,1,0,0,]\n    \"\"\"\n","raw":"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]","reduced":"I think we all remember that feeling when the result some long-awaited event is finally knownThe feelings and thoughts you have at that are definitely worth noting down and comparing.Your task determine if a person correctly guessed the results a number matches.You are given two arrays scores and guesses of equal length, where each index shows a match.Return an array the same length denoting how far off each guess was.If they have guessed correctly the value is 0, and if not the value the absolute difference guess scoreexample: compare([121],[12,-2]) -> [00033] compare0504],[4110,-244106]"}
{"task_id":"HumanEval\/153","prompt":"def Strongest_Extension(class_name, extensions):\n    \"\"\"\n     will be the of a class (a) and a list\n    extensions are be load additional classes to class The\n    of the is as follows: Let be number of the uppercase\n    letters in extension's and let SM be the numbercase letters \n    in the's name, the strength is the CAP SM. \n  should the strongest extension and return string in this \n   format: ClassNameExtName.\n    If there two more with same strength, you should\n  choose one that comes in.\n    For example, if you are \"Slic\" as class and a list of   SErNGSlies '', 'uF then you should\n    return 'Slic.rviSC sinceSENGSliCes' is the extension \n its strength -).      forest_('_class', ['AA',Be', 'CC]) =='my.AA'\n    \"\"\"\n","raw":"You will be given the name of a class (a string) and a list of extensions.\n    The extensions are to be used to load additional classes to the class. The\n    strength of the extension is as follows: Let CAP be the number of the uppercase\n    letters in the extension's name, and let SM be the number of lowercase letters \n    in the extension's name, the strength is given by the fraction CAP - SM. \n    You should find the strongest extension and return a string in this \n    format: ClassName.StrongestExtensionName.\n    If there are two or more extensions with the same strength, you should\n    choose the one that comes first in the list.\n    For example, if you are given \"Slices\" as the class and a list of the\n    extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n    return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension \n    (its strength is -1).\n    Example:\n    for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) == 'my_class.AA'","reduced":"You will be given the name a class (a string) a list extensions.The extensions are to used to load additional classes to the class.The strength extension is as Let CAP be number the u letters in extension's name, let SM be lower, the strength is given fraction CAP - SM.You should find the strongest extension and return a string in this format ClassName.StrongestName.If there are two or extensions with strength you should choose the comes first inFor example if are given \"Slices\" as the class and a list the extensions: ['SErviNGSliCes',Cheese',StuFfed'] then should return 'S.SE' since ' the strongest extension (its strength -Example: for Strongest_Ext('myclass', ['AA',Be',CC' == 'my.AA"}
{"task_id":"HumanEval\/154","prompt":"def cycpattern_check(a , b):\n    \"\"\"\n    You are given words to return the second of its rotations is a substring in first word\n cpattern_(\"abcdabd\") False\n    cyc_(\"hello\",\"\") =>\n   cypattern_(\"whass\",\"ps False\n   cpattern_checkab\",\"\") True\n   cpatterncheck(\"ef\",\"eeff\") => False\n  cycpattern_(\"himenss\",\"simen\")\n    \"\"\"\n","raw":"You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word\n    cycpattern_check(\"abcd\",\"abd\") => False\n    cycpattern_check(\"hello\",\"ell\") => True\n    cycpattern_check(\"whassup\",\"psus\") => False\n    cycpattern_check(\"abab\",\"baa\") => True\n    cycpattern_check(\"efef\",\"eeff\") => False\n    cycpattern_check(\"himenss\",\"simen\") => True","reduced":"You are given 2 words.You need to return True if the second word or any of its rotations is a subst in the first word cycpattern_check(\"abcd\",\"abd\") => False cyhello\",\"ell\") True cywhassuppsus\") False cyabab\",\"baa True cyefef\",\"eeff False cyhimenss\",\"simen\") True"}
{"task_id":"HumanEval\/155","prompt":"def even_odd_count(num):\n    \"\"\"\n    Given an integer. return a tuple that has number of even and digits respectively   Example:\n     even_oddcount(-> (1, 1\n   even_odd_count(123) ==> (1,\n    \"\"\"\n","raw":"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)","reduced":"Given an integer.return a tuple that has the number even and digits respectivelyExample: even_odd_count(-12 ==> (1, 1 even(123 == 2"}
{"task_id":"HumanEval\/156","prompt":"def int_to_mini_roman(number):\n    \"\"\"\n     a integer, obtain r a string   and return in lowercase.\n    Restrictions: 1 <= num 1000\n\n    Examples:\n    >>>to_mini_roman() == 'ix'\n   _to_mini_roman(152 == 'clii'  __(426)xxvi'\n    \"\"\"\n","raw":"Given a positive integer, obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19) == 'xix'\n    >>> int_to_mini_roman(152) == 'clii'\n    >>> int_to_mini_roman(426) == 'cdxxvi'","reduced":"Given a positive integer, obtain its roman num equivalent as a string, and return it in lowercase.Restrict: 1 <= num <= 1000 Examples: >>> int_tomini_roman(19) == 'xix' >>> intmini152clii >>>426cdxxvi"}
{"task_id":"HumanEval\/157","prompt":"def right_angle_triangle(a, b, c):\n    \"\"\"\n     the the three triangle Return True if the three\n   sides a rightangled False otherwise.\n    A right-angled is a triangle in which one angle right angle or\n   90 degree.\n  Example\n    right_angle_angle(3 4 == True    right_angle_triangle(,) ==\n    \"\"\"\n","raw":"Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False","reduced":"Given the lengths of the three sides of a triangle.Return True if the three sides form rightangled, False otherwiseA rightangled triangle is triangle in one angle right angle or 90 degree.Example: right_angle_tri(3 4) == True right1 False"}
{"task_id":"HumanEval\/158","prompt":"def find_max(words):\n    \"\"\"\n    Write a function accepts a strings.    The list different words. Return the word with number\n    of unique. If multiple have maximum number unique\n   return one in lexic order.\n\n    find_max(name \"\",string\"]) == \"\"\n  _max([\"name\", \"am \" \"enam\n  find_([\"aaa \"bb\",\") \"\"aaaaaaa\"\n    \"\"\"\n","raw":"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"","reduced":"Write a function that accepts a list strings.The list contains different words.Return the word with maximum number unique characters.If multiple strings have maximum number unique return the one which comes in lexicographicalfind_max([\"name\",of\",string) == \"string findmaxnameenam\",game\"]en findaaaaaaabb\",\"cc\"] \"\"aaaaaaa"}
{"task_id":"HumanEval\/159","prompt":"def eat(number, need, remaining):\n    \"\"\"\n    You a hungry rabbit, and you already have eaten certain number of carrots    but you need to eat more to complete the day's meals\n  you should array of [ total of carrots after your meals\n                             the of your ]\n   there are not enough remaining carrots, will eat all remaining, still be hungry.   Example\n   *, 6, 10 -> [ 4]   * eat(4,, 9) -> [12, 1\n   * eat(1, 10, 0\n    * eat( 11, 5) -> [ 0]\n     Variables:   number : integer\n    the carrots that you have\n    @need : integer\n      the number of that you need eat.\n    @rem : integer\n      of carrotst exist in stock   \n  strain:    * 0 <= <= 1000\n   0 <=\n    * <= remaining <= 1000  \n    \"\"\"\n","raw":"You're a hungry rabbit, and you already have eaten a certain number of carrots,\n    but now you need to eat more carrots to complete the day's meals.\n    you should return an array of [ total number of eaten carrots after your meals,\n                                    the number of carrots left after your meals ]\n    if there are not enough remaining carrots, you will eat all remaining carrots, but will still be hungry.\n    \n    Example:\n    * eat(5, 6, 10) -> [11, 4]\n    * eat(4, 8, 9) -> [12, 1]\n    * eat(1, 10, 10) -> [11, 0]\n    * eat(2, 11, 5) -> [7, 0]\n    \n    Variables:\n    @number : integer\n        the number of carrots that you have eaten.\n    @need : integer\n        the number of carrots that you need to eat.\n    @remaining : integer\n        the number of remaining carrots thet exist in stock\n    \n    Constrain:\n    * 0 <= number <= 1000\n    * 0 <= need <= 1000\n    * 0 <= remaining <= 1000\n\n    Have fun :)","reduced":"You're a hungry rabbit, and already eaten a certain number carrots, but now need eat more to complete day's mealsyou should return an array [ total number eaten carrots after your meals, the left after ] if there not remaining, you will eat all remaining, but will still be hungryExample: * eat(5, 6 10 -> [11 4] *4 8 912 11 10 1011 02 11 57 0 Vari: @number : integer the carrots that you have eaten@need : integer the number carrots that you need eat.@remaining : integer the remaining carrots thet exist in stock Constrain: * 0 <= number <= 1000 * 0 need <= 1000 * remaining <= 1000 Have fun :)"}
{"task_id":"HumanEval\/160","prompt":"def do_algebra(operator, operand):\n    \"\"\"\n    Given two lists operator, and operand. The first has basic algebra operations and \n    the second list is of integers. Use the given lists to build the algebric    and the of this expression  algebra operations:\n  ( + \n  Subtraction ( - \n  pl ( * )     Floor division ( ) \n  onentiation ( ** ) \n\n  Example:\n    operator['+', '* ']\n   array [2,, 4 5]\n    result = + 3 * 4 5\n  result = 9\n\n Note:\n     The length list to the lengthand one.\n   is a list of of- integers\n    Operator list has at least one, operand list at least two oper.\n    \"\"\"\n","raw":"Given two lists operator, and operand. The first list has basic algebra operations, and \n    the second list is a list of integers. Use the two given lists to build the algebric \n    expression and return the evaluation of this expression.\n\n    The basic algebra operations:\n    Addition ( + ) \n    Subtraction ( - ) \n    Multiplication ( * ) \n    Floor division ( \/\/ ) \n    Exponentiation ( ** ) \n\n    Example:\n    operator['+', '*', '-']\n    array = [2, 3, 4, 5]\n    result = 2 + 3 * 4 - 5\n    => result = 9\n\n    Note:\n        The length of operator list is equal to the length of operand list minus one.\n        Operand is a list of of non-negative integers.\n        Operator list has at least one operator, and operand list has at least two operands.","reduced":"Given two lists operator, and oper.The first list has basic algebra operations, and the is a list integersUse the two given lists build the algebric expression and return evaluation of thisThe basic algebra operations: Addition ( + Sub Multi * Floor division \/\/ ) Exp ** Example: operator['+', '*-' array = [2 3] result 2 + 3 * 4 - 5 => result = 9 Note The length operator list equal length oper minus oneOperand is list of nonnegative.Operator list has at one operator, and operand list has two oper"}
{"task_id":"HumanEval\/161","prompt":"def solve(s):\n    \"\"\"\n    You are s.\n   if s[i] letter, its case from lower vise versa \n   otherwise keep it as it is.\n    If the string no letters, reverse string.   The function should return resulted string.   Examples\n  solve(\"1234 = \"4321\"\n    solveab\")AB\" (\"\") \"#A@\"\n    \"\"\"\n","raw":"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"","reduced":"You are given string s.if s[i is letter reverse its case from lower to or vise, otherwise keep it itIf the string contains no letters reverseThe function should return resulted stringExamples solve(\"1234 = \"4321 solveab\")AB#a@C\") \"#Ac"}
{"task_id":"HumanEval\/162","prompt":"def string_to_md5(text):\n    \"\"\"\n    Given a string 'text md string\n   Iftext' an empty string, return None\n\n   >>> string_to_md5(' world == '3e2596079db69cd4ec72c62'\n    \"\"\"\n","raw":"Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'","reduced":"Given a string 'text', return its md equivalent stringIf 'text an empty return None>>> string_md('Hello ==3e2596079dbc69674cd4ec677262'"}
{"task_id":"HumanEval\/163","prompt":"def generate_integers(a, b):\n    \"\"\"\n     positive integers a b return the even digits between a\n   and b, ascending   For example:\n   generateinteg2, 8) [2 4 8]\n    generate_integers(8, [2, 4, 8]\n   generate_integers(, 14 => []\n    \"\"\"\n","raw":"Given two positive integers a and b, return the even digits between a\n    and b, in ascending order.\n\n    For example:\n    generate_integers(2, 8) => [2, 4, 6, 8]\n    generate_integers(8, 2) => [2, 4, 6, 8]\n    generate_integers(10, 14) => []","reduced":"Given two positive integers a and, return the even digits between a, in ascending.For example: generate_integers(2, 8) => [2 4, 6, 8] generateinteg(8 2) [2 4 generate10 14 []"}
