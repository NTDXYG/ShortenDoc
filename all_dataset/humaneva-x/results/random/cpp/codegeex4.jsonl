{"task_id": "CPP/0", "generation": "\n    for(int i=0; i<numbers.size(); i++){\n        for(int j=i+1; j<numbers.size(); j++){\n            if(abs(numbers[i]-numbers[j])<threshold){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/1", "generation": "\n    vector<string> result;\n    int i=0;\n    while(i<paren_string.length()){\n        if(paren_string[i]=='('){\n            int j=i+1;\n            int count=1;\n            while(count>0){\n                if(paren_string[j]=='(') count++;\n                if(paren_string[j]==')') count--;\n                j++;\n            }\n            result.push_back(paren_string.substr(i,j-i));\n            i=j;\n        }\n        else i++;\n    }\n    return result;\n}\n"}
{"task_id": "CPP/2", "generation": "\n    float dec;\n    int part;\n    part = floor(number);\n    dec = number - part;\n    return dec;\n}\n"}
{"task_id": "CPP/3", "generation": "\n    int sum=0;\n    for(int i=0;i<operations.size();i++){\n        sum+=operations[i];\n        if(sum<0){\n            return true;\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/4", "generation": "\n    float sum = 0;\n    float mean = 0;\n    float deviation = 0;\n    for(int i = 0; i < numbers.size(); i++){\n        sum += numbers[i];\n    }\n    mean = sum / numbers.size();\n    for(int i = 0; i < numbers.size(); i++){\n        deviation += abs(numbers[i] - mean);\n    }\n    return deviation / numbers.size();\n}\n"}
{"task_id": "CPP/5", "generation": "\n    vector<int> result;\n    for(int i=0;i<numbers.size();i++){\n        result.push_back(numbers[i]);\n        if(i%2==1){\n            result.push_back(delimeter);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/6", "generation": "\n    vector<int> levels;\n    int level = 0;\n    int max_level = 0;\n    for(int i = 0; i < paren_string.length(); i++){\n        if(paren_string[i] == '('){\n            level++;\n            if(level > max_level){\n                max_level = level;\n            }\n        }\n        else if(paren_string[i] == ')'){\n            level--;\n        }\n    }\n    levels.push_back(max_level);\n    return levels;\n}\n"}
{"task_id": "CPP/7", "generation": "\n    vector<string> result;\n    for(int i=0;i<strings.size();i++){\n        if(strings[i].find(substring)!=string::npos){\n            result.push_back(strings[i]);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/8", "generation": "\n    int sum=0,product=1;\n    for(int i=0;i<numbers.size();i++){\n        sum+=numbers[i];\n        product*=numbers[i];\n    }\n    return {sum,product};\n}\n"}
{"task_id": "CPP/9", "generation": "\n    vector<int> maxs;\n    int max = numbers[0];\n    maxs.push_back(max);\n    for(int i = 1; i < numbers.size(); i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n        }\n        maxs.push_back(max);\n    }\n    return maxs;\n}\n"}
{"task_id": "CPP/10", "generation": "\nfunction make_palindrome(s) {\n  let rev = s.split('').reverse().join('');\n  let i = 0;\n  while (i < s.length && s[i] === rev[i]) {\n    i++;\n  }\n  return s + rev.slice(i);\n}\n"}
{"task_id": "CPP/11", "generation": "\n    string c=\"\";\n    int i;\n    for(i=0;i<a.length();i++){\n        if(a[i]==b[i])\n            c+='0';\n        else\n            c+='1';\n    }\n    return c;\n}\n"}
{"task_id": "CPP/12", "generation": "\n    if(strings.empty()){\n        return \"\";\n    }\n    string longest = strings[0];\n    for(int i = 1; i < strings.size(); i++){\n        if(strings[i].size() > longest.size()){\n            longest = strings[i];\n        }\n    }\n    return longest;\n}\n"}
{"task_id": "CPP/13", "generation": "\n    if(b==0) return a;\n    else return greatest_common_divisor(b, a%b);\n}\n"}
{"task_id": "CPP/14", "generation": "\n    vector<string> res;\n    for(int i=0;i<str.length();i++){\n        res.push_back(str.substr(0,i+1));\n    }\n    return res;\n}\nvector<string> all_suffixes(string str){\n    vector<string> res;\n    for(int i=0;i<str.length();i++){\n        res.push_back(str.substr(i,str.length()-i));\n    }\n    return res;\n}\nvector<string> all_substrings(string str){\n    vector<string> res;\n    for(int i=0;i<str.length();i++){\n        for(int j=i+1;j<=str.length();j++){\n            res.push_back(str.substr(i,j-i));\n        }\n    }\n    return res;\n}\nvector<string> all_es(string str){\n    vector<string> res;\n    for(int i=0;i<str.length();i++){\n        for(int j=i+1;j<=str.length();j++){\n            res.push_back(str.substr(i,j-i));\n        }\n    }\n    return res;\n}\n"}
{"task_id": "CPP/15", "generation": "\n    string s=\"\";\n    for(int i=0;i<=n;i++){\n        s=s+to_string(i)+\" \";\n    }\n    return s;\n}\n"}
{"task_id": "CPP/16", "generation": "\n    vector<char> distinct_chars;\n    for(int i=0;i<str.length();i++){\n        if(find(distinct_chars.begin(),distinct_chars.end(),str[i])==distinct_chars.end()){\n            distinct_chars.push_back(str[i]);\n        }\n    }\n    return distinct_chars.size();\n}\n"}
{"task_id": "CPP/17", "generation": "\n    vector<int> result;\n    int i=0;\n    while(i<music_string.length()){\n        if(music_string[i]=='o'){\n            result.push_back(4);\n            i++;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='|'){\n            result.push_back(2);\n            i+=2;\n        }\n        else if(music_string[i]=='.'){\n            result.push_back(1);\n            i++;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='|'){\n            result.push_back(2);\n            i+=3;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='.' && music_string[i+3]=='|'){\n            result.push_back(1);\n            i+=4;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='.' && music_string[i+3]=='.' && music_string[i+4]=='|'){\n            result.push_back(1);\n            i+=5;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='.' && music_string[i+3]=='.' && music_string[i+4]=='.' && music_string[i+5]=='|'){\n            result.push_back(1);\n            i+=6;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='.' && music_string[i+3]=='.' && music_string[i+4]=='.' && music_string[i+5]=='.' && music_string[i+6]=='|'){\n            result.push_back(1);\n            i+=7;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='.' && music_string[i+3]=='.' && music_string[i+4]=='.' && music_string[i+5]=='.' && music_string[i+6]=='.' && music_string[i+7]=='|'){\n            result.push_back(1);\n            i+=8;\n        }\n        else if(music_string[i]=='o' && music_string[i+1]=='.' && music_string[i+2]=='.' && music_string[i+3]=='.' && music_string[i+4]=='.' && music_string[i+5]=='.'"}
{"task_id": "CPP/18", "generation": "\n    int count=0;\n    for(int i=0;i<str.length();i++){\n        if(str[i]==substring[0]){\n            int j=0;\n            int k=i;\n            while(j<substring.length()&&k<str.length()&&str[k]==substring[j]){\n                j++;\n                k++;\n            }\n            if(j==substring.length()){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/19", "generation": "\n    map<string,int> m;\n    m[\"zero\"]=0;\n    m[\"one\"]=1;\n    m[\"two\"]=2;\n    m[\"three\"]=3;\n    m[\"four\"]=4;\n    m[\"five\"]=5;\n    m[\"six\"]=6;\n    m[\"seven\"]=7;\n    m[\"eight\"]=8;\n    m[\"nine\"]=9;\n    string result=\"\";\n    string temp=\"\";\n    for(int i=0;i<numbers.length();i++){\n        if(numbers[i]==' '){\n            if(m[temp]<m[result]){\n                result=temp;\n            }\n            temp=\"\";\n        }\n        else{\n            temp+=numbers[i];\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/20", "generation": "\n    vector<float> result;\n    float min_diff = 1000000000;\n    for(int i=0; i<numbers.size(); i++){\n        for(int j=i+1; j<numbers.size(); j++){\n            float diff = abs(numbers[i] - numbers[j]);\n            if(diff < min_diff){\n                min_diff = diff;\n                result.clear();\n                result.push_back(numbers[i]);\n                result.push_back(numbers[j]);\n            }\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/21", "generation": "\n    float max = numbers[0];\n    for(int i = 0; i < numbers.size(); i++){\n        if(numbers[i] > max){\n            max = numbers[i];\n        }\n    }\n    for(int i = 0; i < numbers.size(); i++){\n        numbers[i] = numbers[i]/max;\n    }\n    return numbers;\n}\n"}
{"task_id": "CPP/22", "generation": "\n    vector<int> result;\n    for(list_any::iterator it = values.begin(); it != values.end(); it++){\n        if(it->type() == typeid(int)){\n            result.push_back(boost::any_cast<int>(*it));\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/23", "generation": "\n    int len = 0;\n    for(int i = 0; str[i] != '\\0'; i++){\n        len++;\n    }\n    return len;\n}\n"}
{"task_id": "CPP/24", "generation": "\n    for(int i=n-1;i>0;i--){\n        if(n%i==0){\n            return i;\n        }\n    }\n    return 0;\n}\n"}
{"task_id": "CPP/25", "generation": "\n    vector<int> factors;\n    for(int i=2;i<=n;i++){\n        while(n%i==0){\n            factors.push_back(i);\n            n/=i;\n        }\n    }\n    return factors;\n}\n"}
{"task_id": "CPP/26", "generation": "\n    vector<int> result;\n    for(int i=0;i<numbers.size();i++){\n        if(find(result.begin(),result.end(),numbers[i])==result.end()){\n            result.push_back(numbers[i]);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/27", "generation": "\n    for(int i=0;i<str.length();i++){\n        if(str[i]>=65 && str[i]<=90){\n            str[i]=str[i]+32;\n        }\n        else if(str[i]>=97 && str[i]<=122){\n            str[i]=str[i]-32;\n        }\n    }\n    return str;\n}\n"}
{"task_id": "CPP/28", "generation": "\n    string result = \"\";\n    for(int i = 0; i < strings.size(); i++){\n        result += strings[i];\n    }\n    return result;\n}\n"}
{"task_id": "CPP/29", "generation": "\n    vector<string> result;\n    for(int i=0;i<strings.size();i++){\n        if(strings[i].find(prefix)==0){\n            result.push_back(strings[i]);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/30", "generation": "\n    vector<float> positive;\n    for(int i=0;i<l.size();i++){\n        if(l[i]>0){\n            positive.push_back(l[i]);\n        }\n    }\n    return positive;\n}\n"}
{"task_id": "CPP/31", "generation": "\n    if(n<2) return false;\n    for(int i=2;i*i<=n;i++){\n        if(n%i==0) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/32", "generation": "\n    double result = 0;\n    for(int i = 0; i < xs.size(); i++){\n        result += xs[i] * pow(x, i);\n    }\n    return result;\n}\nvector<double> find_zero(vector<double> xs){\n    /* \n    Find zero of polynomial with coefficients xs. \n    *//* are of a polynomial.\n   _zero find xx = 0\n _zero only only zero point even if there are many.\n   Moreover, find_zero only list x having even number of coefficients\n  non zero coefficient it\n   a solution.   >>> round(findzero1, 2]), 2) #(x) = + 2x\n  -.\n  (find_zero([, 11, -6, 1 2) ( - 1)x - 2 ( - 36 +x - 6x2 +^3\n   1.0 */\n    vector<double> result;\n    for(double x = -10; x <= 10; x += 0.01){\n        if(poly(xs, x) == 0){\n            result.push_back(x);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/33", "generation": "\n    vector<int> l1;\n    vector<int> l2;\n    for(int i=0;i<l.size();i++){\n        if(l[i]%3==0){\n            l1.push_back(l[i]);\n        }\n        else{\n            l2.push_back(l[i]);\n        }\n    }\n    sort(l1.begin(),l1.end());\n    for(int i=0;i<l1.size();i++){\n        l[i]=l1[i];\n    }\n    return l;\n}\n"}
{"task_id": "CPP/34", "generation": "\n    sort(l.begin(), l.end());\n    vector<int> res;\n    for(int i = 0; i < l.size(); i++){\n        if(i == 0 || l[i] != l[i-1]){\n            res.push_back(l[i]);\n        }\n    }\n    return res;\n}\n"}
{"task_id": "CPP/35", "generation": "\n    float max = l[0];\n    for(int i = 0; i < l.size(); i++){\n        if(l[i] > max){\n            max = l[i];\n        }\n    }\n    return max;\n}\n"}
{"task_id": "CPP/36", "generation": "\n    int count=0;\n    for(int i=1;i<n;i++){\n        if(i%11==0||i%13==0){\n            if(i%7==0){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/37", "generation": "\n    vector<float> even;\n    vector<float> odd;\n    for(int i=0;i<l.size();i++){\n        if(i%2==0){\n            even.push_back(l[i]);\n        }\n        else{\n            odd.push_back(l[i]);\n        }\n    }\n    sort(even.begin(),even.end());\n    for(int i=0;i<even.size();i++){\n        l[i*2]=even[i];\n    }\n    for(int i=0;i<odd.size();i++){\n        l[i*2+1]=odd[i];\n    }\n    return l;\n}\n"}
{"task_id": "CPP/38", "generation": "\nchar *decode(char *str)\n{\n    char *decoded = malloc(sizeof(char) * 100);\n    int i = 0, j = 0;\n    while (str[i] != '\\0')\n    {\n        if (str[i] == '%')\n        {\n            decoded[j] = (str[i + 1] - '0') * 16 + (str[i + 2] - '0');\n            i += 3;\n        }\n        else\n        {\n            decoded[j] = str[i];\n            i++;\n        }\n        j++;\n    }\n    decoded[j] = '\\0';\n    return decoded;\n}\n"}
{"task_id": "CPP/39", "generation": "\n    int a=0,b=1,c;\n    if(n==1)\n        return 2;\n    if(n==2)\n        return 3;\n    for(int i=3;i<=n;i++){\n        c=a+b;\n        a=b;\n        b=c;\n        if(c%2!=0){\n            for(int j=2;j<c;j++){\n                if(c%j==0)\n                    break;\n                if(j==c-1)\n                    return c;\n            }\n        }\n    }\n}\n"}
{"task_id": "CPP/40", "generation": "\n    int n = l.size();\n    if(n<3) return false;\n    for(int i=0;i<n-2;i++){\n        for(int j=i+1;j<n-1;j++){\n            for(int k=j+1;k<n;k++){\n                if(l[i]+l[j]+l[k]==0) return true;\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/41", "generation": "\n    int i, j, k, l, m, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i1, j1, k1, l1, m1, n1, o, p1, q1, r1, s1, t1, u1, v1, w1, x1, y1, z1, a1, b1, c1, d1, e1, f1, g1, h1, i2, j2, k2, l2, m2, n2, o1, p2, q2, r2, s2, t2, u2, v2, w2, x2, y2, z2, a2, b2, c2, d2, e2, f2, g2, h2, i3, j3, k3, l3, m3, n3, o2, p3, q3, r3, s3, t3, u3, v3, w3, x3, y3, z3, a3, b3, c3, d3, e3, f3, g3, h3, i4, j4, k4, l4, m4, n4, o3, p4, q4, r4, s4, t4, u4, v4, w4, x4, y4, z4, a4, b4, c4, d4, e4, f4, g4, h4, i5, j5, k5, l5, m5, n5, o4, p5, q5, r5, s5, t5, u5, v5, w5, x5, y5, z5, a5, b5, c5, d5, e5, f5, g5, h5, i6, j6, k6, l6, m6, n6, o5, p6, q6, r6, s6, t6, u6, v6, w6, x6, y6, z6, a6, b6, c6, d6, e6, f6, g"}
{"task_id": "CPP/42", "generation": "\n    for(int i=0;i<l.size();i++){\n        l[i]+=1;\n    }\n    return l;\n}\n"}
{"task_id": "CPP/43", "generation": "\n    int n = l.size();\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(l[i]+l[j]==0){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/44", "generation": "\n    string s=\"\";\n    while(x>0){\n        s=char(x%base+'0')+s;\n        x=x/base;\n    }\n    return s;\n}\n"}
{"task_id": "CPP/45", "generation": "\n    return 0.5*a*h;\n}\n"}
{"task_id": "CPP/46", "generation": "\n    if(n==0)\n        return 0;\n    if(n==1)\n        return 2;\n    if(n==2)\n        return 4;\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n"}
{"task_id": "CPP/47", "generation": "\n    sort(l.begin(),l.end());\n    int n = l.size();\n    if(n%2==0){\n        return (l[n/2]+l[n/2-1])/2;\n    }\n    else{\n        return l[n/2];\n    }\n}\n"}
{"task_id": "CPP/48", "generation": "\n    int i=0;\n    int j=text.length()-1;\n    while(i<j){\n        if(text[i]!=text[j]){\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/49", "generation": "\n    if(n==0) return 1;\n    if(n==1) return p;\n    if(n%2==0) return modp(n/2,p)*modp(n/2,p);\n    else return modp(n/2,p)*modp(n/2,p)*p;\n}\n"}
{"task_id": "CPP/50", "generation": "\n    string out = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n            out += (s[i] - 'a' + 13) % 26 + 'a';\n        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            out += (s[i] - 'A' + 13) % 26 + 'A';\n        }\n        else{\n            out += s[i];\n        }\n    }\n    return out;\n}\nstring decode_shift(string s){\n    /* takes as input string with decodeshift. Returns enc string */\n    string out = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] >= 'a' && s[i] <= 'z'){\n            out += (s[i] - 'a' - 13 + 26) % 26 + 'a';\n        }\n        else if(s[i] >= 'A' && s[i] <= 'Z'){\n            out += (s[i] - 'A' - 13 + 26) % 26 + 'A';\n        }\n        else{\n            out += s[i];\n        }\n    }\n    return out;\n}\n"}
{"task_id": "CPP/51", "generation": "\n    string result=\"\";\n    for(int i=0;i<text.length();i++){\n        if(text[i]!='a'&&text[i]!='e'&&text[i]!='i'&&text[i]!='o'&&text[i]!='u'&&text[i]!='A'&&text[i]!='E'&&text[i]!='I'&&text[i]!='O'&&text[i]!='U'){\n            result+=text[i];\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/52", "generation": "\n    for(int i=0;i<l.size();i++){\n        if(l[i]>=t){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/53", "generation": "\n    return x+y;\n}\n"}
{"task_id": "CPP/54", "generation": "\n    if(s0.size()!=s1.size()) return false;\n    sort(s0.begin(),s0.end());\n    sort(s1.begin(),s1.end());\n    return s0==s1;\n}\n"}
{"task_id": "CPP/55", "generation": "\n    if(n==1||n==2) return 1;\n    return fib(n-1)+fib(n-2);\n}\n"}
{"task_id": "CPP/56", "generation": "\n    int i=0;\n    int count=0;\n    while(i<brackets.length()){\n        if(brackets[i]=='<'){\n            count++;\n        }\n        else if(brackets[i]=='>'){\n            count--;\n        }\n        if(count<0){\n            return false;\n        }\n        i++;\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/57", "generation": "\n    int n = l.size();\n    if(n==1) return true;\n    bool increasing = l[0] < l[1];\n    for(int i=1; i<n; i++){\n        if((l[i-1] < l[i] && !increasing) || (l[i-1] > l[i] && increasing)) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/58", "generation": "\n    vector<int> l3;\n    for(int i=0;i<l1.size();i++){\n        for(int j=0;j<l2.size();j++){\n            if(l1[i]==l2[j]){\n                l3.push_back(l1[i]);\n            }\n        }\n    }\n    return l3;\n}\n"}
{"task_id": "CPP/59", "generation": "\n    int i;\n    for(i=2;i<=n;i++){\n        if(n%i==0){\n            n=n/i;\n            i--;\n        }\n    }\n    return i;\n}\n"}
{"task_id": "CPP/60", "generation": "\n    int sum=0;\n    for(int i=1;i<=n;i++){\n        sum+=i;\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/61", "generation": "\n    int len=brackets.length();\n    int i=0;\n    int count=0;\n    while(i<len){\n        if(brackets[i]=='('){\n            count++;\n        }\n        else if(brackets[i]==')'){\n            count--;\n        }\n        if(count<0){\n            return false;\n        }\n        i++;\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/62", "generation": "\n    vector<float> res;\n    for(int i=1;i<xs.size();i++){\n        res.push_back(xs[i]*i);\n    }\n    return res;\n}\n"}
{"task_id": "CPP/63", "generation": "\n    if(n==0) return 0;\n    if(n==1) return 0;\n    if(n==2) return 1;\n    return fibfib(n-1)+fibfib(n-2);\n}\n"}
{"task_id": "CPP/64", "generation": "\n    int count=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'){\n            count++;\n        }\n    }\n    if(s[s.length()-1]=='y'){\n        count++;\n    }\n    return count;\n}\n"}
{"task_id": "CPP/65", "generation": "\n    string s=\"\";\n    while(x>0){\n        s=s+(char)(x%10+'0');\n        x=x/10;\n    }\n    if(shift==0){\n        return s;\n    }\n    if(shift>s.length()){\n        shift=shift%s.length();\n    }\n    string s1=s.substr(s.length()-shift);\n    string s2=s.substr(0,s.length()-shift);\n    return s1+s2;\n}\n"}
{"task_id": "CPP/66", "generation": "\n    int sum=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]>=65 && s[i]<=90){\n            sum+=s[i]-55;\n        }\n        else if(s[i]>=97 && s[i]<=122){\n            sum+=s[i]-87;\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/67", "generation": "\n    int a=0,o=0,m=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]=='a'){\n            a++;\n        }\n        else if(s[i]=='o'){\n            o++;\n        }\n        else if(s[i]=='m'){\n            m++;\n        }\n    }\n    return n-a-o;\n}\n"}
{"task_id": "CPP/68", "generation": "\n    vector<int> result;\n    int min_even = INT_MAX;\n    int min_index = -1;\n    for(int i = 0; i < arr.size(); i++){\n        if(arr[i] % 2 == 0 && arr[i] < min_even){\n            min_even = arr[i];\n            min_index = i;\n        }\n    }\n    if(min_index != -1){\n        result.push_back(min_even);\n        result.push_back(min_index);\n    }\n    return result;\n}\n"}
{"task_id": "CPP/69", "generation": "\n    int max=0;\n    int count=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>max){\n            max=lst[i];\n            count=1;\n        }\n        else if(lst[i]==max){\n            count++;\n        }\n    }\n    if(count>1){\n        return max;\n    }\n    else{\n        return -1;\n    }\n}\n"}
{"task_id": "CPP/70", "generation": "\n    vector<int> result;\n    while(!lst.empty()){\n        int max = *max_element(lst.begin(), lst.end());\n        int min = *min_element(lst.begin(), lst.end());\n        result.push_back(min);\n        result.push_back(max);\n        lst.erase(remove(lst.begin(), lst.end(), max), lst.end());\n        lst.erase(remove(lst.begin(), lst.end(), min), lst.end());\n    }\n    return result;\n}\n"}
{"task_id": "CPP/71", "generation": "\n    float s=(a+b+c)/2;\n    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    return area;\n}\n"}
{"task_id": "CPP/72", "generation": "\n    int sum=0;\n    for(int i=0;i<q.size();i++){\n        sum+=q[i];\n    }\n    if(sum<=w){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/73", "generation": "\n    int n = arr.size();\n    int i = 0, j = n-1;\n    int count = 0;\n    while(i < j){\n        if(arr[i] != arr[j]){\n            count++;\n        }\n        i++;\n        j--;\n    }\n    return count;\n}\n"}
{"task_id": "CPP/74", "generation": "\n    int sum1=0,sum2=0;\n    for(int i=0;i<lst1.size();i++){\n        sum1+=lst1[i].length();\n    }\n    for(int i=0;i<lst2.size();i++){\n        sum2+=lst2[i].length();\n    }\n    if(sum1<sum2){\n        return lst1;\n    }\n    else if(sum1>sum2){\n        return lst2;\n    }\n    else{\n        return lst1;\n    }\n}\n"}
{"task_id": "CPP/75", "generation": "\n    int i;\n    for(i=2;i<=a;i++){\n        if(a%i==0){\n            break;\n        }\n    }\n    if(i==a){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\nbool is_multip_prime(int a){\n    int i;\n    int count=0;\n    for(i=2;i<=a;i++){\n        if(a%i==0){\n            if(is_multiply_prime(i)){\n                count++;\n            }\n        }\n    }\n    if(count==3){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/76", "generation": "\n    if(x==1) return true;\n    if(x==0) return false;\n    int i=2;\n    while(i<=x){\n        if(x%i==0){\n            x=x/i;\n            if(x==1) return true;\n            if(x%i==0) return false;\n        }\n        else i++;\n    }\n    return false;\n}\n"}
{"task_id": "CPP/77", "generation": "\n    int b=sqrt(a);\n    if(b*b==a)\n        return true;\n    else\n        return false;\n}\n"}
{"task_id": "CPP/78", "generation": "\n    int count=0;\n    for(int i=0;i<num.length();i++){\n        if(num[i]=='3'||num[i]=='5'||num[i]=='7'||num[i]=='B'||num[i]=='D'){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/79", "generation": "\n    string binary = \"\";\n    while(decimal > 0){\n        binary = to_string(decimal % 2) + binary;\n        decimal /= 2;\n    }\n    return binary;\n}\n"}
{"task_id": "CPP/80", "generation": "\n    if(s.length() < 2) return false;\n    for(int i = 0; i < s.length() - 1; i++){\n        if(s[i] == s[i+1]) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/81", "generation": "\n    vector<string> result;\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]>3.3){\n            result.push_back(\"A\");\n        }\n        else if(grades[i]>3.0){\n            result.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7){\n            result.push_back(\"B\");\n        }\n        else if(grades[i]>2.3){\n            result.push_back(\"B-\");\n        }\n        else if(grades[i]>1.7){\n            result.push_back(\"C+\");\n        }\n        else if(grades[i]>1.3){\n            result.push_back(\"C\");\n        }\n        else if(grades[i]>0.7){\n            result.push_back(\"C-\");\n        }\n        else if(grades[i]>0.0){\n            result.push_back(\"D\");\n        }\n        else if(grades[i]>-0.3){\n            result.push_back(\"D-\");\n        }\n        else{\n            result.push_back(\"E\");\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/82", "generation": "\n    int len = str.length();\n    if(len < 2) return false;\n    for(int i = 2; i < len; i++){\n        if(len % i == 0) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/83", "generation": "\n    int count=0;\n    for(int i=1;i<=n;i++){\n        if(i%10==1||i/10==1)\n            count++;\n    }\n    return count;\n}\n"}
{"task_id": "CPP/84", "generation": "\n    string s=\"\";\n    while(N>0){\n        s=char((N%2)+'0')+s;\n        N/=2;\n    }\n    return s;\n}\n"}
{"task_id": "CPP/85", "generation": "\n    int sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]%2==0){\n            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/86", "generation": "\n    string ans=\"\";\n    string temp=\"\";\n    for(int i=0;i<s.length();i++){\n        if(s[i]==' '){\n            sort(temp.begin(),temp.end());\n            ans+=temp;\n            ans+=' ';\n            temp=\"\";\n        }\n        else{\n            temp+=s[i];\n        }\n    }\n    sort(temp.begin(),temp.end());\n    ans+=temp;\n    return ans;\n}\n"}
{"task_id": "CPP/87", "generation": "\n    vector<vector<int>> result;\n    for(int i=0;i<lst.size();i++){\n        for(int j=0;j<lst[i].size();j++){\n            if(lst[i][j]==x){\n                vector<int> temp;\n                temp.push_back(i);\n                temp.push_back(j);\n                result.push_back(temp);\n            }\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/88", "generation": "\n    int sum = array[0] + array[array.size()-1];\n    if(sum % 2 == 0){\n        sort(array.begin(), array.end(), greater<int>());\n    }else{\n        sort(array.begin(), array.end());\n    }\n    return array;\n}\n"}
{"task_id": "CPP/89", "generation": "\n    string encrypted=\"\";\n    for(int i=0;i<s.length();i++){\n        if(s[i]>=65 && s[i]<=90){\n            encrypted+=((s[i]-65+2)%26)+65;\n        }\n        else if(s[i]>=97 && s[i]<=122){\n            encrypted+=((s[i]-97+2)%26)+97;\n        }\n        else{\n            encrypted+=s[i];\n        }\n    }\n    return encrypted;\n}\n"}
{"task_id": "CPP/90", "generation": "\n    if(lst.size() < 2) return -1;\n    sort(lst.begin(), lst.end());\n    for(int i = 1; i < lst.size(); i++){\n        if(lst[i] != lst[i-1]) return lst[i];\n    }\n    return -1;\n}\n"}
{"task_id": "CPP/91", "generation": "\n    int i=0;\n    int count=0;\n    while(S[i]!='\\0'){\n        if(S[i]=='I'){\n            count++;\n        }\n        i++;\n    }\n    return count;\n}\n"}
{"task_id": "CPP/92", "generation": "\n    if(a==b+c || b==a+c || c==a+b)\n        return true;\n    else\n        return false;\n}\n"}
{"task_id": "CPP/93", "generation": "\n    string vowels = \"aeiou\";\n    string encoded = message;\n    for(int i = 0; i < encoded.length(); i++){\n        if(vowels.find(tolower(encoded[i])) != string::npos){\n            encoded[i] = vowels[(vowels.find(tolower(encoded[i]))+2)%5];\n        }\n    }\n    return encoded;\n}\n"}
{"task_id": "CPP/94", "generation": "\n    int max=0;\n    for(int i=0;i<lst.size();i++){\n        int sum=0;\n        int temp=lst[i];\n        while(temp>0){\n            sum+=temp%10;\n            temp=temp/10;\n        }\n        if(sum>max){\n            max=sum;\n        }\n    }\n    return max;\n}\n"}
{"task_id": "CPP/95", "generation": "\n    for(auto it=dict.begin();it!=dict.end();it++){\n        if(it->first!=it->first.lower())\n            return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/96", "generation": "\n    vector<int> primes;\n    for(int i=2;i<=n;i++){\n        bool is_prime = true;\n        for(int j=2;j*j<=i;j++){\n            if(i%j==0){\n                is_prime = false;\n                break;\n            }\n        }\n        if(is_prime){\n            primes.push_back(i);\n        }\n    }\n    return primes;\n}\n"}
{"task_id": "CPP/97", "generation": "\n    int a1=a%10;\n    int b1=b%10;\n    return a1*b1;\n}\n"}
{"task_id": "CPP/98", "generation": "\n    int count=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]>=65 && s[i]<=90 && s[i]%2==0){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/99", "generation": "\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int n=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int s=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int i1=0;\n    int j1=0;\n    int k1=0;\n    int l1=0;\n    int m1=0;\n    int n1=0;\n    int o1=0;\n    int p1=0;\n    int q1=0;\n    int r1=0;\n    int s1=0;\n    int t1=0;\n    int u1=0;\n    int v1=0;\n    int w1=0;\n    int x1=0;\n    int y1=0;\n    int z1=0;\n    int a1=0;\n    int b1=0;\n    int c1=0;\n    int d1=0;\n    int e1=0;\n    int f1=0;\n    int g1=0;\n    int h1=0;\n    int i2=0;\n    int j2=0;\n    int k2=0;\n    int l2=0;\n    int m2=0;\n    int n2=0;\n    int o2=0;\n    int p2=0;\n    int q2=0;\n    int r2=0;\n    int s2=0;\n    int t2=0;\n    int u2=0;\n    int v2=0;\n    int w2=0;\n    int x2=0;\n    int y2=0;\n    int z2=0;\n    int a2=0;\n    int b2=0;\n    int c2=0;\n    int d2=0;\n    int e2=0;\n    int f2=0;\n    int g2=0"}
{"task_id": "CPP/100", "generation": "\n    vector<int> pile;\n    int stones = 1;\n    for(int i = 0; i < n; i++){\n        pile.push_back(stones);\n        if(i % 2 == 0){\n            stones += 2;\n        }else{\n            stones += 1;\n        }\n    }\n    return pile;\n}\n"}
{"task_id": "CPP/101", "generation": "\n    vector<string> v;\n    string temp=\"\";\n    for(int i=0;i<s.length();i++){\n        if(s[i]==','){\n            v.push_back(temp);\n            temp=\"\";\n        }\n        else if(s[i]==' '){\n            if(temp.length()>0){\n                v.push_back(temp);\n                temp=\"\";\n            }\n        }\n        else{\n            temp+=s[i];\n        }\n    }\n    if(temp.length()>0){\n        v.push_back(temp);\n    }\n    return v;\n}\n"}
{"task_id": "CPP/102", "generation": "\n    if(x>y){\n        int temp=x;\n        x=y;\n        y=temp;\n    }\n    if(x==y){\n        return 1;\n    }\n    else{\n        return x+1;\n    }\n}\n"}
{"task_id": "CPP/103", "generation": "\n    if(n>m) return \"-1\";\n    int avg = round((n+m)/2.0);\n    string binary = \"\";\n    while(avg>0){\n        binary = to_string(avg%2) + binary;\n        avg /= 2;\n    }\n    return \"0b\" + binary;\n}\n"}
{"task_id": "CPP/104", "generation": "\n    vector<int> ed;\n    for(int i=0;i<x.size();i++){\n        int temp=x[i];\n        int flag=0;\n        while(temp>0){\n            int digit=temp%10;\n            if(digit%2==0){\n                flag=1;\n                break;\n            }\n            temp=temp/10;\n        }\n        if(flag==0){\n            ed.push_back(x[i]);\n        }\n    }\n    sort(ed.begin(),ed.end());\n    return ed;\n}\n"}
{"task_id": "CPP/105", "generation": "\n    map<int, vector<int>> m;\n    for(int i=0;i<arr.size();i++){\n        m[arr[i]].push_back(i);\n    }\n    vector<string> res;\n    for(auto it=m.begin();it!=m.end();it++){\n        for(int i=0;i<it->second.size();i++){\n            res.push_back(to_string(it->first));\n        }\n    }\n    return res;\n}\nvector<string> reverse_arr(vector<int> arr){\n    vector<string> res;\n    for(int i=arr.size()-1;i>=0;i--){\n        res.push_back(to_string(arr[i]));\n    }\n    return res;\n}\nvector<string> replace(vector<string> arr){\n    map<int, string> m;\n    m[1]=\"One\";\n    m[2]=\"Two\";\n    m[3]=\"Three\";\n    m[4]=\"Four\";\n    m[5]=\"Five\";\n    m[6]=\"Six\";\n    m[7]=\"Seven\";\n    m[8]=\"Eight\";\n    m[9]=\"Nine\";\n    vector<string> res;\n    for(int i=0;i<arr.size();i++){\n        res.push_back(m[stoi(arr[i])]);\n    }\n    return res;\n}\nvector<string> replace2(vector<string> arr){\n    map<int, string> m;\n    m[1]=\"One\";\n    m[2]=\"Two\";\n    m[3]=\"Three\";\n    m[4]=\"Four\";\n    m[5]=\"Five\";\n    m[6]=\"Six\";\n    m[7]=\"Seven\";\n    m[8]=\"Eight\";\n    m[9]=\"Nine\";\n    vector<string> res;\n    for(int i=0;i<arr.size();i++){\n        res.push_back(m[stoi(arr[i])]);\n    }\n    return res;\n}\nvector<string> replace3(vector<string> arr){\n    map<int, string> m;\n    m[1]=\"One\";\n    m[2]=\"Two\";\n    m[3]=\"Three\";\n    m[4]=\"Four\";\n    m[5]=\"Five\";\n    m[6]=\"Six\";\n    m[7]=\"Seven\";\n    m[8]=\"Eight\";\n    m[9]=\"Nine\";\n    vector<string> res;\n    for(int i=0;i<arr.size();i++){\n        res.push_back(m[stoi(arr[i])]);\n    }\n    return res;\n}\nvector<string> replace4(vector<string> arr){\n    map<int, string> m;\n    m[1]=\"One\";\n   "}
{"task_id": "CPP/106", "generation": "\n    vector<int> v;\n    int i=1;\n    while(i<=n){\n        if(i%2==0){\n            int fact=1;\n            for(int j=1;j<=i;j++){\n                fact*=j;\n            }\n            v.push_back(fact);\n        }\n        else{\n            int sum=0;\n            for(int j=1;j<=i;j++){\n                sum+=j;\n            }\n            v.push_back(sum);\n        }\n        i++;\n    }\n    return v;\n}\n"}
{"task_id": "CPP/107", "generation": "\n    int even=0,odd=0;\n    for(int i=1;i<=n;i++){\n        string s=to_string(i);\n        string rev(s.rbegin(),s.rend());\n        if(s==rev) {\n            if(i%2==0) even++;\n            else odd++;\n        }\n    }\n    return {even,odd};\n}\n"}
{"task_id": "CPP/108", "generation": "\n    int count=0;\n    for(int i=0;i<n.size();i++){\n        int sum=0;\n        int num=n[i];\n        if(num<0){\n            num=-num;\n        }\n        while(num>0){\n            sum+=num%10;\n            num=num/10;\n        }\n        if(sum==0){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/109", "generation": "\n    int n=arr.size();\n    int count=0;\n    for(int i=0;i<n;i++){\n        if(arr[i]>arr[(i+1)%n]){\n            count++;\n        }\n    }\n    return count<=1;\n}\n"}
{"task_id": "CPP/110", "generation": "\n    int i,j;\n    int count=0;\n    for(i=0;i<lst1.size();i++){\n        if(lst1[i]%2!=0){\n            for(j=0;j<lst2.size();j++){\n                if(lst2[j]%2==0){\n                    count++;\n                    break;\n                }\n            }\n        }\n    }\n    if(count==lst1.size()){\n        return \"YES\";\n    }\n    else{\n        return \"NO\";\n    }\n}\n"}
{"task_id": "CPP/111", "generation": "\n    map<char,int> hist;\n    for(int i=0;i<test.length();i++){\n        hist[test[i]]++;\n    }\n    return hist;\n}\n"}
{"task_id": "CPP/112", "generation": "\n    vector<string> result;\n    string temp=\"\";\n    for(int i=0;i<s.length();i++){\n        if(c.find(s[i])==string::npos){\n            temp+=s[i];\n        }\n    }\n    result.push_back(temp);\n    if(temp==string(temp.rbegin(),temp.rend())){\n        result.push_back(\"True\");\n    }\n    else{\n        result.push_back(\"False\");\n    }\n    return result;\n}\n"}
{"task_id": "CPP/113", "generation": "\n    map<int,int> mp;\n    for(int i=0;i<lst.size();i++){\n        int cnt=0;\n        for(int j=0;j<lst[i].size();j++){\n            if(lst[i][j]%2==1) cnt++;\n        }\n        mp[i+1]=cnt;\n    }\n    for(int i=0;i<lst.size();i++){\n        for(int j=0;j<lst[i].size();j++){\n            if(lst[i][j]=='1') lst[i][j]='a';\n            else if(lst[i][j]=='2') lst[i][j]='b';\n            else if(lst[i][j]=='3') lst[i][j]='c';\n            else if(lst[i][j]=='4') lst[i][j]='d';\n            else if(lst[i][j]=='5') lst[i][j]='e';\n            else if(lst[i][j]=='6') lst[i][j]='f';\n            else if(lst[i][j]=='7') lst[i][j]='g';\n            else if(lst[i][j]=='8') lst[i][j]='h';\n            else if(lst[i][j]=='9') lst[i][j]='i';\n            else if(lst[i][j]=='0') lst[i][j]='j';\n        }\n    }\n    for(int i=0;i<lst.size();i++){\n        for(int j=0;j<lst[i].size();j++){\n            if(lst[i][j]=='a') lst[i][j]='1';\n            else if(lst[i][j]=='b') lst[i][j]='2';\n            else if(lst[i][j]=='c') lst[i][j]='3';\n            else if(lst[i][j]=='d') lst[i][j]='4';\n            else if(lst[i][j]=='e') lst[i][j]='5';\n            else if(lst[i][j]=='f') lst[i][j]='6';\n            else if(lst[i][j]=='g') lst[i][j]='7';\n            else if(lst[i][j]=='h') lst[i][j]='8';\n            else if(lst[i][j]=='i') lst[i][j]='9';\n            else if(lst[i][j]=='j') lst[i][j]='0';\n        }\n    }\n    for(int i=0;i<lst.size();i++){\n        for(int j=0;j<lst[i].size();j++){\n            if(lst[i][j]=='1') lst[i][j]='a';\n"}
{"task_id": "CPP/114", "generation": "\n    long long sum = 0;\n    long long minSum = 0;\n    long long minSubArray = 0;\n    for(int i = 0; i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < minSum){\n            minSum = sum;\n            minSubArray = i+1;\n        }\n    }\n    return minSum;\n}\n"}
{"task_id": "CPP/115", "generation": "\n    int n=grid.size();\n    int m=grid[0].size();\n    int ans=0;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<m;j++){\n            if(grid[i][j]==1){\n                int fill=0;\n                while(grid[i][j]==1){\n                    grid[i][j]=0;\n                    fill++;\n                    if(fill==capacity){\n                        ans++;\n                        fill=0;\n                    }\n                }\n            }\n        }\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/116", "generation": "\n    vector<int> ones;\n    vector<int> zeros;\n    for(int i=0;i<arr.size();i++){\n        int count=0;\n        int num=arr[i];\n        if(num<0){\n            num=-num;\n        }\n        while(num>0){\n            if(num%2==1){\n                count++;\n            }\n            num=num/2;\n        }\n        if(count%2==0){\n            zeros.push_back(arr[i]);\n        }\n        else{\n            ones.push_back(arr[i]);\n        }\n    }\n    sort(ones.begin(),ones.end());\n    sort(zeros.begin(),zeros.end());\n    arr.clear();\n    for(int i=0;i<ones.size();i++){\n        arr.push_back(ones[i]);\n    }\n    for(int i=0;i<zeros.size();i++){\n        arr.push_back(zeros[i]);\n    }\n    return arr;\n}\n"}
{"task_id": "CPP/117", "generation": "\n    vector<string> v;\n    string word=\"\";\n    int count=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]!=' '){\n            word+=s[i];\n        }\n        else{\n            if(count==n){\n                v.push_back(word);\n            }\n            word=\"\";\n            count=0;\n        }\n        if(s[i]>='a'&&s[i]<='z'){\n            if(s[i]!='a'&&s[i]!='e'&&s[i]!='i'&&s[i]!='o'&&s[i]!='u'){\n                count++;\n            }\n        }\n    }\n    if(count==n){\n        v.push_back(word);\n    }\n    return v;\n}\n"}
{"task_id": "CPP/118", "generation": "\n    string vowels = \"aeiouAEIOU\";\n    string result = \"\";\n    for(int i = word.length()-1; i >= 0; i--){\n        if(vowels.find(word[i]) != string::npos){\n            result = word[i];\n            break;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/119", "generation": "\n    string s;\n    for(int i=0;i<lst.size();i++){\n        s+=lst[i];\n    }\n    int count=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]=='(') count++;\n        else if(s[i]==')') count--;\n        if(count<0) return \"No\";\n    }\n    if(count==0) return \"Yes\";\n    else return \"No\";\n}\n"}
{"task_id": "CPP/120", "generation": "\n    sort(arr.begin(),arr.end());\n    vector<int> res;\n    for(int i=0;i<k;i++){\n        res.push_back(arr[arr.size()-1-i]);\n    }\n    return res;\n}\n"}
{"task_id": "CPP/121", "generation": "\n    int sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]%2==0 && lst[i]%5==0){\n            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/122", "generation": "\n    int sum=0;\n    for(int i=0;i<arr.size();i++){\n        if(arr[i]<10){\n            sum+=arr[i];\n        }\n        else if(arr[i]<100){\n            if(arr[i]%10==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<1000){\n            if(arr[i]%100==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<10000){\n            if(arr[i]%1000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<100000){\n            if(arr[i]%10000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<1000000){\n            if(arr[i]%100000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<10000000){\n            if(arr[i]%1000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<100000000){\n            if(arr[i]%10000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<1000000000){\n            if(arr[i]%100000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<10000000000){\n            if(arr[i]%1000000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<100000000000){\n            if(arr[i]%10000000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<1000000000000){\n            if(arr[i]%100000000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<10000000000000){\n            if(arr[i]%1000000000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<100000000000000){\n            if(arr[i]%10000000000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<1000000000000000){\n            if(arr[i]%100000000000000==k){\n                sum+=arr[i];\n            }\n        }\n        else if(arr[i]<10000000000000000){\n            if(arr[i]%1000000000000000==k){\n                sum+=arr[i];\n            }\n"}
{"task_id": "CPP/123", "generation": "\n    vector<int> collatz;\n    collatz.push_back(n);\n    while(n!=1){\n        if(n%2==0){\n            n=n/2;\n        }\n        else{\n            n=3*n+1;\n        }\n        collatz.push_back(n);\n    }\n    return collatz;\n}\nvector<int> atz(int n){\n    vector<int> collatz=get_odd_collatz(n);\n    vector<int> odd;\n    for(int i=0;i<collatz.size();i++){\n        if(collatz[i]%2!=0){\n            odd.push_back(collatz[i]);\n        }\n    }\n    sort(odd.begin(),odd.end());\n    return odd;\n}\n"}
{"task_id": "CPP/124", "generation": "\n    int month,day,year;\n    if(date.length()!=7) return false;\n    if(date[2]!='-' || date[5]!='-') return false;\n    month=10*(date[0]-'0')+(date[1]-'0');\n    day=10*(date[3]-'0')+(date[4]-'0');\n    year=10*(date[6]-'0')+(date[7]-'0');\n    if(month<1 || month>12) return false;\n    if(day<1 || day>31) return false;\n    if(month==2){\n        if(year%4==0){\n            if(day>29) return false;\n        }\n        else{\n            if(day>28) return false;\n        }\n    }\n    else if(month==4 || month==6 || month==9 || month==11){\n        if(day>30) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/125", "generation": "\n    vector<string> res;\n    string temp=\"\";\n    for(int i=0;i<txt.length();i++){\n        if(txt[i]==' '){\n            res.push_back(temp);\n            temp=\"\";\n        }\n        else if(txt[i]==','){\n            res.push_back(temp);\n            temp=\"\";\n        }\n        else{\n            temp+=txt[i];\n        }\n    }\n    if(temp.length()>0){\n        res.push_back(temp);\n    }\n    return res;\n}\nvector<string> number_case(vector<string> words){\n    vector<string> res;\n    for(int i=0;i<words.size();i++){\n        string temp=\"\";\n        for(int j=0;j<words[i].length();j++){\n            if(words[i][j]==' '){\n                temp+=words[i][j];\n            }\n            else{\n                int ordb=words[i][j]-'a'+1;\n                if(ordb%2==0){\n                    ordb+=1;\n                }\n                temp+=ordb+'0';\n            }\n        }\n        res.push_back(temp);\n    }\n    return res;\n}\n"}
{"task_id": "CPP/126", "generation": "\n    for(int i=0;i<lst.size()-1;i++){\n        if(lst[i]>lst[i+1]){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/127", "generation": "\n    int start = max(interval1[0],interval2[0]);\n    int end = min(interval1[1],interval2[1]);\n    if(start > end) return \"NO\";\n    int length = end - start + 1;\n    for(int i = 2; i * i <= length; i++){\n        if(length % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}\n"}
{"task_id": "CPP/128", "generation": "\n    int product = 1;\n    for(int i = 0; i < arr.size(); i++){\n        product *= arr[i];\n    }\n    if(product == 0){\n        return 0;\n    }\n    else if(product > 0){\n        return 1;\n    }\n    else{\n        return -1;\n    }\n}\n"}
{"task_id": "CPP/129", "generation": "\n    int n = grid.size();\n    vector<vector<int>> dp(n, vector<int>(n, 0));\n    vector<vector<int>> dir = {{0,1}, {0,-1}, {1,0}, {-1,0}};\n    vector<int> res;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            if(i == 0 && j == 0){\n                dp[i][j] = grid[i][j];\n            }else{\n                dp[i][j] = grid[i][j] + min(dp[i-1][j], dp[i][j-1]);\n            }\n        }\n    }\n    int i = n-1, j = n-1;\n    while(i >= 0 && j >= 0){\n        res.push_back(grid[i][j]);\n        if(i == 0 && j == 0){\n            break;\n        }\n        int minVal = INT_MAX;\n        int minI = -1, minJ = -1;\n        for(int d = 0; d < 4; d++){\n            int ni = i + dir[d][0];\n            int nj = j + dir[d][1];\n            if(ni >= 0 && ni < n && nj >= 0 && nj < n){\n                if(dp[ni][nj] < minVal){\n                    minVal = dp[ni][nj];\n                    minI = ni;\n                    minJ = nj;\n                }\n            }\n        }\n        i = minI;\n        j = minJ;\n    }\n    reverse(res.begin(), res.end());\n    return res;\n}\n"}
{"task_id": "CPP/130", "generation": "\n    vector<int> v;\n    if(n==1){\n        v.push_back(1);\n        return v;\n    }\n    if(n==2){\n        v.push_back(1);\n        v.push_back(1);\n        return v;\n    }\n    if(n==3){\n        v.push_back(1);\n        v.push_back(1);\n        v.push_back(2);\n        return v;\n    }\n    v.push_back(1);\n    v.push_back(1);\n    v.push_back(2);\n    for(int i=3;i<n;i++){\n        v.push_back(v[i-1]+v[i-2]+v[i-3]);\n    }\n    return v;\n}\n"}
{"task_id": "CPP/131", "generation": "\n    int product=1;\n    int flag=0;\n    while(n>0){\n        int digit=n%10;\n        if(digit%2!=0){\n            product*=digit;\n            flag=1;\n        }\n        n=n/10;\n    }\n    if(flag==0){\n        return 0;\n    }\n    else{\n        return product;\n    }\n}\n"}
{"task_id": "CPP/132", "generation": "\n    int n = str.length();\n    int top = -1;\n    char stack[n];\n    for(int i=0;i<n;i++){\n        if(str[i]=='['){\n            stack[++top] = str[i];\n        }\n        else if(str[i]==']'){\n            if(top==-1){\n                return false;\n            }\n            else if(stack[top]=='['){\n                top--;\n            }\n            else{\n                return false;\n            }\n        }\n    }\n    if(top==-1){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/133", "generation": "\n    int sum=0;\n    for(int i=0;i<lst.size();i++){\n        sum+=ceil(lst[i]*lst[i]);\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/134", "generation": "\n    if(txt.length()==0){\n        return false;\n    }\n    char last_char=txt[txt.length()-1];\n    if((last_char>='a'&&last_char<='z')||(last_char>='A'&&last_char<='Z')){\n        return true;\n    }\n    return false;\n}\n"}
{"task_id": "CPP/135", "generation": "\n    int n = arr.size();\n    int i = 0;\n    while(i<n-1){\n        if(arr[i]>arr[i+1]){\n            return i;\n        }\n        i++;\n    }\n    return -1;\n}\n"}
{"task_id": "CPP/136", "generation": "\n    vector<int> a;\n    int i,smallest=0,largest=0;\n    for(i=0;i<lst.size();i++)\n    {\n        if(lst[i]<0)\n        {\n            smallest=lst[i];\n            break;\n        }\n    }\n    for(i=0;i<lst.size();i++)\n    {\n        if(lst[i]>0)\n        {\n            largest=lst[i];\n            break;\n        }\n    }\n    if(smallest==0)\n    {\n        a.push_back(0);\n    }\n    else\n    {\n        a.push_back(smallest);\n    }\n    if(largest==0)\n    {\n        a.push_back(0);\n    }\n    else\n    {\n        a.push_back(largest);\n    }\n    return a;\n}\n"}
{"task_id": "CPP/137", "generation": "\n    if(a.type()==b.type()){\n        if(a.type()==typeid(string)){\n            string a1=boost::any_cast<string>(a);\n            string b1=boost::any_cast<string>(b);\n            if(a1==b1){\n                return a1;\n            }\n        }\n        else if(a.type()==typeid(double)){\n            double a1=boost::any_cast<double>(a);\n            double b1=boost::any_cast<double>(b);\n            if(a1==b1){\n                return a1;\n            }\n        }\n        else if(a.type()==typeid(int)){\n            int a1=boost::any_cast<int>(a);\n            int b1=boost::any_cast<int>(b);\n            if(a1==b1){\n                return a1;\n            }\n        }\n    }\n    return boost::any();\n}\n"}
{"task_id": "CPP/138", "generation": "\n    if(n%2==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/139", "generation": "\n    long long ans=1;\n    for(int i=1;i<=n;i++){\n        ans*=i;\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/140", "generation": "\n    string result=\"\";\n    int count=0;\n    for(int i=0;i<text.length();i++){\n        if(text[i]==' '){\n            count++;\n            if(count>2){\n                result=result+' ';\n            }\n        }\n        else{\n            result=result+text[i];\n            count=0;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/141", "generation": "\n    int i=0;\n    int count=0;\n    int count1=0;\n    int count2=0;\n    int count3=0;\n    int count4=0;\n    int count5=0;\n    int count6=0;\n    int count7=0;\n    int count8=0;\n    int count9=0;\n    int count10=0;\n    int count11=0;\n    int count12=0;\n    int count13=0;\n    int count14=0;\n    int count15=0;\n    int count16=0;\n    int count17=0;\n    int count18=0;\n    int count19=0;\n    int count20=0;\n    int count21=0;\n    int count22=0;\n    int count23=0;\n    int count24=0;\n    int count25=0;\n    int count26=0;\n    int count27=0;\n    int count28=0;\n    int count29=0;\n    int count30=0;\n    int count31=0;\n    int count32=0;\n    int count33=0;\n    int count34=0;\n    int count35=0;\n    int count36=0;\n    int count37=0;\n    int count38=0;\n    int count39=0;\n    int count40=0;\n    int count41=0;\n    int count42=0;\n    int count43=0;\n    int count44=0;\n    int count45=0;\n    int count46=0;\n    int count47=0;\n    int count48=0;\n    int count49=0;\n    int count50=0;\n    int count51=0;\n    int count52=0;\n    int count53=0;\n    int count54=0;\n    int count55=0;\n    int count56=0;\n    int count57=0;\n    int count58=0;\n    int count59=0;\n    int count60=0;\n    int count61=0;\n    int count62=0;\n    int count63=0;\n    int count64=0;\n    int count65=0;\n    int count66=0;\n    int count67=0;\n    int count68=0;\n    int count69=0;\n    int count70=0;\n    int count71=0;\n    int count"}
{"task_id": "CPP/142", "generation": "\n    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 3 == 0 && i % 4 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/143", "generation": "\n    string result=\"\";\n    string word=\"\";\n    int i=0;\n    while(i<sentence.length()){\n        if(sentence[i]==' '){\n            if(is_prime(word.length())){\n                result+=word;\n                result+=\" \";\n            }\n            word=\"\";\n        }\n        else{\n            word+=sentence[i];\n        }\n        i++;\n    }\n    if(is_prime(word.length())){\n        result+=word;\n    }\n    return result;\n}\nbool is_prime(int n){\n    if(n<2){\n        return false;\n    }\n    for(int i=2;i*i<=n;i++){\n        if(n%i==0){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/144", "generation": "\n    int a,b,c,d;\n    sscanf(x.c_str(),\"%d/%d\",&a,&b);\n    sscanf(n.c_str(),\"%d/%d\",&c,&d);\n    if(a%d==0&&b%c==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/145", "generation": "\n    int n=nums.size();\n    int sum[n];\n    for(int i=0;i<n;i++){\n        int temp=nums[i];\n        int s=0;\n        while(temp!=0){\n            s+=temp%10;\n            temp/=10;\n        }\n        sum[i]=s;\n    }\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            if(sum[i]>sum[j]){\n                int temp=nums[i];\n                nums[i]=nums[j];\n                nums[j]=temp;\n                temp=sum[i];\n                sum[i]=sum[j];\n                sum[j]=temp;\n            }\n        }\n    }\n    return nums;\n}\n"}
{"task_id": "CPP/146", "generation": "\n    int count = 0;\n    for(int i = 0; i < nums.size(); i++){\n        int firstDigit = nums[i] % 10;\n        int lastDigit = nums[i] / 10 % 10;\n        if(firstDigit % 2 == 1 && lastDigit % 2 == 1 && nums[i] > 10){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/147", "generation": "\n    vector<int> a;\n    for(int i=1;i<=n;i++){\n        a.push_back(i-i%3);\n    }\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n                if((a[i]+a[j]+a[k])%3==0){\n                    count++;\n                }\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/148", "generation": "\n    vector<string> v;\n    if(planet1==\"Mercury\"&&planet2==\"Venus\"){\n        v.push_back(\"Earth\");\n    }\n    else if(planet1==\"Venus\"&&planet2==\"Earth\"){\n        v.push_back(\"Mercury\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Mars\"){\n        v.push_back(\"Venus\");\n    }\n    else if(planet1==\"Mars\"&&planet2==\"Earth\"){\n        v.push_back(\"Venus\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Jupiter\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n    }\n    else if(planet1==\"Jupiter\"&&planet2==\"Earth\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Saturn\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n    }\n    else if(planet1==\"Saturn\"&&planet2==\"Earth\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Uranus\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n    }\n    else if(planet1==\"Uranus\"&&planet2==\"Earth\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Neptune\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Neptune\"&&planet2==\"Earth\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Venus\"&&planet2==\"Mars\"){\n        v.push_back(\"Earth\");\n    }\n    else if(planet"}
{"task_id": "CPP/149", "generation": "\n    vector<string> res;\n    for(int i=0;i<lst.size();i++){\n        int sum=0;\n        for(int j=0;j<lst[i].size();j++){\n            sum+=lst[i][j];\n        }\n        if(sum%2==0){\n            res.push_back(lst[i]);\n        }\n    }\n    sort(res.begin(),res.end(),[](string a,string b){\n        if(a.size()==b.size()){\n            return a<b;\n        }\n        return a.size()<b.size();\n    });\n    return res;\n}\n"}
{"task_id": "CPP/150", "generation": "\n    if(n==0) return x;\n    if(n==1) return y;\n    if(n%2==0) return x_or_y(n/2,x^y,x^y);\n    else return x_or_y(n/2,x^y,y^x);\n}\n"}
{"task_id": "CPP/151", "generation": "\n    long long sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>0 && lst[i]%2!=0){\n            sum+=pow(lst[i],2);\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/152", "generation": "\n    vector<int> res;\n    for(int i=0;i<game.size();i++){\n        if(game[i]==guess[i]) res.push_back(0);\n        else res.push_back(abs(game[i]-guess[i]));\n    }\n    return res;\n}\n"}
{"task_id": "CPP/153", "generation": "\n    int max=0;\n    string max_ext=\"\";\n    for(int i=0;i<extensions.size();i++){\n        int strength=0;\n        for(int j=0;j<extensions[i].length();j++){\n            if(extensions[i][j]>=65 && extensions[i][j]<=90){\n                strength++;\n            }\n        }\n        if(strength>max){\n            max=strength;\n            max_ext=extensions[i];\n        }\n    }\n    return class_name+max_ext;\n}\n"}
{"task_id": "CPP/154", "generation": "\n    int i,j,k;\n    int n=a.length();\n    int m=b.length();\n    if(m>n) return false;\n    for(i=0;i<n;i++){\n        for(j=0,k=i;j<m&&k<n;j++,k++){\n            if(a[k]!=b[j]) break;\n        }\n        if(j==m) return true;\n    }\n    return false;\n}\n"}
{"task_id": "CPP/155", "generation": "\n    int even=0,odd=0;\n    while(num>0){\n        if(num%2==0){\n            even++;\n        }\n        else{\n            odd++;\n        }\n        num=num/10;\n    }\n    vector<int> v;\n    v.push_back(even);\n    v.push_back(odd);\n    return v;\n}\n"}
{"task_id": "CPP/156", "generation": "\n    string result;\n    vector<int> nums = {1,4,5,9,10,40,50,90,100,400,500,900,1000};\n    vector<string> romans = {\"i\",\"iv\",\"v\",\"ix\",\"x\",\"xl\",\"l\",\"xc\",\"c\",\"cd\",\"d\",\"cm\",\"m\"};\n    int i = 12;\n    while(number > 0){\n        if(number >= nums[i]){\n            result += romans[i];\n            number -= nums[i];\n        }\n        else{\n            i--;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/157", "generation": "\n    float s1,s2,s3;\n    s1=sqrt(a*a+b*b);\n    s2=sqrt(b*b+c*c);\n    s3=sqrt(c*c+a*a);\n    if(s1==c || s2==a || s3==b){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/158", "generation": "\n    string max=\"\";\n    int max_unique=0;\n    for(int i=0;i<words.size();i++){\n        int unique=0;\n        string temp=words[i];\n        sort(temp.begin(),temp.end());\n        for(int j=0;j<temp.size();j++){\n            if(temp[j]!=temp[j+1]){\n                unique++;\n            }\n        }\n        if(unique>max_unique){\n            max_unique=unique;\n            max=words[i];\n        }\n        else if(unique==max_unique){\n            if(max>words[i]){\n                max=words[i];\n            }\n        }\n    }\n    return max;\n}\n"}
{"task_id": "CPP/159", "generation": "\n    vector<int> result;\n    if(need>remaining){\n        result.push_back(remaining);\n        result.push_back(number+remaining);\n    }else{\n        result.push_back(remaining-need);\n        result.push_back(number+need);\n    }\n    return result;\n}\n"}
{"task_id": "CPP/160", "generation": "\n    int result = operand[0];\n    for(int i = 0; i < operato.size(); i++){\n        if(operato[i] == \"+\"){\n            result += operand[i+1];\n        }\n        else if(operato[i] == \"-\"){\n            result -= operand[i+1];\n        }\n        else if(operato[i] == \"*\"){\n            result *= operand[i+1];\n        }\n        else if(operato[i] == \"/\"){\n            result /= operand[i+1];\n        }\n        else if(operato[i] == \"**\"){\n            result = pow(result, operand[i+1]);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/161", "generation": "\n    string result=\"\";\n    int i=0;\n    if(s.length()==0)\n    {\n        for(int j=s.length()-1;j>=0;j--)\n        {\n            result+=s[j];\n        }\n        return result;\n    }\n    for(i=0;i<s.length();i++)\n    {\n        if(s[i]>=65 && s[i]<=90)\n        {\n            result+=s[i]+32;\n        }\n        else if(s[i]>=97 && s[i]<=122)\n        {\n            result+=s[i]-32;\n        }\n        else\n        {\n            result+=s[i];\n        }\n    }\n    for(int j=s.length()-1;j>=0;j--)\n    {\n        result+=s[j];\n    }\n    return result;\n}\n"}
{"task_id": "CPP/162", "generation": "\n    if(text.empty()) return NULL;\n    unsigned char result[MD5_DIGEST_LENGTH];\n    MD5((unsigned char*)text.c_str(), text.size(), result);\n    char mdString[33];\n    for(int i = 0; i < 16; i++)\n        sprintf(&mdString[i*2], \"%02x\", (unsigned int)result[i]);\n    return mdString;\n}\n"}
{"task_id": "CPP/163", "generation": "\n    vector<int> v;\n    for(int i=a;i<=b;i++){\n        int temp=i;\n        while(temp>0){\n            int rem=temp%10;\n            if(rem%2==0){\n                v.push_back(rem);\n            }\n            temp=temp/10;\n        }\n    }\n    return v;\n}\n"}
