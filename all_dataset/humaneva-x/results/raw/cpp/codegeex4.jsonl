{"task_id": "CPP/0", "generation": "\n    for(int i=0;i<numbers.size();i++){\n        for(int j=i+1;j<numbers.size();j++){\n            if(abs(numbers[i]-numbers[j])<threshold){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/1", "generation": "\n    vector<string> paren_groups;\n    string current_group = \"\";\n    int open_braces = 0;\n    for (char c : paren_string){\n        if (c == '('){\n            open_braces++;\n            current_group += c;\n        }\n        else if (c == ')'){\n            open_braces--;\n            current_group += c;\n            if (open_braces == 0){\n                paren_groups.push_back(current_group);\n                current_group = \"\";\n            }\n        }\n    }\n    return paren_groups;\n}\n"}
{"task_id": "CPP/2", "generation": "\n    int integer_part = floor(number);\n    float decimal_part = number - integer_part;\n    return decimal_part;\n}\n"}
{"task_id": "CPP/3", "generation": "\n    int balance = 0;\n    for(int i = 0; i < operations.size(); i++){\n        balance += operations[i];\n        if(balance < 0){\n            return true;\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/4", "generation": "\n    float sum=0;\n    float mean=0;\n    float mad=0;\n    for(int i=0;i<numbers.size();i++){\n        sum+=numbers[i];\n    }\n    mean=sum/numbers.size();\n    for(int i=0;i<numbers.size();i++){\n        mad+=abs(numbers[i]-mean);\n    }\n    mad/=numbers.size();\n    return mad;\n}\n"}
{"task_id": "CPP/5", "generation": "\n    vector<int> result;\n    for(int i=0;i<numbers.size();i++){\n        result.push_back(numbers[i]);\n        if(i!=numbers.size()-1){\n            result.push_back(delimeter);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/6", "generation": "\n    vector<int> result;\n    int max_depth = 0;\n    int current_depth = 0;\n    for(int i = 0; i < paren_string.length(); i++){\n        if(paren_string[i] == '('){\n            current_depth++;\n            if(current_depth > max_depth){\n                max_depth = current_depth;\n            }\n        }\n        else if(paren_string[i] == ')'){\n            current_depth--;\n        }\n        else if(paren_string[i] == ' '){\n            result.push_back(max_depth);\n            max_depth = 0;\n            current_depth = 0;\n        }\n    }\n    result.push_back(max_depth);\n    return result;\n}\n"}
{"task_id": "CPP/7", "generation": "\n    vector<string> result;\n    for(int i=0;i<strings.size();i++){\n        if(strings[i].find(substring)!=string::npos){\n            result.push_back(strings[i]);\n        }\n    }\n    return result;\n}"}
{"task_id": "CPP/8", "generation": "\n    int sum=0,product=1;\n    for(int i=0;i<numbers.size();i++){\n        sum+=numbers[i];\n        product*=numbers[i];\n    }\n    vector<int> result={sum,product};\n    return result;\n}\n"}
{"task_id": "CPP/9", "generation": "\n    vector<int> result;\n    int max=numbers[0];\n    result.push_back(max);\n    for(int i=1;i<numbers.size();i++){\n        if(numbers[i]>max){\n            max=numbers[i];\n        }\n        result.push_back(max);\n    }\n    return result;\n}\n"}
{"task_id": "CPP/10", "generation": "\n    int n=str.length();\n    int i=0;\n    for(i=n-1;i>=0;i--){\n        if(is_palindrome(str.substr(0,i+1))){\n            break;\n        }\n    }\n    string s=str.substr(i+1,n-i-1);\n    reverse(s.begin(),s.end());\n    return str+s;\n}\n"}
{"task_id": "CPP/11", "generation": "\n    string result=\"\";\n    for(int i=0;i<a.length();i++){\n        if(a[i]!=b[i]){\n            result+='1';\n        }\n        else{\n            result+='0';\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/12", "generation": "\n    if(strings.empty()) return \"\";\n    string longest = strings[0];\n    for(int i = 1; i < strings.size(); i++){\n        if(strings[i].length() > longest.length()){\n            longest = strings[i];\n        }\n    }\n    return longest;\n}\n"}
{"task_id": "CPP/13", "generation": "\n    if(b==0)\n        return a;\n    else\n        return greatest_common_divisor(b,a%b);\n}\n"}
{"task_id": "CPP/14", "generation": "\n    vector<string> prefixes;\n    for(int i=0;i<str.length();i++){\n        prefixes.push_back(str.substr(0,i+1));\n    }\n    return prefixes;\n}\n"}
{"task_id": "CPP/15", "generation": "\n    string s=\"\";\n    for(int i=0;i<=n;i++){\n        s=s+to_string(i)+\" \";\n    }\n    return s;\n}\n"}
{"task_id": "CPP/16", "generation": "\n    vector<char> distinct_chars;\n    for(int i=0;i<str.length();i++){\n        char c=str[i];\n        if(find(distinct_chars.begin(),distinct_chars.end(),c)==distinct_chars.end()){\n            distinct_chars.push_back(c);\n        }\n    }\n    return distinct_chars.size();\n}\n"}
{"task_id": "CPP/17", "generation": "\n    vector<int> result;\n    int i=0;\n    while(i<music_string.length()){\n        if(music_string[i]=='o'){\n            result.push_back(4);\n            i+=2;\n        }\n        else if(music_string[i]=='.'){\n            result.push_back(1);\n            i+=2;\n        }\n        else{\n            result.push_back(2);\n            i+=2;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/18", "generation": "\n    int count=0;\n    for(int i=0;i<str.length();i++){\n        if(str[i]==substring[0]){\n            int j=0;\n            for(;j<substring.length();j++){\n                if(str[i+j]!=substring[j]) break;\n            }\n            if(j==substring.length()) count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/19", "generation": "\n    map<string,int> m;\n    m[\"zero\"]=0;\n    m[\"one\"]=1;\n    m[\"two\"]=2;\n    m[\"three\"]=3;\n    m[\"four\"]=4;\n    m[\"five\"]=5;\n    m[\"six\"]=6;\n    m[\"seven\"]=7;\n    m[\"eight\"]=8;\n    m[\"nine\"]=9;\n    string result=\"\";\n    string temp=\"\";\n    for(int i=0;i<numbers.length();i++){\n        if(numbers[i]==' '){\n            result+=to_string(m[temp])+' ';\n            temp=\"\";\n        }\n        else{\n            temp+=numbers[i];\n        }\n    }\n    result+=to_string(m[temp]);\n    return result;\n}\n"}
{"task_id": "CPP/20", "generation": "\n    float min_diff = 1000000000;\n    vector<float> result;\n    for(int i=0;i<numbers.size();i++){\n        for(int j=i+1;j<numbers.size();j++){\n            float diff = abs(numbers[i]-numbers[j]);\n            if(diff<min_diff){\n                min_diff = diff;\n                result.clear();\n                result.push_back(numbers[i]);\n                result.push_back(numbers[j]);\n            }\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/21", "generation": "\n    float min=numbers[0],max=numbers[0];\n    for(int i=0;i<numbers.size();i++){\n        if(numbers[i]<min) min=numbers[i];\n        if(numbers[i]>max) max=numbers[i];\n    }\n    for(int i=0;i<numbers.size();i++){\n        numbers[i]=(numbers[i]-min)/(max-min);\n    }\n    return numbers;\n}\n"}
{"task_id": "CPP/22", "generation": "\n    vector<int> result;\n    for(auto it = values.begin(); it != values.end(); it++){\n        if((*it).type() == typeid(int)){\n            result.push_back(boost::any_cast<int>(*it));\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/23", "generation": "\n    int len = 0;\n    for(int i = 0; str[i] != '\\0'; i++){\n        len++;\n    }\n    return len;\n}"}
{"task_id": "CPP/24", "generation": "\n    for(int i=n-1;i>0;i--){\n        if(n%i==0){\n            return i;\n        }\n    }\n    return 0;\n}\n"}
{"task_id": "CPP/25", "generation": "\n    vector<int> factors;\n    for(int i=2;i<=n;i++){\n        while(n%i==0){\n            factors.push_back(i);\n            n/=i;\n        }\n    }\n    return factors;\n}\n"}
{"task_id": "CPP/26", "generation": "\n    vector<int> result;\n    for(int i=0;i<numbers.size();i++){\n        if(find(result.begin(),result.end(),numbers[i])==result.end()){\n            result.push_back(numbers[i]);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/27", "generation": "\n    for(int i=0;i<str.length();i++){\n        if(str[i]>=65&&str[i]<=90){\n            str[i]+=32;\n        }\n        else if(str[i]>=97&&str[i]<=122){\n            str[i]-=32;\n        }\n    }\n    return str;\n}\n"}
{"task_id": "CPP/28", "generation": "\n    string result = \"\";\n    for (int i = 0; i < strings.size(); i++){\n        result += strings[i];\n    }\n    return result;\n}"}
{"task_id": "CPP/29", "generation": "\n    vector<string> result;\n    for (int i = 0; i < strings.size(); i++){\n        if (strings[i].substr(0, prefix.length()) == prefix){\n            result.push_back(strings[i]);\n        }\n    }\n    return result;\n}"}
{"task_id": "CPP/30", "generation": "\n    vector<float> ans;\n    for(int i=0;i<l.size();i++){\n        if(l[i]>0){\n            ans.push_back(l[i]);\n        }\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/31", "generation": "\n    if(n==1) return false;\n    for(int i=2;i*i<=n;i++){\n        if(n%i==0) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/32", "generation": "\n    double x0=0;\n    double x1=1;\n    double f0=poly(xs,x0);\n    double f1=poly(xs,x1);\n    while (f0*f1>0)\n    {\n        x0=x1;\n        x1*=2;\n        f0=poly(xs,x0);\n        f1=poly(xs,x1);\n    }\n    double x2=x0-(f0/(f1-f0));\n    while (abs(poly(xs,x2))>0.0001)\n    {\n        x0=x1;\n        x1=x2;\n        f0=poly(xs,x0);\n        f1=poly(xs,x1);\n        x2=x0-(f0/(f1-f0));\n    }\n    return x2;\n}\n"}
{"task_id": "CPP/33", "generation": "\n    vector<int> l1;\n    for(int i=0;i<l.size();i++){\n        if(i%3==0){\n            l1.push_back(l[i]);\n        }\n    }\n    sort(l1.begin(),l1.end());\n    for(int i=0;i<l.size();i++){\n        if(i%3==0){\n            l[i]=l1[i/3];\n        }\n    }\n    return l;\n}\n"}
{"task_id": "CPP/34", "generation": "\n    sort(l.begin(),l.end());\n    vector<int> res;\n    for(int i=0;i<l.size();i++){\n        if(i==0||l[i]!=l[i-1]){\n            res.push_back(l[i]);\n        }\n    }\n    return res;\n}\n"}
{"task_id": "CPP/35", "generation": "\n    float max=0;\n    for(int i=0;i<l.size();i++){\n        if(l[i]>max){\n            max=l[i];\n        }\n    }\n    return max;\n}\n"}
{"task_id": "CPP/36", "generation": "\n    int count=0;\n    for(int i=1;i<n;i++){\n        if(i%11==0||i%13==0){\n            int temp=i;\n            while(temp>0){\n                if(temp%10==7){\n                    count++;\n                }\n                temp=temp/10;\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/37", "generation": "\n    vector<float> l1;\n    for(int i=0;i<l.size();i++){\n        if(i%2==0){\n            l1.push_back(l[i]);\n        }\n    }\n    sort(l1.begin(),l1.end());\n    for(int i=0;i<l.size();i++){\n        if(i%2==0){\n            l[i]=l1[i/2];\n        }\n    }\n    return l;\n}\n"}
{"task_id": "CPP/38", "generation": "\n    int l=s.length();\n    int num=(l+2)/3;\n    string x,output;\n    int i;\n    for (i=0;i*3<l;i++)\n    {\n        //cycle elements in each group. Unless group has fewer elements than 3.\n        x=s.substr(i*3,3);\n        if (x.length()==3) x=x.substr(2)+x[0]+x[1];\n        output=output+x;\n    }\n    return output;\n}\n\n"}
{"task_id": "CPP/39", "generation": "\n    int a=0,b=1,c=0;\n    int i=0;\n    while(i<n){\n        c=a+b;\n        a=b;\n        b=c;\n        if(c%2!=0){\n            int j=3;\n            while(j*j<=c){\n                if(c%j==0){\n                    break;\n                }\n                j+=2;\n            }\n            if(j*j>c){\n                i++;\n            }\n        }\n    }\n    return c;\n}"}
{"task_id": "CPP/40", "generation": "\n    int n = l.size();\n    for(int i=0;i<n-2;i++){\n        for(int j=i+1;j<n-1;j++){\n            for(int k=j+1;k<n;k++){\n                if(l[i]+l[j]+l[k]==0){\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/41", "generation": "\n    int i, j, k, l, m, p, q, r, s, t, u, v, w, x, y, z, a, b, c, d, e, f, g, h, i1, j1, k1, l1, m1, n1, o, p1, q1, r1, s1, t1, u1, v1, w1, x1, y1, z1, a1, b1, c1, d1, e1, f1, g1, h1, i2, j2, k2, l2, m2, n2, o1, p2, q2, r2, s2, t2, u2, v2, w2, x2, y2, z2, a2, b2, c2, d2, e2, f2, g2, h2, i3, j3, k3, l3, m3, n3, o2, p3, q3, r3, s3, t3, u3, v3, w3, x3, y3, z3, a3, b3, c3, d3, e3, f3, g3, h3, i4, j4, k4, l4, m4, n4, o3, p4, q4, r4, s4, t4, u4, v4, w4, x4, y4, z4, a4, b4, c4, d4, e4, f4, g4, h4, i5, j5, k5, l5, m5, n5, o4, p5, q5, r5, s5, t5, u5, v5, w5, x5, y5, z5, a5, b5, c5, d5, e5, f5, g5, h5, i6, j6, k6, l6, m6, n6, o5, p6, q6, r6, s6, t6, u6, v6, w6, x6, y6, z6, a6, b6, c6, d6, e6, f6, g"}
{"task_id": "CPP/42", "generation": "\n    for(int i=0;i<l.size();i++){\n        l[i]+=1;\n    }\n    return l;\n}\n"}
{"task_id": "CPP/43", "generation": "\n    for(int i=0;i<l.size();i++){\n        for(int j=i+1;j<l.size();j++){\n            if(l[i]+l[j]==0){\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/44", "generation": "\n    string s=\"\";\n    while(x>0){\n        s=to_string(x%base)+s;\n        x=x/base;\n    }\n    return s;\n}\n"}
{"task_id": "CPP/45", "generation": "\n    return 0.5*a*h;\n}\n"}
{"task_id": "CPP/46", "generation": "\n    int a[4];\n    a[0]=0;\n    a[1]=0;\n    a[2]=2;\n    a[3]=0;\n    if(n<4)\n        return a[n];\n    for(int i=4;i<=n;i++){\n        int temp=a[0]+a[1]+a[2]+a[3];\n        a[0]=a[1];\n        a[1]=a[2];\n        a[2]=a[3];\n        a[3]=temp;\n    }\n    return a[3];\n}\n"}
{"task_id": "CPP/47", "generation": "\n    sort(l.begin(),l.end());\n    int n=l.size();\n    if(n%2==0){\n        return (l[n/2]+l[n/2-1])/2;\n    }\n    else{\n        return l[n/2];\n    }\n}\n"}
{"task_id": "CPP/48", "generation": "\n    int i=0;\n    int j=text.length()-1;\n    while(i<j){\n        if(text[i]!=text[j]){\n            return false;\n        }\n        i++;\n        j--;\n    }\n    return true;\n}"}
{"task_id": "CPP/49", "generation": "\n    if(n==0) return 1;\n    int x=modp(n/2,p);\n    if(n%2==0) return (x*x)%p;\n    else return ((x*x)%p*3)%p;\n}\n"}
{"task_id": "CPP/50", "generation": "\n    string out;\n    int i;\n    for (i=0;i<s.length();i++)\n    {\n        int w=((int)s[i]-5-(int)'a')%26+(int)'a';   \n        out=out+(char)w;\n    }\n    return out;\n}\n"}
{"task_id": "CPP/51", "generation": "\n    string vowels=\"aeiouAEIOU\";\n    string result=\"\";\n    for(int i=0;i<text.length();i++){\n        if(vowels.find(text[i])==string::npos){\n            result+=text[i];\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/52", "generation": "\n    for(int i=0;i<l.size();i++){\n        if(l[i]>=t){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/53", "generation": "\n    return x+y;\n}"}
{"task_id": "CPP/54", "generation": "\n    sort(s0.begin(),s0.end());\n    sort(s1.begin(),s1.end());\n    return s0==s1;\n}\n"}
{"task_id": "CPP/55", "generation": "\n    if(n==0) return 0;\n    if(n==1) return 1;\n    return fib(n-1)+fib(n-2);\n}\n"}
{"task_id": "CPP/56", "generation": "\n    int count=0;\n    for(int i=0;i<brackets.length();i++){\n        if(brackets[i]=='<'){\n            count++;\n        }\n        else{\n            count--;\n        }\n        if(count<0){\n            return false;\n        }\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/57", "generation": "\n    bool increasing = true;\n    bool decreasing = true;\n    for(int i = 0; i < l.size()-1; i++){\n        if(l[i] > l[i+1]){\n            increasing = false;\n        }\n        if(l[i] < l[i+1]){\n            decreasing = false;\n        }\n    }\n    return increasing || decreasing;\n}\n"}
{"task_id": "CPP/58", "generation": "\n    vector<int> l3;\n    for(int i=0;i<l1.size();i++){\n        for(int j=0;j<l2.size();j++){\n            if(l1[i]==l2[j]){\n                l3.push_back(l1[i]);\n            }\n        }\n    }\n    sort(l3.begin(),l3.end());\n    l3.erase(unique(l3.begin(),l3.end()),l3.end());\n    return l3;\n}\n"}
{"task_id": "CPP/59", "generation": "\n    int i;\n    for(i=2;i<=n;i++){\n        if(n%i==0){\n            n=n/i;\n            i--;\n        }\n    }\n    return i;\n}\n"}
{"task_id": "CPP/60", "generation": "\n    int sum=0;\n    for(int i=1;i<=n;i++){\n        sum+=i;\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/61", "generation": "\n    int count=0;\n    for(int i=0;i<brackets.length();i++){\n        if(brackets[i]=='('){\n            count++;\n        }\n        else if(brackets[i]==')'){\n            count--;\n        }\n        if(count<0){\n            return false;\n        }\n    }\n    if(count==0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/62", "generation": "\n    vector<float> res;\n    for(int i=1;i<xs.size();i++){\n        res.push_back(xs[i]*i);\n    }\n    return res;\n}\n"}
{"task_id": "CPP/63", "generation": "\n    if(n==0) return 0;\n    if(n==1) return 0;\n    if(n==2) return 1;\n    int a=0,b=0,c=1;\n    for(int i=3;i<=n;i++){\n        int temp=a+b+c;\n        a=b;\n        b=c;\n        c=temp;\n    }\n    return c;\n}\n"}
{"task_id": "CPP/64", "generation": "\n    int count=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'){\n            count++;\n        }\n    }\n    if(s[s.length()-1]=='y' || s[s.length()-1]=='Y'){\n        count++;\n    }\n    return count;\n}\n"}
{"task_id": "CPP/65", "generation": "\n    string s=\"\";\n    while(x>0){\n        s=s+(char)(x%10+'0');\n        x=x/10;\n    }\n    if(shift>s.length()){\n        reverse(s.begin(),s.end());\n        return s;\n    }\n    string s1=s.substr(s.length()-shift,s.length());\n    string s2=s.substr(0,s.length()-shift);\n    s=s1+s2;\n    return s;\n}\n"}
{"task_id": "CPP/66", "generation": "\n    int sum=0;\n    for(int i=0;i<s.length();i++)\n    {\n        if(s[i]>=65 && s[i]<=90)\n        {\n            sum+=s[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/67", "generation": "\n    int a=0,o=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]=='a'){\n            a=s[i+1]-48;\n        }\n        if(s[i]=='o'){\n            o=s[i+1]-48;\n        }\n    }\n    return n-a-o;\n}\n"}
{"task_id": "CPP/68", "generation": "\n    int min=1000000;\n    int index=0;\n    for(int i=0;i<arr.size();i++){\n        if(arr[i]%2==0){\n            if(arr[i]<min){\n                min=arr[i];\n                index=i;\n            }\n        }\n    }\n    if(min==1000000){\n        return {};\n    }\n    else{\n        return {min,index};\n    }\n}\n"}
{"task_id": "CPP/69", "generation": "\n    int max=-1;\n    for(int i=0;i<lst.size();i++){\n        int count=0;\n        for(int j=0;j<lst.size();j++){\n            if(lst[i]==lst[j]){\n                count++;\n            }\n        }\n        if(count>=lst[i]&&lst[i]>max){\n            max=lst[i];\n        }\n    }\n    return max;\n}\n"}
{"task_id": "CPP/70", "generation": "\n    vector<int> result;\n    sort(lst.begin(), lst.end());\n    int i = 0;\n    while (i < lst.size()){\n        result.push_back(lst[i]);\n        i += 2;\n    }\n    i = 1;\n    while (i < lst.size()){\n        result.push_back(lst[i]);\n        i += 2;\n    }\n    return result;\n}\n"}
{"task_id": "CPP/71", "generation": "\n    if(a+b>c && a+c>b && b+c>a){\n        float s=(a+b+c)/2;\n        float area=sqrt(s*(s-a)*(s-b)*(s-c));\n        return area;\n    }\n    else{\n        return -1;\n    }\n}\n"}
{"task_id": "CPP/72", "generation": "\n    int sum=0;\n    for(int i=0;i<q.size();i++){\n        sum+=q[i];\n    }\n    if(sum>w){\n        return false;\n    }\n    for(int i=0;i<q.size()/2;i++){\n        if(q[i]!=q[q.size()-1-i]){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/73", "generation": "\n    int n=arr.size();\n    int i=0,j=n-1;\n    int count=0;\n    while(i<j){\n        if(arr[i]!=arr[j]){\n            count++;\n        }\n        i++;\n        j--;\n    }\n    return count;\n}\n"}
{"task_id": "CPP/74", "generation": "\n    int sum1=0,sum2=0;\n    for(int i=0;i<lst1.size();i++){\n        sum1+=lst1[i].size();\n    }\n    for(int i=0;i<lst2.size();i++){\n        sum2+=lst2[i].size();\n    }\n    if(sum1<sum2){\n        return lst1;\n    }\n    else if(sum1>sum2){\n        return lst2;\n    }\n    else{\n        return lst1;\n    }\n}\n"}
{"task_id": "CPP/75", "generation": "\n    int count=0;\n    for(int i=2;i<=a;i++){\n        if(a%i==0){\n            for(int j=2;j<i;j++){\n                if(i%j==0){\n                    break;\n                }\n                else if(j==i-1){\n                    count++;\n                }\n            }\n        }\n    }\n    if(count==3){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/76", "generation": "\n    int i=0;\n    while(pow(n,i)<x){\n        i++;\n    }\n    if(pow(n,i)==x){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n"}
{"task_id": "CPP/77", "generation": "\n    if(a==0) return true;\n    int b=sqrt(a);\n    if(b*b==a) return true;\n    return false;\n}\n"}
{"task_id": "CPP/78", "generation": "\n    int count=0;\n    for(int i=0;i<num.length();i++){\n        if(num[i]=='2'||num[i]=='3'||num[i]=='5'||num[i]=='7'||num[i]=='B'||num[i]=='D'){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/79", "generation": "\n    string binary = \"\";\n    while(decimal > 0){\n        binary = to_string(decimal % 2) + binary;\n        decimal /= 2;\n    }\n    return \"db\" + binary + \"db\";\n}\n"}
{"task_id": "CPP/80", "generation": "\n    if(s.length()<3) return false;\n    for(int i=0;i<s.length()-2;i++){\n        if(s[i]==s[i+1]||s[i]==s[i+2]||s[i+1]==s[i+2]) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/81", "generation": "\n    vector<string> result;\n    for(int i=0;i<grades.size();i++){\n        if(grades[i]==4.0){\n            result.push_back(\"A+\");\n        }\n        else if(grades[i]>3.7){\n            result.push_back(\"A\");\n        }\n        else if(grades[i]>3.3){\n            result.push_back(\"A-\");\n        }\n        else if(grades[i]>3.0){\n            result.push_back(\"B+\");\n        }\n        else if(grades[i]>2.7){\n            result.push_back(\"B\");\n        }\n        else if(grades[i]>2.3){\n            result.push_back(\"B-\");\n        }\n        else if(grades[i]>2.0){\n            result.push_back(\"C+\");\n        }\n        else if(grades[i]>1.7){\n            result.push_back(\"C\");\n        }\n        else if(grades[i]>1.3){\n            result.push_back(\"C-\");\n        }\n        else if(grades[i]>1.0){\n            result.push_back(\"D+\");\n        }\n        else if(grades[i]>0.7){\n            result.push_back(\"D\");\n        }\n        else if(grades[i]>0.0){\n            result.push_back(\"D-\");\n        }\n        else{\n            result.push_back(\"E\");\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/82", "generation": "\n    int len = str.length();\n    if(len == 1) return true;\n    for(int i = 2; i <= len/2; i++){\n        if(len % i == 0) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/83", "generation": "\n    if(n==1) return 2;\n    if(n==2) return 4;\n    int a=2,b=4;\n    for(int i=3;i<=n;i++){\n        int c=a+b;\n        a=b;\n        b=c;\n    }\n    return b;\n}\n"}
{"task_id": "CPP/84", "generation": "\n    string binary = \"\";\n    while(N > 0){\n        binary = to_string(N % 2) + binary;\n        N /= 2;\n    }\n    return binary;\n}\n"}
{"task_id": "CPP/85", "generation": "\n    int sum=0;\n    for(int i=1;i<lst.size();i+=2)\n    {\n        if(lst[i]%2==0)\n        {\n            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/86", "generation": "\n    string ans=\"\";\n    string temp=\"\";\n    for(int i=0;i<s.length();i++){\n        if(s[i]==' '){\n            sort(temp.begin(),temp.end());\n            ans+=temp;\n            ans+=s[i];\n            temp=\"\";\n        }\n        else{\n            temp+=s[i];\n        }\n    }\n    sort(temp.begin(),temp.end());\n    ans+=temp;\n    return ans;\n}\n"}
{"task_id": "CPP/87", "generation": "\n    vector<vector<int>> ans;\n    for(int i=0;i<lst.size();i++){\n        for(int j=0;j<lst[i].size();j++){\n            if(lst[i][j]==x){\n                ans.push_back({i,j});\n            }\n        }\n    }\n    for(int i=0;i<ans.size();i++){\n        for(int j=i+1;j<ans.size();j++){\n            if(ans[i][0]>ans[j][0]){\n                swap(ans[i],ans[j]);\n            }\n            else if(ans[i][0]==ans[j][0]){\n                if(ans[i][1]<ans[j][1]){\n                    swap(ans[i],ans[j]);\n                }\n            }\n        }\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/88", "generation": "\n    int sum = array[0] + array[array.size()-1];\n    if(sum%2==0){\n        sort(array.begin(),array.end(),greater<int>());\n    }\n    else{\n        sort(array.begin(),array.end());\n    }\n    return array;\n}\n"}
{"task_id": "CPP/89", "generation": "\n    string ans=\"\";\n    for(int i=0;i<s.length();i++){\n        if(s[i]>=65 && s[i]<=90){\n            ans+=(s[i]+4);\n        }\n        else if(s[i]>=97 && s[i]<=122){\n            ans+=(s[i]+4);\n        }\n        else{\n            ans+=s[i];\n        }\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/90", "generation": "\n    if(lst.size() < 2) return -1;\n    sort(lst.begin(), lst.end());\n    for(int i = 1; i < lst.size(); i++){\n        if(lst[i] != lst[i-1]) return lst[i];\n    }\n    return -1;\n}\n"}
{"task_id": "CPP/91", "generation": "\n    int count=0;\n    for(int i=0;i<S.length();i++){\n        if(S[i]=='I'){\n            if(S[i+1]==' '){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/92", "generation": "\n    if(a==int(a)&&b==int(b)&&c==int(c)){\n        if(a==b+c||b==a+c||c==a+b){\n            return true;\n        }\n    }\n    return false;\n}\n"}
{"task_id": "CPP/93", "generation": "\n    string encoded_message = \"\";\n    for(int i = 0; i < message.length(); i++){\n        char c = message[i];\n        if(islower(c)){\n            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'){\n                c = c + 2;\n                if(c > 'z'){\n                    c = c - 26;\n                }\n            }\n            c = toupper(c);\n        }\n        else if(isupper(c)){\n            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U'){\n                c = c + 2;\n                if(c > 'Z'){\n                    c = c - 26;\n                }\n            }\n            c = tolower(c);\n        }\n        encoded_message += c;\n    }\n    return encoded_message;\n}\n"}
{"task_id": "CPP/94", "generation": "\n    int max=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]>max){\n            max=lst[i];\n        }\n    }\n    string s=to_string(max);\n    int sum=0;\n    for(int i=0;i<s.length();i++){\n        sum+=s[i]-'0';\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/95", "generation": "\n    if(dict.empty()) return false;\n    bool is_upper = true;\n    bool is_lower = true;\n    for(auto it = dict.begin(); it != dict.end(); it++){\n        if(isupper(it->first[0])) is_lower = false;\n        if(islower(it->first[0])) is_upper = false;\n    }\n    return is_upper || is_lower;\n}\n"}
{"task_id": "CPP/96", "generation": "\n    vector<int> primes;\n    if(n<=1) return primes;\n    for(int i=2;i<n;i++){\n        bool is_prime=true;\n        for(int j=2;j*j<=i;j++){\n            if(i%j==0){\n                is_prime=false;\n                break;\n            }\n        }\n        if(is_prime) primes.push_back(i);\n    }\n    return primes;\n}\n"}
{"task_id": "CPP/97", "generation": "\n    int a1=a%10;\n    int b1=b%10;\n    return a1*b1;\n}\n"}
{"task_id": "CPP/98", "generation": "\n    int count=0;\n    for(int i=0;i<s.length();i+=2){\n        if(s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/99", "generation": "\n    int i=0;\n    int j=0;\n    int k=0;\n    int l=0;\n    int m=0;\n    int n=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int r=0;\n    int s=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int i1=0;\n    int j1=0;\n    int k1=0;\n    int l1=0;\n    int m1=0;\n    int n1=0;\n    int o1=0;\n    int p1=0;\n    int q1=0;\n    int r1=0;\n    int s1=0;\n    int t1=0;\n    int u1=0;\n    int v1=0;\n    int w1=0;\n    int x1=0;\n    int y1=0;\n    int z1=0;\n    int a1=0;\n    int b1=0;\n    int c1=0;\n    int d1=0;\n    int e1=0;\n    int f1=0;\n    int g1=0;\n    int h1=0;\n    int i2=0;\n    int j2=0;\n    int k2=0;\n    int l2=0;\n    int m2=0;\n    int n2=0;\n    int o2=0;\n    int p2=0;\n    int q2=0;\n    int r2=0;\n    int s2=0;\n    int t2=0;\n    int u2=0;\n    int v2=0;\n    int w2=0;\n    int x2=0;\n    int y2=0;\n    int z2=0;\n    int a2=0;\n    int b2=0;\n    int c2=0;\n    int d2=0;\n    int e2=0;\n    int f2=0;\n    int g2=0"}
{"task_id": "CPP/100", "generation": "\n    vector<int> pile;\n    pile.push_back(n);\n    for(int i=1;i<n;i++){\n        if(n%2==0){\n            pile.push_back(pile[i-1]+2);\n        }\n        else{\n            pile.push_back(pile[i-1]+2);\n        }\n    }\n    return pile;\n}\n"}
{"task_id": "CPP/101", "generation": "\n    vector<string> v;\n    string temp=\"\";\n    for(int i=0;i<s.length();i++){\n        if(s[i]==','){\n            v.push_back(temp);\n            temp=\"\";\n        }\n        else if(s[i]==' '){\n            if(temp.length()>0){\n                v.push_back(temp);\n                temp=\"\";\n            }\n        }\n        else{\n            temp+=s[i];\n        }\n    }\n    if(temp.length()>0){\n        v.push_back(temp);\n    }\n    return v;\n}\n"}
{"task_id": "CPP/102", "generation": "\n    if(x%2==0){\n        if(x<=y){\n            return x;\n        }\n        else{\n            return -1;\n        }\n    }\n    else{\n        if(x+1<=y){\n            return x+1;\n        }\n        else{\n            return -1;\n        }\n    }\n}\n"}
{"task_id": "CPP/103", "generation": "\n    if(n>m) return \"-1\";\n    int sum=0;\n    for(int i=n;i<=m;i++){\n        sum+=i;\n    }\n    int avg=floor(sum/(m-n+1));\n    string ans=\"\";\n    while(avg>0){\n        ans=to_string(avg%2)+ans;\n        avg/=2;\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/104", "generation": "\n    vector<int> y;\n    for(int i=0;i<x.size();i++){\n        int temp=x[i];\n        int flag=0;\n        while(temp>0){\n            int rem=temp%10;\n            if(rem%2==0){\n                flag=1;\n                break;\n            }\n            temp=temp/10;\n        }\n        if(flag==0){\n            y.push_back(x[i]);\n        }\n    }\n    sort(y.begin(),y.end());\n    return y;\n}\n"}
{"task_id": "CPP/105", "generation": "\n    map<int, vector<string>> m;\n    for(int i=0;i<arr.size();i++){\n        if(arr[i]>=1 && arr[i]<=9){\n            m[arr[i]].push_back(to_string(arr[i]));\n        }\n    }\n    vector<string> res;\n    for(auto it=m.begin();it!=m.end();it++){\n        sort(it->second.begin(),it->second.end());\n        for(int i=0;i<it->second.size();i++){\n            res.push_back(it->second[i]);\n        }\n    }\n    return res;\n}\nvector<string> sort_replace(vector<int> arr){\n    vector<string> res;\n    map<int,string> m;\n    m[1]=\"One\";\n    m[2]=\"Two\";\n    m[3]=\"Three\";\n    m[4]=\"Four\";\n    m[5]=\"Five\";\n    m[6]=\"Six\";\n    m[7]=\"Seven\";\n    m[8]=\"Eight\";\n    m[9]=\"Nine\";\n    vector<string> temp=by_length(arr);\n    reverse(temp.begin(),temp.end());\n    for(int i=0;i<temp.size();i++){\n        res.push_back(m[stoi(temp[i])]);\n    }\n    return res;\n}\n"}
{"task_id": "CPP/106", "generation": "\n    vector<int> v;\n    for(int i=1;i<=n;i++){\n        if(i%2==0){\n            int fact=1;\n            for(int j=1;j<=i;j++){\n                fact*=j;\n            }\n            v.push_back(fact);\n        }\n        else{\n            int sum=0;\n            for(int j=1;j<=i;j++){\n                sum+=j;\n            }\n            v.push_back(sum);\n        }\n    }\n    return v;\n}\n"}
{"task_id": "CPP/107", "generation": "\n    int even=0,odd=0;\n    for(int i=1;i<=n;i++){\n        string s=to_string(i);\n        string rev(s.rbegin(),s.rend());\n        if(s==rev){\n            if(i%2==0) even++;\n            else odd++;\n        }\n    }\n    return {even,odd};\n}\n"}
{"task_id": "CPP/108", "generation": "\n    int count=0;\n    for(int i=0;i<n.size();i++){\n        int sum=0;\n        int num=n[i];\n        if(num<0){\n            num=-num;\n        }\n        while(num>0){\n            sum+=num%10;\n            num=num/10;\n        }\n        if(sum>0){\n            count++;\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/109", "generation": "\n    int n=arr.size();\n    if(n==0) return true;\n    int count=0;\n    for(int i=0;i<n;i++){\n        if(arr[i]>arr[(i+1)%n]) count++;\n    }\n    return count<=1;\n}\n"}
{"task_id": "CPP/110", "generation": "\n    int odd=0;\n    for(int i=0;i<lst1.size();i++){\n        if(lst1[i]%2!=0){\n            odd++;\n        }\n    }\n    for(int i=0;i<lst2.size();i++){\n        if(lst2[i]%2==0){\n            odd--;\n        }\n    }\n    if(odd<=0){\n        return \"YES\";\n    }\n    else{\n        return \"NO\";\n    }\n}\n"}
{"task_id": "CPP/111", "generation": "\n    map<char,int> result;\n    map<char,int> temp;\n    int max=0;\n    for(int i=0;i<test.length();i++){\n        if(test[i]!=' '){\n            temp[test[i]]++;\n            if(temp[test[i]]>max){\n                max=temp[test[i]];\n            }\n        }\n    }\n    for(map<char,int>::iterator it=temp.begin();it!=temp.end();it++){\n        if(it->second==max){\n            result[it->first]=it->second;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/112", "generation": "\n    string result=\"\";\n    for(int i=0;i<s.length();i++){\n        bool flag=true;\n        for(int j=0;j<c.length();j++){\n            if(s[i]==c[j]){\n                flag=false;\n                break;\n            }\n        }\n        if(flag){\n            result+=s[i];\n        }\n    }\n    string temp=result;\n    reverse(temp.begin(),temp.end());\n    if(temp==result){\n        return {result,\"True\"};\n    }\n    else{\n        return {result,\"False\"};\n    }\n}\n"}
{"task_id": "CPP/113", "generation": "\n    vector<string> out;\n    for(int i=0;i<lst.size();i++){\n        int count=0;\n        for(int j=0;j<lst[i].size();j++){\n            if((lst[i][j]-'0')%2==1){\n                count++;\n            }\n        }\n        string s=\"the number of odd elements \"+to_string(count)+\"n the str\"+to_string(count)+\"ng \"+to_string(count)+\" of the \"+to_string(count)+\"nput.\";\n        out.push_back(s);\n    }\n    return out;\n}\n"}
{"task_id": "CPP/114", "generation": "\n    long long min_sum = nums[0];\n    long long sum = 0;\n    for(int i = 0; i < nums.size(); i++){\n        sum += nums[i];\n        if(sum < min_sum){\n            min_sum = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n        }\n    }\n    return min_sum;\n}\n"}
{"task_id": "CPP/115", "generation": "\n    int max=0;\n    for(int i=0;i<grid.size();i++){\n        for(int j=0;j<grid[i].size();j++){\n            if(grid[i][j]>max){\n                max=grid[i][j];\n            }\n        }\n    }\n    return max/capacity;\n}\n"}
{"task_id": "CPP/116", "generation": "\n    vector<int> ones;\n    for(int i=0;i<arr.size();i++){\n        int count=0;\n        int temp=arr[i];\n        while(temp>0){\n            if(temp%2==1){\n                count++;\n            }\n            temp=temp/2;\n        }\n        ones.push_back(count);\n    }\n    for(int i=0;i<arr.size();i++){\n        for(int j=0;j<arr.size()-1;j++){\n            if(ones[j]>ones[j+1]){\n                int temp=ones[j];\n                ones[j]=ones[j+1];\n                ones[j+1]=temp;\n                temp=arr[j];\n                arr[j]=arr[j+1];\n                arr[j+1]=temp;\n            }\n            else if(ones[j]==ones[j+1]){\n                if(arr[j]>arr[j+1]){\n                    int temp=ones[j];\n                    ones[j]=ones[j+1];\n                    ones[j+1]=temp;\n                    temp=arr[j];\n                    arr[j]=arr[j+1];\n                    arr[j+1]=temp;\n                }\n            }\n        }\n    }\n    return arr;\n}\n"}
{"task_id": "CPP/117", "generation": "\n    vector<string> res;\n    string temp=\"\";\n    int count=0;\n    for(int i=0;i<s.length();i++){\n        if(s[i]==' '){\n            if(count==n){\n                res.push_back(temp);\n            }\n            temp=\"\";\n            count=0;\n        }\n        else if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U'){\n            continue;\n        }\n        else{\n            temp+=s[i];\n            count++;\n        }\n    }\n    if(count==n){\n        res.push_back(temp);\n    }\n    return res;\n}\n"}
{"task_id": "CPP/118", "generation": "\n    string vowels=\"aeiouAEIOU\";\n    string result=\"\";\n    for(int i=word.length()-1;i>0;i--){\n        if(vowels.find(word[i])!=string::npos && vowels.find(word[i-1])!=string::npos){\n            result=word[i];\n            break;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/119", "generation": "\n    string s1=lst[0],s2=lst[1];\n    int i,j;\n    int count1=0,count2=0;\n    for(i=0;i<s1.length();i++){\n        if(s1[i]=='(') count1++;\n        else count1--;\n    }\n    for(i=0;i<s2.length();i++){\n        if(s2[i]=='(') count2++;\n        else count2--;\n    }\n    if(count1==0 && count2==0) return \"Yes\";\n    if(count1==0 && count2!=0) return \"Yes\";\n    if(count1!=0 && count2==0) return \"Yes\";\n    if(count1%2==0 && count2%2==0) return \"Yes\";\n    return \"No\";\n}\n"}
{"task_id": "CPP/120", "generation": "\n    sort(arr.begin(),arr.end());\n    vector<int> res(arr.end()-k,arr.end());\n    return res;\n}\n"}
{"task_id": "CPP/121", "generation": "\n    int sum=0;\n    for(int i=0;i<lst.size();i+=2){\n        if(lst[i]%2!=0){\n            sum+=lst[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/122", "generation": "\n    int sum=0;\n    for(int i=0;i<k;i++){\n        if(arr[i]<10){\n            sum+=arr[i];\n        }\n        else if(arr[i]<100){\n            sum+=arr[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/123", "generation": "\n    vector<int> odd;\n    while(n!=1){\n        if(n%2==0){\n            n=n/2;\n        }\n        else{\n            odd.push_back(n);\n            n=3*n+1;\n        }\n    }\n    odd.push_back(1);\n    sort(odd.begin(),odd.end());\n    return odd;\n}\n"}
{"task_id": "CPP/124", "generation": "\n    int month,day,year;\n    sscanf(date.c_str(),\"%d-%d-%d\",&month,&day,&year);\n    if(month<1||month>12) return false;\n    if(day<1||day>31) return false;\n    if(month==2){\n        if(day>29) return false;\n        if(day==29){\n            if(year%4==0){\n                if(year%100==0){\n                    if(year%400==0) return true;\n                    else return false;\n                }\n                else return true;\n            }\n            else return false;\n        }\n    }\n    if(month==4||month==6||month==9||month==11){\n        if(day>30) return false;\n    }\n    return true;\n}\n"}
{"task_id": "CPP/125", "generation": "\n    vector<string> res;\n    string temp=\"\";\n    for(int i=0;i<txt.length();i++){\n        if(txt[i]==' '){\n            res.push_back(temp);\n            temp=\"\";\n        }\n        else if(txt[i]==','){\n            res.push_back(temp);\n            temp=\"\";\n        }\n        else{\n            temp+=txt[i];\n        }\n    }\n    if(temp.length()>0){\n        res.push_back(temp);\n    }\n    else{\n        int count=0;\n        for(int i=0;i<txt.length();i++){\n            if(txt[i]>=97 && txt[i]<=122){\n                if((txt[i]-97)%2==1){\n                    count++;\n                }\n            }\n        }\n        res.push_back(to_string(count));\n    }\n    return res;\n}\n"}
{"task_id": "CPP/126", "generation": "\n    vector<int> temp = lst;\n    sort(temp.begin(), temp.end());\n    for(int i = 0; i < temp.size(); i++){\n        if(temp[i] != lst[i]){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/127", "generation": "\n    int start = max(interval1[0],interval2[0]);\n    int end = min(interval1[1],interval2[1]);\n    if(start > end) return \"NO\";\n    int len = end - start + 1;\n    if(len < 2) return \"NO\";\n    for(int i = 2; i <= len/2; i++){\n        if(len % i == 0) return \"NO\";\n    }\n    return \"YES\";\n}\n"}
{"task_id": "CPP/128", "generation": "\n    int sum=0,prod=1;\n    if(arr.size()==0)\n        return -32768;\n    for(int i=0;i<arr.size();i++)\n    {\n        sum+=abs(arr[i]);\n        if(arr[i]<0)\n            prod*=-1;\n    }\n    return sum*prod;\n}\n"}
{"task_id": "CPP/129", "generation": "\n    int n = grid.size();\n    vector<vector<int>> dp(n, vector<int>(n, 0));\n    vector<vector<int>> dir = {{0,1}, {0,-1}, {1,0}, {-1,0}};\n    vector<int> res;\n    int minVal = n*n+1;\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            dp[i][j] = grid[i][j];\n            if(grid[i][j] < minVal){\n                minVal = grid[i][j];\n            }\n        }\n    }\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            dp[i][j] -= minVal;\n        }\n    }\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            for(int d=0; d<4; d++){\n                int x = i + dir[d][0];\n                int y = j + dir[d][1];\n                if(x>=0 && x<n && y>=0 && y<n){\n                    dp[i][j] = min(dp[i][j], dp[x][y] + 1);\n                }\n            }\n        }\n    }\n    int minDist = n*n+1;\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            if(dp[i][j] < minDist){\n                minDist = dp[i][j];\n            }\n        }\n    }\n    for(int i=0; i<n; i++){\n        for(int j=0; j<n; j++){\n            if(dp[i][j] == minDist){\n                res.push_back(grid[i][j]);\n            }\n        }\n    }\n    return res;\n}\n"}
{"task_id": "CPP/130", "generation": "\n    vector<int> v;\n    v.push_back(3);\n    if(n==0) return v;\n    v.push_back(1);\n    if(n==1) return v;\n    v.push_back(2);\n    if(n==2) return v;\n    for(int i=3;i<=n;i++){\n        if(i%2==0) v.push_back(1+i/2);\n        else v.push_back(v[i-1]+v[i-2]+v[i-3]);\n    }\n    return v;\n}\n"}
{"task_id": "CPP/131", "generation": "\n    string s = to_string(n);\n    int product = 1;\n    bool isOdd = false;\n    for(int i = 0; i < s.length(); i++){\n        if(s[i] % 2 != 0){\n            product *= s[i] - '0';\n            isOdd = true;\n        }\n    }\n    if(isOdd){\n        return product;\n    }\n    else{\n        return 0;\n    }\n}\n"}
{"task_id": "CPP/132", "generation": "\n    int n = str.length();\n    int count = 0;\n    for(int i=0;i<n;i++){\n        if(str[i]=='['){\n            count++;\n        }\n        else if(str[i]==']'){\n            count--;\n        }\n        if(count<0){\n            return true;\n        }\n    }\n    if(count==0){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n"}
{"task_id": "CPP/133", "generation": "\n    int sum=0;\n    for(int i=0;i<lst.size();i++)\n    {\n        sum+=ceil(lst[i])*ceil(lst[i]);\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/134", "generation": "\n    if(txt.length()==0) return false;\n    char last=txt[txt.length()-1];\n    if((last>='a'&&last<='z')||(last>='A'&&last<='Z')){\n        if(txt[txt.length()-2]==' '||txt[txt.length()-2]=='\\0') return true;\n    }\n    return false;\n}\n"}
{"task_id": "CPP/135", "generation": "\n    int i;\n    for(i=1;i<arr.size();i++){\n        if(arr[i]<arr[i-1]){\n            return i-1;\n        }\n    }\n    return -1;\n}\n"}
{"task_id": "CPP/136", "generation": "\n    int max = 0;\n    int min = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(lst[i] < 0){\n            if(lst[i] > max){\n                max = lst[i];\n            }\n        }\n        if(lst[i] > 0){\n            if(lst[i] < min){\n                min = lst[i];\n            }\n        }\n    }\n    if(max == 0){\n        max = 0;\n    }\n    if(min == 0){\n        min = 1;\n    }\n    vector<int> result = {max, min};\n    return result;\n}\n"}
{"task_id": "CPP/137", "generation": "\n    if(a.type()==b.type()){\n        if(a==b){\n            return boost::any(\"None\");\n        }\n        else if(a>b){\n            return a;\n        }\n        else{\n            return b;\n        }\n    }\n    else{\n        double a1=boost::any_cast<double>(a);\n        double b1=boost::any_cast<double>(b);\n        if(a1>b1){\n            return a;\n        }\n        else if(a1<b1){\n            return b;\n        }\n        else{\n            return boost::any(\"None\");\n        }\n    }\n}"}
{"task_id": "CPP/138", "generation": "\n    if(n%2==0 && n>=8)\n        return true;\n    else\n        return false;\n}\n"}
{"task_id": "CPP/139", "generation": "\n    long long result = 1;\n    for(int i = n; i > 0; i--){\n        result *= i;\n    }\n    return result;\n}\n"}
{"task_id": "CPP/140", "generation": "\n    string result=\"\";\n    int count=0;\n    for(int i=0;i<text.length();i++){\n        if(text[i]==' '){\n            count++;\n            if(count==1){\n                result+='_';\n            }\n            else if(count==2){\n                result+='-';\n            }\n        }\n        else{\n            if(count==1){\n                result+=text[i];\n            }\n            else if(count==2){\n                result+=text[i];\n            }\n            else{\n                result+=text[i];\n            }\n            count=0;\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/141", "generation": "\n    int count=0;\n    for(int i=0;i<file_name.length();i++)\n    {\n        if(file_name[i]>=48 && file_name[i]<=57)\n        {\n            count++;\n        }\n    }\n    if(count>3)\n    {\n        return \"No\";\n    }\n    int dot=0;\n    for(int i=0;i<file_name.length();i++)\n    {\n        if(file_name[i]=='.')\n        {\n            dot++;\n        }\n    }\n    if(dot!=1)\n    {\n        return \"No\";\n    }\n    int flag=0;\n    for(int i=0;i<file_name.length();i++)\n    {\n        if(file_name[i]=='.')\n        {\n            flag=i;\n            break;\n        }\n    }\n    if(file_name[0]>=65 && file_name[0]<=90)\n    {\n        for(int i=1;i<flag;i++)\n        {\n            if((file_name[i]>=65 && file_name[i]<=90) || (file_name[i]>=97 && file_name[i]<=122))\n            {\n                continue;\n            }\n            else\n            {\n                return \"No\";\n            }\n        }\n    }\n    else if(file_name[0]>=97 && file_name[0]<=122)\n    {\n        for(int i=1;i<flag;i++)\n        {\n            if((file_name[i]>=65 && file_name[i]<=90) || (file_name[i]>=97 && file_name[i]<=122))\n            {\n                continue;\n            }\n            else\n            {\n                return \"No\";\n            }\n        }\n    }\n    else\n    {\n        return \"No\";\n    }\n    string s=file_name.substr(flag+1,file_name.length()-flag-1);\n    if(s==\"txt\" || s==\"exe\" || s==\"dll\")\n    {\n        return \"Yes\";\n    }\n    else\n    {\n        return \"No\";\n    }\n}\n"}
{"task_id": "CPP/142", "generation": "\n    int sum = 0;\n    for(int i = 0; i < lst.size(); i++){\n        if(i % 3 == 0){\n            sum += lst[i] * lst[i];\n        }\n        else if(i % 4 == 0){\n            sum += lst[i] * lst[i] * lst[i];\n        }\n        else{\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/143", "generation": "\n    string result = \"\";\n    string word = \"\";\n    for(int i = 0; i < sentence.length(); i++){\n        if(sentence[i] == ' '){\n            if(is_prime(word.length())){\n                result += word + \" \";\n            }\n            word = \"\";\n        }\n        else{\n            word += sentence[i];\n        }\n    }\n    if(is_prime(word.length())){\n        result += word;\n    }\n    return result;\n}\nbool is_prime(int n){\n    if(n < 2){\n        return false;\n    }\n    for(int i = 2; i * i <= n; i++){\n        if(n % i == 0){\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "CPP/144", "generation": "\n    int a,b,c,d;\n    sscanf(x.c_str(),\"%d/%d\",&a,&b);\n    sscanf(n.c_str(),\"%d/%d\",&c,&d);\n    if(a%d==0&&b%c==0) return true;\n    else return false;\n}\n"}
{"task_id": "CPP/145", "generation": "\n    vector<int> result;\n    vector<int> sum;\n    for(int i=0;i<nums.size();i++){\n        int temp=0;\n        int num=nums[i];\n        while(num!=0){\n            temp+=num%10;\n            num/=10;\n        }\n        sum.push_back(temp);\n    }\n    for(int i=0;i<nums.size();i++){\n        int min=INT_MAX;\n        int index=0;\n        for(int j=0;j<sum.size();j++){\n            if(sum[j]<min){\n                min=sum[j];\n                index=j;\n            }\n        }\n        result.push_back(nums[index]);\n        sum.erase(sum.begin()+index);\n        nums.erase(nums.begin()+index);\n    }\n    return result;\n}\n"}
{"task_id": "CPP/146", "generation": "\n    int count=0;\n    for(int i=0;i<nums.size();i++){\n        if(nums[i]>10){\n            string s=to_string(nums[i]);\n            if(s[0]%2==1 && s[s.size()-1]%2==1){\n                count++;\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/147", "generation": "\n    vector<int> a(n);\n    for(int i=0;i<n;i++){\n        a[i]=i*i-i+1;\n    }\n    int count=0;\n    for(int i=0;i<n;i++){\n        for(int j=i+1;j<n;j++){\n            for(int k=j+1;k<n;k++){\n                if((a[i]+a[j]+a[k])%3==0){\n                    count++;\n                }\n            }\n        }\n    }\n    return count;\n}\n"}
{"task_id": "CPP/148", "generation": "\n    vector<string> v;\n    if(planet1==\"Mercury\"&&planet2==\"Uranus\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Earth\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Jupiter\"&&planet2==\"Neptune\"){\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Mercury\"){\n        v.push_back(\"Venus\");\n    }\n    else if(planet1==\"Mercury\"&&planet2==\"Earth\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Earth\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Uranus\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Earth\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Uranus\"&&planet2==\"Mercury\"){\n        v.push_back(\"Venus\");\n        v.push_back(\"Earth\");\n        v.push_back(\"Mars\");\n        v.push_back(\"Jupiter\");\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Uranus\"&&planet2==\"Earth\"){\n        v.push_back(\"Uranus\");\n    }\n    else if(planet1==\"Earth\"&&planet2==\"Earth\"){\n        v.push_back(\"Earth\");\n    }\n    else if(planet1==\"Neptune\"&&planet2==\"Jupiter\"){\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n        v.push_back(\"Neptune\");\n    }\n    else if(planet1==\"Jupiter\"&&planet2==\"Neptune\"){\n        v.push_back(\"Saturn\");\n        v.push_back(\"Uranus\");\n        v.push_back(\"Neptune\");\n    }\n    else if(planet1==\"Neptune\"&&planet2==\"Neptune\"){\n        v.push_back(\"Neptune\");\n    }\n    else if(planet1==\"Saturn\"&&planet2==\"Jupiter\"){\n        v.push_back(\"Saturn\");\n    }\n    else if(planet1==\"Jupiter\"&&planet2==\"J"}
{"task_id": "CPP/149", "generation": "\n    vector<string> result;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i].length()%2==0){\n            result.push_back(lst[i]);\n        }\n    }\n    sort(result.begin(),result.end(),[](string a,string b){\n        if(a.length()==b.length()){\n            return a<b;\n        }\n        return a.length()<b.length();\n    });\n    return result;\n}\n"}
{"task_id": "CPP/150", "generation": "\n    int i;\n    for(i=2;i<n;i++){\n        if(n%i==0){\n            return y;\n        }\n    }\n    return x;\n}\n"}
{"task_id": "CPP/151", "generation": "\n    long long sum=0;\n    for(int i=0;i<lst.size();i++){\n        if(lst[i]<0||floor(lst[i])!=lst[i]) continue;\n        if(lst[i]%2==1) sum+=pow(lst[i],2);\n    }\n    return sum;\n}\n"}
{"task_id": "CPP/152", "generation": "\n    vector<int> res;\n    for(int i=0;i<game.size();i++){\n        res.push_back(abs(game[i]-guess[i]));\n    }\n    return res;\n}\n"}
{"task_id": "CPP/153", "generation": "\n    int max=-1000;\n    string max_name=\"\";\n    for(int i=0;i<extensions.size();i++){\n        int cap=0,sm=0;\n        for(int j=0;j<extensions[i].size();j++){\n            if(extensions[i][j]>=65 && extensions[i][j]<=90){\n                cap++;\n            }\n            else if(extensions[i][j]>=97 && extensions[i][j]<=122){\n                sm++;\n            }\n        }\n        if(max<cap-sm){\n            max=cap-sm;\n            max_name=extensions[i];\n        }\n    }\n    return class_name+\".\"+max_name;\n}\n"}
{"task_id": "CPP/154", "generation": "\n    int lena=a.length();\n    int lenb=b.length();\n    if(lena<lenb) return false;\n    for(int i=0;i<lena;i++){\n        string temp=a.substr(i,lenb);\n        if(temp==b) return true;\n        temp=temp.substr(1,lenb-1)+temp[0];\n        if(temp==b) return true;\n    }\n    return false;\n}\n"}
{"task_id": "CPP/155", "generation": "\n    int even=0,odd=0;\n    string s=to_string(abs(num));\n    for(int i=0;i<s.length();i++){\n        if(s[i]%2==0) even++;\n        else odd++;\n    }\n    return {even,odd};\n}\n"}
{"task_id": "CPP/156", "generation": "\n    string result = \"\";\n    vector<int> values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n    vector<string> symbols = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"};\n    for (int i = 0; i < values.size(); i++) {\n        while (number >= values[i]) {\n            result += symbols[i];\n            number -= values[i];\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/157", "generation": "\n    float s=(a+b+c)/2;\n    float area=sqrt(s*(s-a)*(s-b)*(s-c));\n    if(area==sqrt((a*a)+(b*b))||area==sqrt((a*a)+(c*c))||area==sqrt((b*b)+(c*c)))\n        return true;\n    else\n        return false;\n}\n"}
{"task_id": "CPP/158", "generation": "\n    string max_word=\"\";\n    int max_unique=0;\n    for(int i=0;i<words.size();i++){\n        int unique=0;\n        string temp=words[i];\n        sort(temp.begin(),temp.end());\n        for(int j=0;j<temp.size()-1;j++){\n            if(temp[j]!=temp[j+1]){\n                unique++;\n            }\n        }\n        if(unique>max_unique){\n            max_unique=unique;\n            max_word=words[i];\n        }\n        else if(unique==max_unique){\n            if(max_word>words[i]){\n                max_word=words[i];\n            }\n        }\n    }\n    return max_word;\n}\n"}
{"task_id": "CPP/159", "generation": "\n    vector<int> ans;\n    if(need>remaining){\n        ans.push_back(number+remaining);\n        ans.push_back(0);\n    }\n    else{\n        ans.push_back(number+need);\n        ans.push_back(remaining-need);\n    }\n    return ans;\n}\n"}
{"task_id": "CPP/160", "generation": "\n    int result = operand[0];\n    for(int i=0;i<operato.size();i++){\n        if(operato[i]==\"+\"){\n            result = result + operand[i+1];\n        }\n        else if(operato[i]==\"-\"){\n            result = result - operand[i+1];\n        }\n        else if(operato[i]==\"*\"){\n            result = result * operand[i+1];\n        }\n        else if(operato[i]==\"//\"){\n            result = result / operand[i+1];\n        }\n        else if(operato[i]==\"**\"){\n            result = pow(result,operand[i+1]);\n        }\n    }\n    return result;\n}\n"}
{"task_id": "CPP/161", "generation": "\n    int i=0;\n    int flag=0;\n    for(i=0;i<s.length();i++)\n    {\n        if((s[i]>=65 && s[i]<=90) || (s[i]>=97 && s[i]<=122))\n        {\n            flag=1;\n            break;\n        }\n    }\n    if(flag==0)\n    {\n        string temp=\"\";\n        for(i=s.length()-1;i>=0;i--)\n        {\n            temp+=s[i];\n        }\n        return temp;\n    }\n    else\n    {\n        for(i=0;i<s.length();i++)\n        {\n            if((s[i]>=65 && s[i]<=90) || (s[i]>=97 && s[i]<=122))\n            {\n                if(s[i]>=65 && s[i]<=90)\n                {\n                    s[i]+=32;\n                }\n                else\n                {\n                    s[i]-=32;\n                }\n            }\n        }\n        return s;\n    }\n}\n"}
{"task_id": "CPP/162", "generation": "\n    if(text.empty()) return \"None\";\n    unsigned char digest[MD5_DIGEST_LENGTH];\n    MD5((unsigned char*)text.c_str(), text.length(), (unsigned char*)&digest);\n    char mdString[33];\n    for(int i = 0; i < 16; i++)\n        sprintf(&mdString[i*2], \"%02x\", (unsigned int)digest[i]);\n    return mdString;\n}"}
{"task_id": "CPP/163", "generation": "\n    vector<int> v;\n    for(int i=a;i<=b;i++){\n        int x=i;\n        while(x>0){\n            int r=x%10;\n            if(r%2==0){\n                v.push_back(r);\n            }\n            x=x/10;\n        }\n    }\n    return v;\n}\n"}
